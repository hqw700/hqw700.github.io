<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Android Emulator串口使用和问题处理</title>
    <link href="/2025/09/05/2025-09-05-emulator-serial-use-and-bugfix/"/>
    <url>/2025/09/05/2025-09-05-emulator-serial-use-and-bugfix/</url>
    
    <content type="html"><![CDATA[<h2 id="一，基本使用"><a href="#一，基本使用" class="headerlink" title="一，基本使用"></a>一，基本使用</h2><p>在模拟器启动时，可以通过参数 –shell-serial 指定串口功能，有以下几种参数</p><table><thead><tr><th>启动命令</th><th>连接方式</th></tr></thead><tbody><tr><td>-shell-serial stdio</td><td>当前终端</td></tr><tr><td>-shell-serial tcp::4444,server,nowait</td><td>socat -,raw,echo&#x3D;0,escape&#x3D;0x04 TCP:localhost:4444 （ctrl + d exit）</td></tr><tr><td>-shell-serial unix:&#x2F;tmp&#x2F;emu-console,server,nowait</td><td>socat -,raw,echo&#x3D;0,escape&#x3D;0x04 unix:&#x2F;tmp&#x2F;emu-console （ctrl + d exit）</td></tr></tbody></table><h2 id="二，串口无法使用问题处理"><a href="#二，串口无法使用问题处理" class="headerlink" title="二，串口无法使用问题处理"></a>二，串口无法使用问题处理</h2><h3 id="调试"><a href="#调试" class="headerlink" title="调试"></a>调试</h3><ul><li><p>手动启动串口，adb root shell 中：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">setprop ctl.start console</span><br></code></pre></td></tr></table></figure></li><li><p>dmesg log</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs log">init: Control message: Could not ctl.start for &#x27;console&#x27; from pid: 5156 (setprop ctl.start console): Couldn&#x27;t open console &#x27;/dev/ttyAMA0&#x27;: Permission denied<br>[  408.263647] type=1400 audit(1756997294.564:1863): avc: denied &#123; read write &#125; for comm=&quot;init&quot; name=&quot;ttyAMA0&quot; dev=&quot;tmpfs&quot; ino=331 scontext=u:r:init:s0 tcontext=u:object_r:device:s0 tclass=chr_file permissive=0<br></code></pre></td></tr></table></figure></li><li><p><code>chmod 777 /dev/ttyAMA0</code>问题一样</p></li><li><p><code>setenforce 0</code>串口正常</p></li><li><p>查看selinux权限</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash"><span class="hljs-built_in">ls</span> -liZ /dev/ttyAMA0</span>                                                                                                                                   <br>331 crw-rw-rw- 1 root root u:object_r:device:s0  204,  64 2025-09-04 22:41 /dev/ttyAMA0<br></code></pre></td></tr></table></figure></li></ul><h3 id="Fixed"><a href="#Fixed" class="headerlink" title="Fixed"></a>Fixed</h3><ul><li><p>修改aosp源码</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs diff">device/generic/goldfish$ git diff <br><span class="hljs-comment">diff --git a/sepolicy/common/file_contexts b/sepolicy/common/file_contexts</span><br><span class="hljs-comment">index d58270b..f6a03d4 100644</span><br><span class="hljs-comment">--- a/sepolicy/common/file_contexts</span><br><span class="hljs-comment">+++ b/sepolicy/common/file_contexts</span><br><span class="hljs-meta">@@ -20,6 +20,7 @@</span><br> /dev/dri/renderD128          u:object_r:gpu_device:s0<br> /dev/ttyGF[0-9]*             u:object_r:serial_device:s0<br> /dev/ttyS2                   u:object_r:console_device:s0<br><span class="hljs-addition">+/dev/ttyAMA[0-9]*            u:object_r:serial_device:s0</span><br> <br> # kernel console<br> /dev/hvc0                    u:object_r:serial_device:s0<br></code></pre></td></tr></table></figure></li><li><p>编译</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm">make selinux_policy -<span class="hljs-keyword">j8</span><br><span class="hljs-keyword"></span>adb <span class="hljs-keyword">sync</span><br><span class="hljs-keyword"></span>adb reboot<br></code></pre></td></tr></table></figure></li><li><p>重启后串口正常，查看selinux权限</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash"><span class="hljs-built_in">ls</span> /dev/ttyAMA0 -liZ</span><br>393 crw------- 1 root root u:object_r:serial_device:s0  204,  64 2025-09-04 23:56 /dev/ttyAMA0<br></code></pre></td></tr></table></figure></li></ul><h2 id="三，在user版本中使用串口"><a href="#三，在user版本中使用串口" class="headerlink" title="三，在user版本中使用串口"></a>三，在user版本中使用串口</h2><p>正在在user版本中是无法使用串口的，可以修改init.rc， 在user版本中启动串口并支持root</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs diff">system/core$ git diff .<br><span class="hljs-comment">diff --git a/rootdir/init.rc b/rootdir/init.rc</span><br><span class="hljs-comment">index 2b53d88..5f3c0b4 100644</span><br><span class="hljs-comment">--- a/rootdir/init.rc</span><br><span class="hljs-comment">+++ b/rootdir/init.rc</span><br><span class="hljs-meta">@@ -475,6 +475,7 @@</span> on init<br>     start servicemanager<br>     start hwservicemanager<br>     start vndservicemanager<br><span class="hljs-addition">+    start console</span><br> <br> # Run boringssl self test for each ABI.  Any failures trigger reboot to firmware.<br> on init &amp;&amp; property:ro.product.cpu.abilist32=*<br><span class="hljs-meta">@@ -1264,9 +1265,9 @@</span> service console /system/bin/sh<br>     class core<br>     console<br>     disabled<br><span class="hljs-deletion">-    user shell</span><br><span class="hljs-deletion">-    group shell log readproc</span><br><span class="hljs-deletion">-    seclabel u:r:shell:s0</span><br><span class="hljs-addition">+    user root</span><br><span class="hljs-addition">+    group root log readproc</span><br><span class="hljs-addition">+    seclabel u:r:su:s0</span><br>     setenv HOSTNAME console<br> <br> on property:ro.debuggable=1<br></code></pre></td></tr></table></figure><blockquote><p>操作系统：Mac mini M4<br>编译机：Ubuntu-22.04 AMD 5800X<br>手机：emulator 36.1 ARM64 on Mac<br>源码版本：AOSP android-13.0.0_r74</p></blockquote>]]></content>
    
    
    <categories>
      
      <category>虚拟化</category>
      
    </categories>
    
    
    <tags>
      
      <tag>虚拟化</tag>
      
      <tag>bugfix</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>给repo项目打patch</title>
    <link href="/2024/04/29/2024-04-29-repo-patch-after-repo-diff/"/>
    <url>/2024/04/29/2024-04-29-repo-patch-after-repo-diff/</url>
    
    <content type="html"><![CDATA[<h2 id="查看当前修改，可能涉及几个不同的仓库"><a href="#查看当前修改，可能涉及几个不同的仓库" class="headerlink" title="查看当前修改，可能涉及几个不同的仓库"></a>查看当前修改，可能涉及几个不同的仓库</h2><p>eg.</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">$ </span><span class="language-bash">repo status</span><br>project art/                                    (*** NO BRANCH ***)<br> -m     runtime/mem_map.cc<br>project build/make/                             (*** NO BRANCH ***)<br> -m     target/board/generic_x86/BoardConfig.mk<br> -m     target/board/generic_x86/device.mk<br> -m     target/product/runtime_libart.mk<br>project prebuilts/misc/                         (*** NO BRANCH ***)<br> -m     linux-x86/flex/flex-2.5.39<br>project packages/apps/DeskClock/                (*** NO BRANCH ***)<br> -m     src/com/android/deskclock/stopwatch/StopwatchFragment.java<br>project system/core/                            (*** NO BRANCH ***)<br> -m     rootdir/etc/ld.config.txt<br> -m     rootdir/init.rc<br></code></pre></td></tr></table></figure><h2 id="使用repo-diff导出修改"><a href="#使用repo-diff导出修改" class="headerlink" title="使用repo diff导出修改"></a>使用repo diff导出修改</h2><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs maxima">repo <span class="hljs-built_in">diff</span> &gt; repo.<span class="hljs-built_in">diff</span><br></code></pre></td></tr></table></figure><h2 id="在其它repo仓库中导入修改"><a href="#在其它repo仓库中导入修改" class="headerlink" title="在其它repo仓库中导入修改"></a>在其它repo仓库中导入修改</h2><p>使用以下脚本<br>repo-diff-patch.sh</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-meta">#!/bin/sh</span><br><span class="hljs-comment">## Script to patch up diff reated by `repo diff`</span><br><br><span class="hljs-keyword">if</span> [ -z <span class="hljs-string">&quot;<span class="hljs-variable">$1</span>&quot;</span> ] || [ ! -e <span class="hljs-string">&quot;<span class="hljs-variable">$1</span>&quot;</span> ]; <span class="hljs-keyword">then</span><br>    <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;Usages: <span class="hljs-variable">$0</span> &lt;repo_diff_file&gt;&quot;</span>;<br>    <span class="hljs-built_in">exit</span> 0;<br><span class="hljs-keyword">fi</span><br><br><span class="hljs-built_in">rm</span> -fr _tmp_splits*<br><span class="hljs-built_in">cat</span> <span class="hljs-variable">$1</span> | <span class="hljs-built_in">csplit</span> -qf <span class="hljs-string">&#x27;&#x27;</span> -b <span class="hljs-string">&quot;_tmp_splits.%d.diff&quot;</span> - <span class="hljs-string">&#x27;/^project.*\/$/&#x27;</span> <span class="hljs-string">&#x27;&#123;*&#125;&#x27;</span> <br><br>working_dir=`<span class="hljs-built_in">pwd</span>`<br><br><span class="hljs-keyword">for</span> proj_diff <span class="hljs-keyword">in</span> `<span class="hljs-built_in">ls</span> _tmp_splits.*.diff`<br><span class="hljs-keyword">do</span> <br>    chg_dir=`<span class="hljs-built_in">cat</span> <span class="hljs-variable">$proj_diff</span> | grep <span class="hljs-string">&#x27;^project.*\/$&#x27;</span> | <span class="hljs-built_in">cut</span> -d <span class="hljs-string">&quot; &quot;</span> -f 2`<br>    <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;FILE: <span class="hljs-variable">$proj_diff</span> <span class="hljs-variable">$chg_dir</span>&quot;</span><br>    <span class="hljs-keyword">if</span> [ -e <span class="hljs-variable">$chg_dir</span> ]; <span class="hljs-keyword">then</span><br>        ( <span class="hljs-built_in">cd</span> <span class="hljs-variable">$chg_dir</span>; \<br>            <span class="hljs-built_in">cat</span> <span class="hljs-variable">$working_dir</span>/<span class="hljs-variable">$proj_diff</span> | grep -v <span class="hljs-string">&#x27;^project.*\/$&#x27;</span> | patch -Np1;);<br>    <span class="hljs-keyword">else</span><br>        <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;<span class="hljs-variable">$0</span>: Project directory <span class="hljs-variable">$chg_dir</span> don&#x27;t exists.&quot;</span>;<br>    <span class="hljs-keyword">fi</span><br><span class="hljs-keyword">done</span><br></code></pre></td></tr></table></figure><h3 id="打patch"><a href="#打patch" class="headerlink" title="打patch"></a>打patch</h3><figure class="highlight nix"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs nix">$ <span class="hljs-symbol">./repo-diff-patch.sh</span> repo.diff<br><span class="hljs-params">FILE:</span> _tmp_splits.<span class="hljs-number">0</span>.diff<br><span class="hljs-params">patch:</span> <span class="hljs-operator">*</span><span class="hljs-operator">*</span><span class="hljs-operator">*</span><span class="hljs-operator">*</span> Only garbage was found <span class="hljs-keyword">in</span> the patch input.<br><span class="hljs-params">FILE:</span> _tmp_splits.<span class="hljs-number">1</span>.diff art<span class="hljs-symbol">/</span><br>patching file runtime<span class="hljs-symbol">/mem_map.cc</span><br><span class="hljs-params">FILE:</span> _tmp_splits.<span class="hljs-number">2</span>.diff build<span class="hljs-operator">/</span>make<span class="hljs-symbol">/</span><br>patching file target<span class="hljs-symbol">/board/generic_x86/BoardConfig.mk</span><br>patching file target<span class="hljs-symbol">/board/generic_x86/device.mk</span><br>patching file target<span class="hljs-symbol">/product/runtime_libart.mk</span><br><span class="hljs-params">FILE:</span> _tmp_splits.<span class="hljs-number">3</span>.diff packages<span class="hljs-operator">/</span>apps<span class="hljs-operator">/</span>DeskClock<span class="hljs-symbol">/</span><br>patching file src<span class="hljs-symbol">/com/android/deskclock/stopwatch/StopwatchFragment.java</span><br><span class="hljs-params">FILE:</span> _tmp_splits.<span class="hljs-number">4</span>.diff prebuilts<span class="hljs-operator">/</span>misc<span class="hljs-symbol">/</span><br>patching file linux-x86<span class="hljs-symbol">/flex/flex-2.5.39</span><br><span class="hljs-params">FILE:</span> _tmp_splits.<span class="hljs-number">5</span>.diff system<span class="hljs-operator">/</span>core<span class="hljs-symbol">/</span><br>patching file rootdir<span class="hljs-symbol">/etc/ld.config.txt</span><br>patching file rootdir<span class="hljs-operator">/</span>init.rc<br></code></pre></td></tr></table></figure><h3 id="After-patch"><a href="#After-patch" class="headerlink" title="After patch"></a>After patch</h3><p>其中prebuilts&#x2F;misc&#x2F;linux-x86&#x2F;flex&#x2F;flex-2.5.39为是二进制文件，patch失败</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">$ </span><span class="language-bash">repo status</span><br>project art/                                    (*** NO BRANCH ***)<br> -m     runtime/mem_map.cc<br>project build/make/                             (*** NO BRANCH ***)<br> -m     target/board/generic_x86/BoardConfig.mk<br> -m     target/board/generic_x86/device.mk<br> -m     target/product/runtime_libart.mk<br>project packages/apps/DeskClock/                (*** NO BRANCH ***)<br> -m     src/com/android/deskclock/stopwatch/StopwatchFragment.java<br>project system/core/                            (*** NO BRANCH ***)<br> -m     rootdir/etc/ld.config.txt<br> -m     rootdir/init.rc<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>代码管理</category>
      
    </categories>
    
    
    <tags>
      
      <tag>git</tag>
      
      <tag>教程</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>PVE setup igpu sriov mode in N100</title>
    <link href="/2024/04/11/2024-04-11-pve-setup-igpu-sriov-mode-in-n100/"/>
    <url>/2024/04/11/2024-04-11-pve-setup-igpu-sriov-mode-in-n100/</url>
    
    <content type="html"><![CDATA[<p>previous post: <a href="https://hqw700.github.io/2024/04/10/2024-04-10-pve-setup-in-n100/">PVE setup in n100</a></p><h2 id="grub-配置"><a href="#grub-配置" class="headerlink" title="grub 配置"></a>grub 配置</h2><p>edit &#x2F;etc&#x2F;default&#x2F;grub</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">GRUB_CMDLINE_LINUX_DEFAULT</span>=<span class="hljs-string">&quot;quiet intel_iommu=on i915.enable_guc=3 i915.max_vfs=7&quot;</span><br></code></pre></td></tr></table></figure><p>After edit</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs n1ql"><span class="hljs-keyword">update</span>-grub<br><span class="hljs-keyword">update</span>-initramfs -u<br>reboot<br></code></pre></td></tr></table></figure><h2 id="modules-配置"><a href="#modules-配置" class="headerlink" title="modules 配置"></a>modules 配置</h2><p>edit &#x2F;etc&#x2F;modules</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc">vfio<br>vfio<span class="hljs-emphasis">_iommu_type1</span><br><span class="hljs-emphasis">vfio_pci</span><br><span class="hljs-emphasis">vfio_</span>virqfd<br></code></pre></td></tr></table></figure><h2 id="安装linux-headers"><a href="#安装linux-headers" class="headerlink" title="安装linux headers"></a>安装linux headers</h2><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">wget</span> http://mirrors.ustc.edu.cn/proxmox/debian/dists/bookworm/pve-no-subscription/binary-amd64/proxmox-headers-<span class="hljs-number">6</span>.<span class="hljs-number">5</span>.<span class="hljs-number">11</span>-<span class="hljs-number">8</span>-pve_6.<span class="hljs-number">5</span>.<span class="hljs-number">11</span>-<span class="hljs-number">8</span>_amd64.deb<br><span class="hljs-attribute">dpkg</span> -i proxmox-headers-<span class="hljs-number">6</span>.<span class="hljs-number">5</span>.<span class="hljs-number">11</span>-<span class="hljs-number">8</span>-pve_6.<span class="hljs-number">5</span>.<span class="hljs-number">11</span>-<span class="hljs-number">8</span>_amd64.deb<br></code></pre></td></tr></table></figure><h2 id="安装依赖包"><a href="#安装依赖包" class="headerlink" title="安装依赖包"></a>安装依赖包</h2><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm">apt <span class="hljs-keyword">install </span>-y  <span class="hljs-keyword">build-* </span>git unzip dkms<br></code></pre></td></tr></table></figure><h2 id="下载并编译sriov驱动"><a href="#下载并编译sriov驱动" class="headerlink" title="下载并编译sriov驱动"></a>下载并编译sriov驱动</h2><h3 id="代码下载"><a href="#代码下载" class="headerlink" title="代码下载"></a>代码下载</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> /usr/src<br>git <span class="hljs-built_in">clone</span> https://github.com/strongtz/i915-sriov-dkms i915-sriov-dkms-6.5<br></code></pre></td></tr></table></figure><h2 id="代码修改"><a href="#代码修改" class="headerlink" title="代码修改"></a>代码修改</h2><p>edit &#x2F;usr&#x2F;src&#x2F;i915-sriov-dkms-6.1&#x2F;dkms.conf with the following:</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">PACKAGE_NAME</span>=<span class="hljs-string">&quot;i915-sriov-dkms&quot;</span><br><span class="hljs-attr">PACKAGE_VERSION</span>=<span class="hljs-string">&quot;6.5&quot;</span><br></code></pre></td></tr></table></figure><h2 id="编译"><a href="#编译" class="headerlink" title="编译"></a>编译</h2><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">dkms</span> install --force -m i915-sriov-dkms -v <span class="hljs-number">6</span>.<span class="hljs-number">5</span><br><span class="hljs-attribute">reboot</span><br></code></pre></td></tr></table></figure><p><img src="/img/blog/pve-sriov-1.png"></p><h2 id="重启后查看dmesg"><a href="#重启后查看dmesg" class="headerlink" title="重启后查看dmesg"></a>重启后查看dmesg</h2><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs 1c">dmesg <span class="hljs-string">| grep -ie guc -ie hc -ie sriov</span><br></code></pre></td></tr></table></figure><p>显示 <strong>Running in SR-IOV PF mode</strong>，说明驱动加载成功<br><img src="/img/blog/pve-sriov-2.png"></p><h2 id="设置核显切分"><a href="#设置核显切分" class="headerlink" title="设置核显切分"></a>设置核显切分</h2><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">echo</span> <span class="hljs-number">7</span> &gt; /sys/devices/pci0000:<span class="hljs-number">00</span>/<span class="hljs-number">0000</span>:<span class="hljs-number">00</span>:<span class="hljs-number">02</span>.<span class="hljs-number">0</span>/sriov_numvfs<br></code></pre></td></tr></table></figure><p><code>lspci | grep -i vga</code> 显示有8个显卡，说明切分成功<br><img src="/img/blog/pve-sriov-3.png"></p>]]></content>
    
    
    <categories>
      
      <category>虚拟化</category>
      
    </categories>
    
    
    <tags>
      
      <tag>教程</tag>
      
      <tag>虚拟化</tag>
      
      <tag>PVE</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>PVE setup in n100</title>
    <link href="/2024/04/10/2024-04-10-pve-setup-in-n100/"/>
    <url>/2024/04/10/2024-04-10-pve-setup-in-n100/</url>
    
    <content type="html"><![CDATA[<h2 id="ISO镜像下载"><a href="#ISO镜像下载" class="headerlink" title="ISO镜像下载"></a>ISO镜像下载</h2><p>1.2GB<br><a href="https://enterprise.proxmox.com/iso/proxmox-ve_8.1-2.iso">https://enterprise.proxmox.com/iso/proxmox-ve_8.1-2.iso</a><br>或者使用国内源<br><a href="https://mirrors.bfsu.edu.cn/proxmox/iso/proxmox-ve_8.1-2.iso">https://mirrors.bfsu.edu.cn/proxmox/iso/proxmox-ve_8.1-2.iso</a></p><h2 id="制作启动盘"><a href="#制作启动盘" class="headerlink" title="制作启动盘"></a>制作启动盘</h2><p><img src="/img/blog/rufus-pve-iso.png"></p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>把u盘插进主机中启动安装<br><img src="/img/blog/pve-install-1.png"><br><img src="/img/blog/pve-install-2.png"><br><img src="/img/blog/pve-install-3.png"></p><h3 id="拔掉U盘然后等待自动重启"><a href="#拔掉U盘然后等待自动重启" class="headerlink" title="拔掉U盘然后等待自动重启"></a>拔掉U盘然后等待自动重启</h3><p><img src="/img/blog/pve-install-4.png"></p><h2 id="在另外一台PC通过网址进入"><a href="#在另外一台PC通过网址进入" class="headerlink" title="在另外一台PC通过网址进入"></a>在另外一台PC通过网址进入</h2><p><img src="/img/blog/pve-install-5.png"></p><h2 id="更新国内源地址"><a href="#更新国内源地址" class="headerlink" title="更新国内源地址"></a>更新国内源地址</h2><p>参照北外源文档：<a href="https://mirrors.tuna.tsinghua.edu.cn/help/proxmox/">https://mirrors.tuna.tsinghua.edu.cn/help/proxmox/</a></p>]]></content>
    
    
    <categories>
      
      <category>虚拟化</category>
      
    </categories>
    
    
    <tags>
      
      <tag>教程</tag>
      
      <tag>虚拟化</tag>
      
      <tag>PVE</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Custom Android Emulator kernel</title>
    <link href="/2024/04/08/2024-04-08-custom-android-emulator-kernel/"/>
    <url>/2024/04/08/2024-04-08-custom-android-emulator-kernel/</url>
    
    <content type="html"><![CDATA[<p>Take Android9 x86-64 kernel compilation as an example</p><h2 id="Download-Source-code"><a href="#Download-Source-code" class="headerlink" title="Download Source code"></a>Download Source code</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">$ </span><span class="language-bash">repo init --depth 1 -u https://mirrors.bfsu.edu.cn/git/AOSP/kernel/manifest \</span><br><span class="language-bash">  -b p-goldfish-android-goldfish-4.4-dev</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">repo <span class="hljs-built_in">sync</span> -c --no-tags</span><br></code></pre></td></tr></table></figure><h2 id="Custom-config"><a href="#Custom-config" class="headerlink" title="Custom config"></a>Custom config</h2><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">$ <span class="hljs-attribute">BUILD_CONFIG</span>=goldfish/build.config.goldfish.x86_64 <span class="hljs-attribute">LTO</span>=thin build/config.sh<br></code></pre></td></tr></table></figure><p>After executing config.sh, the <strong>goldfish&#x2F;arch&#x2F;x86&#x2F;configs&#x2F;x86_64_ranchu_defconfig</strong> file will be modified.</p><h2 id="Build"><a href="#Build" class="headerlink" title="Build"></a>Build</h2><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">$ <span class="hljs-attribute">BUILD_CONFIG</span>=goldfish/build.config.goldfish.x86_64 <span class="hljs-attribute">LTO</span>=thin build/build.sh -j20<br></code></pre></td></tr></table></figure><p>gen the kernel file: <strong>.&#x2F;out&#x2F;x86_64&#x2F;dist&#x2F;bzImage</strong></p><h2 id="Run"><a href="#Run" class="headerlink" title="Run"></a>Run</h2><p>Run as previous post: <a href="https://hqw700.github.io/2024/03/26/2024-03-26-linux-install-android-emulator/">Install Android SDK and run emulator in linux</a>  </p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli">$ emulator <span class="hljs-string">...</span> -qemu -kernel <span class="hljs-string">./out/x86_64/dist/bzImage</span> <span class="hljs-string">...</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>虚拟化</category>
      
    </categories>
    
    
    <tags>
      
      <tag>教程</tag>
      
      <tag>虚拟化</tag>
      
      <tag>Android系统</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Use gdb debug ndk executable file</title>
    <link href="/2024/04/01/2024-04-01-use-gdb-debug-ndk-executable/"/>
    <url>/2024/04/01/2024-04-01-use-gdb-debug-ndk-executable/</url>
    
    <content type="html"><![CDATA[<p>Code in previous post: <a href="https://hqw700.github.io/2024/03/26/2024-03-26-linux-install-android-emulator/">Install android ndk in linux and compile the sample code</a></p><h2 id="Run-in-adb"><a href="#Run-in-adb" class="headerlink" title="Run in adb"></a>Run in adb</h2><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver">$ adb forward tcp:<span class="hljs-number">12345</span> tcp:<span class="hljs-number">12345</span><br>$ adb root<br>$ adb <span class="hljs-built_in">shell</span> gdbserver64 :<span class="hljs-number">12345</span> /data/<span class="hljs-built_in">local</span>/tmp/hello_cmake<br>Process /data/<span class="hljs-built_in">local</span>/tmp/hello_cmake created; pid = <span class="hljs-number">6923</span><br>gdbserver: Unable <span class="hljs-built_in">to</span> determine <span class="hljs-keyword">the</span> <span class="hljs-built_in">number</span> <span class="hljs-keyword">of</span> hardware watchpoints available.<br>gdbserver: Unable <span class="hljs-built_in">to</span> determine <span class="hljs-keyword">the</span> <span class="hljs-built_in">number</span> <span class="hljs-keyword">of</span> hardware breakpoints available.<br>Listening <span class="hljs-keyword">on</span> <span class="hljs-title">port</span> <span class="hljs-title">12345</span><br></code></pre></td></tr></table></figure><h2 id="Use-gdb-in-comand-line-is-ERROR"><a href="#Use-gdb-in-comand-line-is-ERROR" class="headerlink" title="Use gdb in comand-line is ERROR"></a>Use gdb in comand-line is ERROR</h2><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs gams"><span class="hljs-symbol">$</span> cat &lt;&lt; EOF &gt; gdb.config<br><span class="hljs-keyword">set</span> sysroot /home/<span class="hljs-comment">huangqw</span>/github/<span class="hljs-comment">hello-ndk</span><br>b /home/<span class="hljs-comment">huangqw</span>/github/<span class="hljs-comment">hello-ndk</span>/main.cpp:<span class="hljs-number">7</span><br>target remote <span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span>:<span class="hljs-number">12345</span><br>EOF<br></code></pre></td></tr></table></figure><p>Run gdb show error: <strong>Backtrace stopped: not enough registers or memory available to unwind further</strong><br>Can not continue</p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs stata">$ gdb-multiarch -x gdb.config<br>GNU gdb (Ubuntu 8.1.1-0ubuntu1) 8.1.1<br><span class="hljs-keyword">Copyright</span> (C) 2018 Free Software Foundation, Inc.<br>License GPLv3+: GNU GPL <span class="hljs-keyword">version</span> 3 or later &lt;http:<span class="hljs-comment">//gnu.org/licenses/gpl.html&gt;</span><br>This is free software: you are free to change and redistribute it.<br>There is <span class="hljs-keyword">NO</span> WARRANTY, to the extent permitted <span class="hljs-keyword">by</span> law.  <span class="hljs-keyword">Type</span> <span class="hljs-string">&quot;show copying&quot;</span><br>and <span class="hljs-string">&quot;show warranty&quot;</span> <span class="hljs-keyword">for</span> details.<br>This GDB was configured <span class="hljs-keyword">as</span> <span class="hljs-string">&quot;x86_64-linux-gnu&quot;</span>.<br><span class="hljs-keyword">Type</span> <span class="hljs-string">&quot;show configuration&quot;</span> <span class="hljs-keyword">for</span> configuration details.<br><span class="hljs-keyword">For</span> bug reporting instructions, please see:<br>&lt;http:<span class="hljs-comment">//www.gnu.org/software/gdb/bugs/&gt;.</span><br>Find the GDB manual and other documentation resources online at:<br>&lt;http:<span class="hljs-comment">//www.gnu.org/software/gdb/documentation/&gt;.</span><br><span class="hljs-keyword">For</span> <span class="hljs-keyword">help</span>, <span class="hljs-keyword">type</span> <span class="hljs-string">&quot;help&quot;</span>.<br><span class="hljs-keyword">Type</span> <span class="hljs-string">&quot;apropos word&quot;</span> to <span class="hljs-keyword">search</span> <span class="hljs-keyword">for</span> commands related to <span class="hljs-string">&quot;word&quot;</span>.<br><span class="hljs-keyword">No</span> symbol <span class="hljs-keyword">table</span> is loaded.  <span class="hljs-keyword">Use</span> the <span class="hljs-string">&quot;file&quot;</span> command.<br>Make breakpoint pending <span class="hljs-keyword">on</span> future shared library load? (y or [<span class="hljs-keyword">n</span>]) [answered <span class="hljs-keyword">N</span>; <span class="hljs-keyword">input</span> not from terminal]<br><span class="hljs-keyword">No</span> executable <span class="hljs-keyword">file</span> now.<br>warning: Could not load vsyscall page because <span class="hljs-keyword">no</span> executable was specified<br>0x0000007fb7f3b270 <span class="hljs-keyword">in</span> ?? ()<br>(gdb) bt<br>#0  0x0000007fb7f3b270 <span class="hljs-keyword">in</span> ?? ()<br>Backtrace stopped: not enough registers or <span class="hljs-keyword">memory</span> available to unwind further<br>(gdb) c<br>Continuing.<br><br></code></pre></td></tr></table></figure><h2 id="Same-operation-debug-in-clion-is-OK"><a href="#Same-operation-debug-in-clion-is-OK" class="headerlink" title="Same operation debug in clion is OK"></a>Same operation debug in clion is OK</h2><h3 id="clion-config"><a href="#clion-config" class="headerlink" title="clion config"></a>clion config</h3><p><img src="/img/blog/ndk-gdb-1.png" alt="clion gdb config"></p><h3 id="clion-run-remote-debug"><a href="#clion-run-remote-debug" class="headerlink" title="clion run remote debug"></a>clion run remote debug</h3><p><img src="/img/blog/ndk-gdb-2.png" alt="clion run remote debug"></p>]]></content>
    
    
    <categories>
      
      <category>工具使用</category>
      
    </categories>
    
    
    <tags>
      
      <tag>教程</tag>
      
      <tag>Android系统</tag>
      
      <tag>ndk</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Shutdown secure boot when use custom kernel in libvrit</title>
    <link href="/2024/03/31/2024-03-31-shutdown-secure-boot-when-use-custom-kernel-in-libvrit/"/>
    <url>/2024/03/31/2024-03-31-shutdown-secure-boot-when-use-custom-kernel-in-libvrit/</url>
    
    <content type="html"><![CDATA[<h2 id="一，安装命令"><a href="#一，安装命令" class="headerlink" title="一，安装命令"></a>一，安装命令</h2><p>以安装ubuntu20.04为例</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs stylus">$ qemu-<span class="hljs-selector-tag">img</span> create -f qcow2 ubuntu<span class="hljs-selector-class">.qcow2</span> <span class="hljs-number">64</span>G<br>$ virt-install \<br><span class="hljs-attr">--boot</span> uefi \<br><span class="hljs-attr">--name</span> ubuntu \<br><span class="hljs-attr">--vcpus</span> <span class="hljs-number">4</span> \<br><span class="hljs-attr">--cpu</span> host-passthrough \<br><span class="hljs-attr">--ram</span> <span class="hljs-number">4096</span> \<br><span class="hljs-attr">--memballoon</span> <span class="hljs-attribute">none</span> \<br><span class="hljs-attr">--clock</span> <span class="hljs-attribute">offset</span>=<span class="hljs-string">&#x27;localtime&#x27;</span> \<br><span class="hljs-attr">--network</span> network=default \<br><span class="hljs-attr">--graphics</span> vnc,listen=<span class="hljs-number">0.0</span>.<span class="hljs-number">0.0</span>,port=<span class="hljs-number">5901</span> \<br><span class="hljs-attr">--video</span>=qxl \<br><span class="hljs-attr">--disk</span> ./ubuntu<span class="hljs-selector-class">.qcow2</span> \<br><span class="hljs-attr">--cdrom</span>=./ubuntu20.<span class="hljs-number">04</span><span class="hljs-selector-class">.iso</span> \<br><span class="hljs-attr">--boot</span> cdrom,hd \<br><span class="hljs-attr">--input</span> tablet<br></code></pre></td></tr></table></figure><h2 id="二，安装自定义内核"><a href="#二，安装自定义内核" class="headerlink" title="二，安装自定义内核"></a>二，安装自定义内核</h2><p>出现以下错误<br>Loading Linux 5.10.54 …<br>error: bad shim signature<br><img src="/img/blog/atsm-boot-error.png"></p><h3 id="2-1-该问题是由于此时secureboot状态为enabled"><a href="#2-1-该问题是由于此时secureboot状态为enabled" class="headerlink" title="2.1 该问题是由于此时secureboot状态为enabled"></a>2.1 该问题是由于此时secureboot状态为enabled</h3><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs ada">$ mokutil <span class="hljs-comment">--sb-state</span><br>SecureBoot enabled<br></code></pre></td></tr></table></figure><h2 id="三，关闭secure-boot"><a href="#三，关闭secure-boot" class="headerlink" title="三，关闭secure boot"></a>三，关闭secure boot</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs xml">$ virsh edit ubuntu<br><span class="hljs-tag">&lt;<span class="hljs-name">os</span> <span class="hljs-attr">firmware</span>=<span class="hljs-string">&#x27;efi&#x27;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">loader</span> <span class="hljs-attr">secure</span>=<span class="hljs-string">&#x27;yes&#x27;</span>/&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">firmware</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">feature</span> <span class="hljs-attr">enabled</span>=<span class="hljs-string">&#x27;yes&#x27;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&#x27;secure-boot&#x27;</span>/&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">feature</span> <span class="hljs-attr">enabled</span>=<span class="hljs-string">&#x27;no&#x27;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&#x27;enrolled-keys&#x27;</span>/&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">firmware</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">os</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="3-1-重新创建并启动虚机"><a href="#3-1-重新创建并启动虚机" class="headerlink" title="3.1 重新创建并启动虚机"></a>3.1 重新创建并启动虚机</h3><p>如果libvirt版本高于8.1.0, 直接使用<code>virsh start $vm --reset-nvram</code>即可。<br>8.1.0版本以下采用以下命令</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">$ virsh dumpxml ubuntu &gt; ubuntu-with-nosecure.<span class="hljs-keyword">xml</span><br><span class="hljs-title">$</span> virsh undefine --nvram ubuntu<br>$ virsh define ubuntu-with-nosecure.<span class="hljs-keyword">xml</span><br><span class="hljs-title">$</span> virsh <span class="hljs-literal">start</span> ubuntu<br></code></pre></td></tr></table></figure><p>虚机启动后查看此时SecureBoot状态，为disabled即可进行自定义内核安装</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs ada">$ mokutil <span class="hljs-comment">--sb-state</span><br>SecureBoot disabled<br>Platform <span class="hljs-keyword">is</span> <span class="hljs-keyword">in</span> Setup Mode<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>虚拟化</category>
      
    </categories>
    
    
    <tags>
      
      <tag>教程</tag>
      
      <tag>虚拟化</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Build android executable so lib with ndk</title>
    <link href="/2024/03/30/2024-03-30-ndk-build-android-executable-so/"/>
    <url>/2024/03/30/2024-03-30-ndk-build-android-executable-so/</url>
    
    <content type="html"><![CDATA[<p>references：<br><a href="https://www.cnblogs.com/motadou/p/9644566.html">实现可执行的so动态链接库</a></p><h2 id="Sample"><a href="#Sample" class="headerlink" title="Sample"></a>Sample</h2><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs stylus">$ tree hello-shared/<br>hello-shared/<br>├── CMakeLists<span class="hljs-selector-class">.txt</span><br>├── build<span class="hljs-selector-class">.sh</span><br>├── hello<span class="hljs-selector-class">.c</span><br>├── <span class="hljs-selector-tag">main</span>.c<br></code></pre></td></tr></table></figure><ul><li><p>CMakeLists.txt</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs scss"><span class="hljs-built_in">cmake_minimum_required</span>(VERSION <span class="hljs-number">3.5</span>)<br>project (hello_shared)<br><br><span class="hljs-built_in">set</span>(CMAKE_C_FLAGS &quot;$&#123;CMAKE_C_FLAGS&#125; -fPIC&quot;)<br><span class="hljs-built_in">set</span>(CMAKE_CXX_FLAGS &quot;$&#123;CMAKE_CXX_FLAGS&#125; -fPIC&quot;)<br><br># <span class="hljs-built_in">set</span>(CMAKE_SHARED_LINKER_FLAGS &quot;$&#123;CMAKE_SHARED_LINKER_FLAGS&#125; -Wl,-e,lib_entry&quot;)<br><span class="hljs-built_in">set</span>(CMAKE_SHARED_LINKER_FLAGS &quot;$&#123;CMAKE_SHARED_LINKER_FLAGS&#125; -Wl,-e__lib_main&quot;)<br><br><span class="hljs-built_in">add_library</span>(hello SHARED hello.c)<br><span class="hljs-built_in">add_executable</span>(hello_shared main.c)<br><span class="hljs-built_in">target_link_libraries</span>(hello_shared dl)<br></code></pre></td></tr></table></figure></li><li><p>build.sh</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!/bin/bash</span><br><span class="hljs-built_in">rm</span> -rf build-android<br><span class="hljs-built_in">mkdir</span> build-android<br><span class="hljs-built_in">cd</span> build-android<br>cmake -DCMAKE_TOOLCHAIN_FILE=<span class="hljs-variable">$ANDROID_NDK</span>/build/cmake/android.toolchain.cmake \<br>-DANDROID_ABI=<span class="hljs-string">&quot;arm64-v8a&quot;</span> \<br>-DANDROID_NDK=<span class="hljs-variable">$ANDROID_NDK</span> \<br>-DANDROID_PLATFORM=android-21 ..<br>make<br></code></pre></td></tr></table></figure></li><li><p>hello.c</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdlib.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;unistd.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;fcntl.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;string.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;sys/types.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;sys/stat.h&gt;</span></span><br><br><span class="hljs-comment">// Must define the interpretor to be the dynamic linker</span><br><span class="hljs-meta">#<span class="hljs-keyword">ifdef</span> __ANDROID__</span><br>    <span class="hljs-meta">#<span class="hljs-keyword">ifdef</span> __LP64__</span><br>        <span class="hljs-type">const</span> <span class="hljs-type">char</span> service_interp[] __attribute__((section(<span class="hljs-string">&quot;.interp&quot;</span>))) = <span class="hljs-string">&quot;/system/bin/linker64&quot;</span>;<br>    <span class="hljs-meta">#<span class="hljs-keyword">else</span></span><br>        <span class="hljs-type">const</span> <span class="hljs-type">char</span> service_interp[] __attribute__((section(<span class="hljs-string">&quot;.interp&quot;</span>))) = <span class="hljs-string">&quot;/system/bin/linker&quot;</span>;<br>    <span class="hljs-meta">#<span class="hljs-keyword">endif</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">endif</span></span><br><br><span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">CmdLine</span>&#123;</span><br>    <span class="hljs-type">int</span>     argc;<br>    <span class="hljs-type">char</span> ** argv;<br>&#125;;<br> <br><span class="hljs-type">void</span> <span class="hljs-title function_">ReadCmdLine</span><span class="hljs-params">(<span class="hljs-keyword">struct</span> CmdLine * pLine)</span>&#123;<br>    pLine-&gt;argc = <span class="hljs-number">0</span>;<br>    pLine-&gt;argv = <span class="hljs-literal">NULL</span>;<br> <br>    <span class="hljs-type">int32_t</span> iFileId = open(<span class="hljs-string">&quot;/proc/self/cmdline&quot;</span>, O_RDONLY, <span class="hljs-number">0644</span>);<br>    <span class="hljs-keyword">if</span> (iFileId &lt; <span class="hljs-number">0</span>)&#123;<br>        <span class="hljs-keyword">return</span> ;<br>    &#125;<br> <br>    <span class="hljs-type">char</span> szBuff[<span class="hljs-number">8192</span>];<br>    <span class="hljs-type">int</span> iFileSize = read(iFileId, szBuff, <span class="hljs-keyword">sizeof</span>(szBuff));<br>    <span class="hljs-type">int</span> iBegin    = <span class="hljs-number">0</span>;<br>    <span class="hljs-type">int</span> iTemp     = <span class="hljs-number">0</span>;<br>    close(iFileId);<br> <br>    <span class="hljs-keyword">for</span> (iTemp = <span class="hljs-number">0</span>; iTemp &lt; iFileSize; iTemp++)&#123;<br>        <span class="hljs-keyword">if</span> (szBuff[iTemp] == <span class="hljs-string">&#x27;\0&#x27;</span>)&#123;<br>            pLine-&gt;argc++;<br>        &#125;<br>    &#125;<br> <br>    pLine-&gt;argv = (<span class="hljs-type">char</span> **)<span class="hljs-built_in">malloc</span>(pLine-&gt;argc * <span class="hljs-keyword">sizeof</span>(<span class="hljs-type">char</span> *));<br>    <span class="hljs-keyword">for</span> (iTemp = <span class="hljs-number">0</span>, pLine-&gt;argc = <span class="hljs-number">0</span>; iTemp &lt; iFileSize; iTemp++)&#123;<br>        <span class="hljs-keyword">if</span> (szBuff[iTemp] == <span class="hljs-string">&#x27;\0&#x27;</span>)&#123;<br>            <span class="hljs-type">char</span> * p = (<span class="hljs-type">char</span> *)<span class="hljs-built_in">malloc</span>(iTemp - iBegin + <span class="hljs-number">1</span>);<br>            <span class="hljs-built_in">memcpy</span>(p, szBuff + iBegin, iTemp - iBegin);<br>            p[iTemp - iBegin] = <span class="hljs-string">&#x27;\0&#x27;</span>;<br>            pLine-&gt;argv[pLine-&gt;argc++] = p;<br>            iBegin = iTemp + <span class="hljs-number">1</span>;<br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-type">void</span> __lib_main(<span class="hljs-type">void</span>) &#123;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Entry point of libhello.so \n&quot;</span>);<br> <br>    <span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">CmdLine</span> <span class="hljs-title">cmdLine</span>;</span><br>    ReadCmdLine(&amp;cmdLine);<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;argc:%d\n&quot;</span>, cmdLine.argc);<br> <br>    <span class="hljs-type">int</span> iTemp = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span> ( ; iTemp &lt; cmdLine.argc; iTemp++)<br>    &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;arg:%s\n&quot;</span>, cmdLine.argv[iTemp]);<br>    &#125;<br>    _exit(<span class="hljs-number">0</span>);<br>&#125;<br><br><span class="hljs-type">void</span> <span class="hljs-title function_">lib_entry</span><span class="hljs-params">()</span> &#123;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Entry point of lib_entry\n&quot;</span>);<br>    <span class="hljs-built_in">exit</span>(<span class="hljs-number">0</span>);<br>&#125;<br><br><span class="hljs-type">void</span> <span class="hljs-title function_">hello</span><span class="hljs-params">()</span> &#123;<br>   <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Entry point of hello\n&quot;</span>);<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>main.c</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;dlfcn.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span> &#123;<br>    <span class="hljs-type">void</span> *handle = dlopen(<span class="hljs-string">&quot;./libhello.so&quot;</span>, RTLD_LAZY);<br>    <span class="hljs-keyword">if</span> (!handle) &#123;<br>        <span class="hljs-built_in">fprintf</span>(<span class="hljs-built_in">stderr</span>, <span class="hljs-string">&quot;Error: %s\n&quot;</span>, dlerror());<br>        <span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;<br>    &#125;<br><br>    <span class="hljs-type">void</span> (*hello)() = dlsym(handle, <span class="hljs-string">&quot;hello&quot;</span>);<br>    <span class="hljs-keyword">if</span> (!hello) &#123;<br>        <span class="hljs-built_in">fprintf</span>(<span class="hljs-built_in">stderr</span>, <span class="hljs-string">&quot;Error: %s\n&quot;</span>, dlerror());<br>        <span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;<br>    &#125;<br><br>    hello();<br><br>    dlclose(handle);<br><br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure></li></ul><h2 id="Build"><a href="#Build" class="headerlink" title="Build"></a>Build</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">hello-shared$ </span><span class="language-bash">./build.sh</span> <br>-- Check for working C compiler: /home/huangqw/ndk/android-ndk-r19c/toolchains/llvm/prebuilt/linux-x86_64/bin/clang<br>-- Check for working C compiler: /home/huangqw/ndk/android-ndk-r19c/toolchains/llvm/prebuilt/linux-x86_64/bin/clang -- works<br>-- Detecting C compiler ABI info<br>-- Detecting C compiler ABI info - done<br>-- Detecting C compile features<br>-- Detecting C compile features - done<br>-- Check for working CXX compiler: /home/huangqw/ndk/android-ndk-r19c/toolchains/llvm/prebuilt/linux-x86_64/bin/clang++<br>-- Check for working CXX compiler: /home/huangqw/ndk/android-ndk-r19c/toolchains/llvm/prebuilt/linux-x86_64/bin/clang++ -- works<br>-- Detecting CXX compiler ABI info<br>-- Detecting CXX compiler ABI info - done<br>-- Detecting CXX compile features<br>-- Detecting CXX compile features - done<br>-- Configuring done<br>-- Generating done<br>-- Build files have been written to: /home/huangqw/github/hello-shared/build-android<br>Scanning dependencies of target hello<br>[ 25%] Building C object CMakeFiles/hello.dir/hello.c.o<br>[ 50%] Linking C shared library libhello.so<br>[ 50%] Built target hello<br>Scanning dependencies of target hello_shared<br>[ 75%] Building C object CMakeFiles/hello_shared.dir/main.c.o<br><span class="hljs-meta prompt_">[100%</span><span class="language-bash">] Linking C executable hello_shared</span><br><span class="hljs-meta prompt_">[100%</span><span class="language-bash">] Built target hello_shared</span><br></code></pre></td></tr></table></figure><h2 id="Run-in-android"><a href="#Run-in-android" class="headerlink" title="Run in android"></a>Run in android</h2><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs vim">$ adb push build-android/libhello.<span class="hljs-keyword">so</span> build-android/hello_shared /data/local/tmp/<br>$ adb <span class="hljs-keyword">shell</span><br># <span class="hljs-keyword">cd</span> /data/local/tmp/<br># ./hello_shared<br>Entry point of hello<br><br>// run <span class="hljs-keyword">so</span> lib<br># ./libhello.<span class="hljs-keyword">so</span> <span class="hljs-number">111</span> <span class="hljs-number">222</span> <span class="hljs-number">333</span> <span class="hljs-number">444</span> <span class="hljs-number">555</span> <span class="hljs-number">666</span> <span class="hljs-number">777</span><br>Entry point of libhello.<span class="hljs-keyword">so</span><br><span class="hljs-built_in">argc</span>:<span class="hljs-number">8</span><br>arg:./libhello.<span class="hljs-keyword">so</span><br><span class="hljs-keyword">ar</span><span class="hljs-variable">g:111</span><br><span class="hljs-keyword">ar</span><span class="hljs-variable">g:222</span><br><span class="hljs-keyword">ar</span><span class="hljs-variable">g:333</span><br><span class="hljs-keyword">ar</span><span class="hljs-variable">g:444</span><br><span class="hljs-keyword">ar</span><span class="hljs-variable">g:555</span><br><span class="hljs-keyword">ar</span><span class="hljs-variable">g:666</span><br><span class="hljs-keyword">ar</span><span class="hljs-variable">g:777</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>工具使用</category>
      
    </categories>
    
    
    <tags>
      
      <tag>教程</tag>
      
      <tag>Android系统</tag>
      
      <tag>ndk</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Install android ndk in linux and compile the sample code</title>
    <link href="/2024/03/29/2024-03-29-install-android-ndk-in-linux/"/>
    <url>/2024/03/29/2024-03-29-install-android-ndk-in-linux/</url>
    
    <content type="html"><![CDATA[<h2 id="NDK-install"><a href="#NDK-install" class="headerlink" title="NDK install"></a>NDK install</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">$ </span><span class="language-bash"><span class="hljs-built_in">mkdir</span> -p ~/ndk</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash"><span class="hljs-built_in">cd</span> ~/ndk/</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">curl -O https://dl.google.com/android/repository/android-ndk-r19c-linux-x86_64.zip</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">unzip android-ndk-r19c-linux-x86_64.zip</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash"><span class="hljs-built_in">export</span> ANDROID_NDK=/home/test/ndk/android-ndk-r19c</span><br></code></pre></td></tr></table></figure><h2 id="Sample"><a href="#Sample" class="headerlink" title="Sample"></a>Sample</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">$ </span><span class="language-bash"><span class="hljs-built_in">mkdir</span> hello-ndk</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash"><span class="hljs-built_in">cd</span> hello-ndk/</span><br></code></pre></td></tr></table></figure><ul><li>main.cpp<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs cpp">$ cat &lt;&lt; EOF &gt; main.cpp<br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;iostream&gt;</span></span><br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-type">int</span> argc, <span class="hljs-type">char</span> *argv[])</span></span><br><span class="hljs-function"></span>&#123;<br>   std::cout &lt;&lt; <span class="hljs-string">&quot;Hello ndk!&quot;</span> &lt;&lt; std::endl;<br>   <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br>EOF<br></code></pre></td></tr></table></figure></li><li>CMakeLists.txt<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs stylus">$ cat  &lt;&lt; EOF &gt; CMakeLists<span class="hljs-selector-class">.txt</span><br><span class="hljs-function"><span class="hljs-title">cmake_minimum_required</span><span class="hljs-params">(VERSION <span class="hljs-number">3.5</span>)</span></span><br>project (hello_cmake)<br><br><span class="hljs-function"><span class="hljs-title">add_executable</span><span class="hljs-params">(hello_cmake main.cpp)</span></span><br>EOF<br></code></pre></td></tr></table></figure></li></ul><figure class="highlight erlang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs erlang"><span class="hljs-string">$ </span>tree<br>.<br>├── CMakeLists.txt<br>└── main.cpp<br></code></pre></td></tr></table></figure><h2 id="Build-for-linux-executable"><a href="#Build-for-linux-executable" class="headerlink" title="Build for linux executable"></a>Build for linux executable</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">$ </span><span class="language-bash"><span class="hljs-built_in">mkdir</span> build-linux</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash"><span class="hljs-built_in">cd</span> build-linux</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">cmake ..</span><br>-- The C compiler identification is GNU 7.5.0<br>-- The CXX compiler identification is GNU 7.5.0<br>-- Check for working C compiler: /usr/bin/cc<br>-- Check for working C compiler: /usr/bin/cc -- works<br>-- Detecting C compiler ABI info<br>-- Detecting C compiler ABI info - done<br>-- Detecting C compile features<br>-- Detecting C compile features - done<br>-- Check for working CXX compiler: /usr/bin/c++<br>-- Check for working CXX compiler: /usr/bin/c++ -- works<br>-- Detecting CXX compiler ABI info<br>-- Detecting CXX compiler ABI info - done<br>-- Detecting CXX compile features<br>-- Detecting CXX compile features - done<br>-- Configuring done<br>-- Generating done<br>-- Build files have been written to: /home/test/github/hello-ndk/build-linux<br><span class="hljs-meta prompt_">$ </span><span class="language-bash">make</span><br>Scanning dependencies of target hello_cmake<br>[ 50%] Building CXX object CMakeFiles/hello_cmake.dir/main.cpp.o<br><span class="hljs-meta prompt_">[100%</span><span class="language-bash">] Linking CXX executable hello_cmake</span><br><span class="hljs-meta prompt_">[100%</span><span class="language-bash">] Built target hello_cmake</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">./hello_cmake</span><br>Hello ndk!<br></code></pre></td></tr></table></figure><h2 id="Build-for-android-executable"><a href="#Build-for-android-executable" class="headerlink" title="Build for android executable"></a>Build for android executable</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">$ </span><span class="language-bash"><span class="hljs-built_in">mkdir</span> build-android</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash"><span class="hljs-built_in">cd</span> build-android</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">cmake -DCMAKE_TOOLCHAIN_FILE=<span class="hljs-variable">$ANDROID_NDK</span>/build/cmake/android.toolchain.cmake -DANDROID_ABI=<span class="hljs-string">&quot;arm64-v8a&quot;</span> -DANDROID_NDK=<span class="hljs-variable">$ANDROID_NDK</span> -DANDROID_PLATFORM=android-21 ..</span><br>-- Check for working C compiler: /home/test/ndk/android-ndk-r19c/toolchains/llvm/prebuilt/linux-x86_64/bin/clang<br>-- Check for working C compiler: /home/test/ndk/android-ndk-r19c/toolchains/llvm/prebuilt/linux-x86_64/bin/clang -- works<br>-- Detecting C compiler ABI info<br>-- Detecting C compiler ABI info - done<br>-- Detecting C compile features<br>-- Detecting C compile features - done<br>-- Check for working CXX compiler: /home/test/ndk/android-ndk-r19c/toolchains/llvm/prebuilt/linux-x86_64/bin/clang++<br>-- Check for working CXX compiler: /home/test/ndk/android-ndk-r19c/toolchains/llvm/prebuilt/linux-x86_64/bin/clang++ -- works<br>-- Detecting CXX compiler ABI info<br>-- Detecting CXX compiler ABI info - done<br>-- Detecting CXX compile features<br>-- Detecting CXX compile features - done<br>-- Configuring done<br>-- Generating done<br>-- Build files have been written to: /home/test/github/hello-ndk/build-android<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">make</span> <br>Scanning dependencies of target hello_cmake<br>[ 50%] Building CXX object CMakeFiles/hello_cmake.dir/main.cpp.o<br><span class="hljs-meta prompt_">[100%</span><span class="language-bash">] Linking CXX executable hello_cmake</span><br><span class="hljs-meta prompt_">[100%</span><span class="language-bash">] Built target hello_cmake</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">./hello_cmake</span><br>-bash: ./hello_cmake: cannot execute binary file: Exec format error<br></code></pre></td></tr></table></figure><h3 id="Run-in-android"><a href="#Run-in-android" class="headerlink" title="Run in android"></a>Run in android</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">$ </span><span class="language-bash">adb push build-android/hello_cmake /data/local/tmp</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash"><span class="hljs-built_in">cd</span> /data/local/tmp/</span><br>/data/local/tmp # chmod +x hello_cmake ; ./hello_cmake<br>Hello ndk!<br>/data/local/tmp # file hello_cmake<br>hello_cmake: ELF shared object, 64-bit LSB arm64, dynamic (/system/bin/linker64)<br></code></pre></td></tr></table></figure><h2 id="Diff"><a href="#Diff" class="headerlink" title="Diff"></a>Diff</h2><h3 id="file"><a href="#file" class="headerlink" title="file"></a>file</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">$ </span><span class="language-bash">file build-linux/hello_cmake</span><br>build-linux/hello_cmake: ELF 64-bit LSB shared object, x86-64, version 1 (SYSV), dynamically linked, interpreter /lib64/ld-linux-x86-64.so.2, for GNU/Linux 3.2.0, BuildID[sha1]=8e568fb9403912403a9daeb3a85cc58b8dad46f7, not stripped<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">file build-android/hello_cmake</span><br>build-android/hello_cmake: ELF 64-bit LSB shared object, ARM aarch64, version 1 (SYSV), dynamically linked, interpreter /system/bin/linker64, BuildID[sha1]=322bed0b22b9c27619b3b3a128322993667a5e7a, with debug_info, not stripped<br></code></pre></td></tr></table></figure><h3 id="readelf-h"><a href="#readelf-h" class="headerlink" title="readelf -h"></a>readelf -h</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">$ </span><span class="language-bash">readelf -h build-linux/hello_cmake</span><br>ELF Header:<br>  Magic:   7f 45 4c 46 02 01 01 00 00 00 00 00 00 00 00 00<br>  Class:                             ELF64<br>  Data:                              2&#x27;s complement, little endian<br>  Version:                           1 (current)<br>  OS/ABI:                            UNIX - System V<br>  ABI Version:                       0<br>  Type:                              DYN (Shared object file)<br>  Machine:                           Advanced Micro Devices X86-64<br>  Version:                           0x1<br>  Entry point address:               0x7b0<br>  Start of program headers:          64 (bytes into file)<br>  Start of section headers:          7064 (bytes into file)<br>  Flags:                             0x0<br>  Size of this header:               64 (bytes)<br>  Size of program headers:           56 (bytes)<br>  Number of program headers:         9<br>  Size of section headers:           64 (bytes)<br>  Number of section headers:         29<br>  Section header string table index: 28<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">$ </span><span class="language-bash">readelf -h build-android/hello_cmake</span><br>ELF Header:<br>  Magic:   7f 45 4c 46 02 01 01 00 00 00 00 00 00 00 00 00<br>  Class:                             ELF64<br>  Data:                              2&#x27;s complement, little endian<br>  Version:                           1 (current)<br>  OS/ABI:                            UNIX - System V<br>  ABI Version:                       0<br>  Type:                              DYN (Shared object file)<br>  Machine:                           AArch64<br>  Version:                           0x1<br>  Entry point address:               0xdf84<br>  Start of program headers:          64 (bytes into file)<br>  Start of section headers:          5142376 (bytes into file)<br>  Flags:                             0x0<br>  Size of this header:               64 (bytes)<br>  Size of program headers:           56 (bytes)<br>  Number of program headers:         9<br>  Size of section headers:           64 (bytes)<br>  Number of section headers:         39<br>  Section header string table index: 36<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>工具使用</category>
      
    </categories>
    
    
    <tags>
      
      <tag>教程</tag>
      
      <tag>Android系统</tag>
      
      <tag>ndk</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Build Android emulator source code</title>
    <link href="/2024/03/28/2024-03-28-build-android-emulator-source-code/"/>
    <url>/2024/03/28/2024-03-28-build-android-emulator-source-code/</url>
    
    <content type="html"><![CDATA[<h2 id="Source-code-download"><a href="#Source-code-download" class="headerlink" title="Source code download"></a>Source code download</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">$ </span><span class="language-bash"><span class="hljs-built_in">sudo</span> curl https://mirrors.bfsu.edu.cn/git/git-repo -o /usr/local/bin/repo</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash"><span class="hljs-built_in">sudo</span> <span class="hljs-built_in">chmod</span> +x /usr/local/bin/repo</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash"><span class="hljs-built_in">export</span> REPO_URL=<span class="hljs-string">&#x27;https://mirrors.bfsu.edu.cn/git/git-repo&#x27;</span></span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash"><span class="hljs-built_in">sudo</span> <span class="hljs-built_in">ln</span> /usr/bin/python3 /usr/bin/python</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">repo init --depth 1 https://mirrors.bfsu.edu.cn/git/AOSP/platform/manifest -b emu-30-release</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">repo <span class="hljs-built_in">sync</span> -c --no-tags</span><br></code></pre></td></tr></table></figure><h2 id="Build"><a href="#Build" class="headerlink" title="Build"></a>Build</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">$ </span><span class="language-bash">./android/rebuild.sh  --no-tests --config debug</span><br>...<br>Debug build enabled.<br>ASAN may be in use; recommend disabling some ASAN checks as build is not<br>universally ASANified. This can be done with<br>. android/envsetup.sh<br><br>or export ASAN_OPTIONS=detect_leaks=0:detect_container_overflow=0:detect_odr_violation=0:symbolize=1<br></code></pre></td></tr></table></figure><h2 id="Run"><a href="#Run" class="headerlink" title="Run"></a>Run</h2><p>Run as previous post: <a href="https://hqw700.github.io/2024/03/26/2024-03-26-linux-install-android-emulator/">Install Android SDK and run emulator in linux</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">$ </span><span class="language-bash"><span class="hljs-built_in">export</span> ASAN_OPTIONS=detect_leaks=0:detect_container_overflow=0:detect_odr_violation=0:symbolize=1</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash"><span class="hljs-built_in">export</span> ANDROID_SDK_ROOT=/home/test/sdk</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash"><span class="hljs-built_in">export</span> PATH=<span class="hljs-variable">$ANDROID_SDK_ROOT</span>/cmdline-tools/latest/bin:<span class="hljs-variable">$ANDROID_SDK_ROOT</span>/platform-tools:<span class="hljs-variable">$PATH</span></span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">objs/distribution/emulator/emulator -avd <span class="hljs-built_in">test</span> -shell-serial stdio -allow-host-audio -skip-adb-auth -no-snapshot -no-window -cores 4 -writable-system -partition-size 8192 -gpu host -qemu -cpu host -enable-kvm -m 4096</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>虚拟化</category>
      
    </categories>
    
    
    <tags>
      
      <tag>教程</tag>
      
      <tag>虚拟化</tag>
      
      <tag>Android系统</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>A heap profiler tool - valgrind massif</title>
    <link href="/2024/03/27/2024-03-27-leaning-valgrind-massif/"/>
    <url>/2024/03/27/2024-03-27-leaning-valgrind-massif/</url>
    
    <content type="html"><![CDATA[<h2 id="Official-example"><a href="#Official-example" class="headerlink" title="Official example"></a>Official example</h2><p><a href="https://valgrind.org/docs/manual/ms-manual.html">https://valgrind.org/docs/manual/ms-manual.html</a>  </p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdlib.h&gt;</span></span><br><span class="hljs-type">void</span> <span class="hljs-title function_">g</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span>&#123;<br>    <span class="hljs-built_in">malloc</span>(<span class="hljs-number">4000</span>);<br>&#125;<br><br><span class="hljs-type">void</span> <span class="hljs-title function_">f</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span>&#123;<br>    <span class="hljs-built_in">malloc</span>(<span class="hljs-number">2000</span>);<br>    g();<br>&#125;<br><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span>&#123;<br>    <span class="hljs-type">int</span> i;<br>    <span class="hljs-type">int</span>* a[<span class="hljs-number">10</span>];<br><br>    <span class="hljs-keyword">for</span> (i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">10</span>; i++) &#123;<br>        a[i] = <span class="hljs-built_in">malloc</span>(<span class="hljs-number">1000</span>);<br>    &#125;<br><br>    f();<br>    g();<br><br>    <span class="hljs-keyword">for</span> (i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">10</span>; i++) &#123;<br>        <span class="hljs-built_in">free</span>(a[i]);<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="Build"><a href="#Build" class="headerlink" title="Build"></a>Build</h2><p>if not complie whit -g, don’t show line number<br><code>gcc -g  test.c -o test</code></p><h2 id="Running-Massif"><a href="#Running-Massif" class="headerlink" title="Running Massif"></a>Running Massif</h2><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs routeros">$ valgrind <span class="hljs-attribute">--tool</span>=massif ./test<br>==<span class="hljs-attribute">51774</span>== Massif, a heap profiler<br>==<span class="hljs-attribute">51774</span>== Copyright (C) 2003-2017, <span class="hljs-keyword">and</span> GNU GPL<span class="hljs-string">&#x27;d, by Nicholas Nethercote</span><br><span class="hljs-string">==51774== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info</span><br><span class="hljs-string">==51774== Command: ./test</span><br><span class="hljs-string">==51774==</span><br><span class="hljs-string">==51774==</span><br></code></pre></td></tr></table></figure><h2 id="Running-ms-print"><a href="#Running-ms-print" class="headerlink" title="Running ms_print"></a>Running ms_print</h2><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc"><span class="hljs-section">$ ms_print massif.out.51774</span><br><span class="hljs-section">--------------------------------------------------------------------------------</span><br>Command:            ./test<br>Massif arguments:   (none)<br><span class="hljs-section">ms_print arguments: massif.out.51774</span><br><span class="hljs-section">--------------------------------------------------------------------------------</span><br><br><br><span class="hljs-code">    KB</span><br>19.71^                                                                       #<br><span class="hljs-code">     |                                                                       #</span><br><span class="hljs-code">     |                                                                       #</span><br><span class="hljs-code">     |                                                                       #</span><br><span class="hljs-code">     |                                                                       #</span><br><span class="hljs-code">     |                                                                       #</span><br><span class="hljs-code">     |                                                                       #</span><br><span class="hljs-code">     |                                                                       #</span><br><span class="hljs-code">     |                                                                       #</span><br><span class="hljs-code">     |                                                                       #</span><br><span class="hljs-code">     |                                                                       #</span><br><span class="hljs-code">     |                                                                       #</span><br><span class="hljs-code">     |                                                                       #</span><br><span class="hljs-code">     |                                                                       #</span><br><span class="hljs-code">     |                                                                       #</span><br><span class="hljs-code">     |                                                                       #</span><br><span class="hljs-code">     |                                                                       #</span><br><span class="hljs-code">     |                                                                       #</span><br><span class="hljs-code">     |                                                                       #</span><br><span class="hljs-code">     |                                                                       #</span><br><span class="hljs-code">   0 +-----------------------------------------------------------------------&gt;ki</span><br><span class="hljs-code">     0                                                                   151.7</span><br><br>Number of snapshots: 25<br><span class="hljs-code"> Detailed snapshots: [9, 14 (peak), 24]</span><br><br><span class="hljs-code">--------------------------------------------------------------------------------</span><br><span class="hljs-code">  n        time(i)         total(B)   useful-heap(B) extra-heap(B)    stacks(B)</span><br><span class="hljs-code">--------------------------------------------------------------------------------</span><br><span class="hljs-code">  0              0                0                0             0            0</span><br><span class="hljs-code">  1        154,422            1,016            1,000            16            0</span><br><span class="hljs-code">  2        154,466            2,032            2,000            32            0</span><br><span class="hljs-code">  3        154,510            3,048            3,000            48            0</span><br><span class="hljs-code">  4        154,554            4,064            4,000            64            0</span><br><span class="hljs-code">  5        154,598            5,080            5,000            80            0</span><br><span class="hljs-code">  6        154,642            6,096            6,000            96            0</span><br><span class="hljs-code">  7        154,686            7,112            7,000           112            0</span><br><span class="hljs-code">  8        154,730            8,128            8,000           128            0</span><br><span class="hljs-code">  9        154,774            9,144            9,000           144            0</span><br>98.43% (9,000B) (heap allocation functions) malloc/new/new[], --alloc-fns, etc.<br>-&gt;98.43% (9,000B) 0x1091E5: main (test.c:20)<br><br><span class="hljs-code">--------------------------------------------------------------------------------</span><br><span class="hljs-code">  n        time(i)         total(B)   useful-heap(B) extra-heap(B)    stacks(B)</span><br><span class="hljs-code">--------------------------------------------------------------------------------</span><br><span class="hljs-code"> 10        154,818           10,160           10,000           160            0</span><br><span class="hljs-code"> 11        154,866           12,168           12,000           168            0</span><br><span class="hljs-code"> 12        154,907           16,176           16,000           176            0</span><br><span class="hljs-code"> 13        154,954           20,184           20,000           184            0</span><br><span class="hljs-code"> 14        155,000           20,184           20,000           184            0</span><br>99.09% (20,000B) (heap allocation functions) malloc/new/new[], --alloc-fns, etc.<br>-&gt;49.54% (10,000B) 0x1091E5: main (test.c:20)<br>|<br>-&gt;39.64% (8,000B) 0x10919A: g (test.c:5)<br>| -&gt;19.82% (4,000B) 0x1091B4: f (test.c:11)<br>| | -&gt;19.82% (4,000B) 0x109201: main (test.c:23)<br>| |<br>| -&gt;19.82% (4,000B) 0x109206: main (test.c:25)<br>|<br>-&gt;09.91% (2,000B) 0x1091AF: f (test.c:10)<br><span class="hljs-code">  -&gt;09.91% (2,000B) 0x109201: main (test.c:23)</span><br><br><span class="hljs-code">--------------------------------------------------------------------------------</span><br><span class="hljs-code">  n        time(i)         total(B)   useful-heap(B) extra-heap(B)    stacks(B)</span><br><span class="hljs-code">--------------------------------------------------------------------------------</span><br><span class="hljs-code"> 15        155,000           19,168           19,000           168            0</span><br><span class="hljs-code"> 16        155,036           18,152           18,000           152            0</span><br><span class="hljs-code"> 17        155,072           17,136           17,000           136            0</span><br><span class="hljs-code"> 18        155,108           16,120           16,000           120            0</span><br><span class="hljs-code"> 19        155,144           15,104           15,000           104            0</span><br><span class="hljs-code"> 20        155,180           14,088           14,000            88            0</span><br><span class="hljs-code"> 21        155,216           13,072           13,000            72            0</span><br><span class="hljs-code"> 22        155,252           12,056           12,000            56            0</span><br><span class="hljs-code"> 23        155,288           11,040           11,000            40            0</span><br><span class="hljs-code"> 24        155,324           10,024           10,000            24            0</span><br>99.76% (10,000B) (heap allocation functions) malloc/new/new[], --alloc-fns, etc.<br>-&gt;79.81% (8,000B) 0x10919A: g (test.c:5)<br>| -&gt;39.90% (4,000B) 0x1091B4: f (test.c:11)<br>| | -&gt;39.90% (4,000B) 0x109201: main (test.c:23)<br>| |<br>| -&gt;39.90% (4,000B) 0x109206: main (test.c:25)<br>|<br>-&gt;19.95% (2,000B) 0x1091AF: f (test.c:10)<br>| -&gt;19.95% (2,000B) 0x109201: main (test.c:23)<br>|<br>-&gt;00.00% (0B) in 1+ places, all below ms_print&#x27;s threshold (01.00%)<br><br></code></pre></td></tr></table></figure><ul><li>–time-unit&#x3D;i, 默认按执行的指令分析</li><li>–time-unit&#x3D;B, 按堆栈分析，对运行时间短的程序非常有用<figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs elixir"><br>    <span class="hljs-title class_">KB</span><br><span class="hljs-number">19.71</span>^                                               <span class="hljs-comment">###</span><br>     |                                               <span class="hljs-comment">#</span><br>     |                                               <span class="hljs-comment">#  ::</span><br>     |                                               <span class="hljs-comment">#  : :::</span><br>     |                                      ::::::::<span class="hljs-symbol">:</span><span class="hljs-comment">#  : :  ::</span><br>     |                                      :        <span class="hljs-comment">#  : :  : ::</span><br>     |                                      :        <span class="hljs-comment">#  : :  : : :::</span><br>     |                                      :        <span class="hljs-comment">#  : :  : : :  ::</span><br>     |                            :::::::::::        <span class="hljs-comment">#  : :  : : :  : :::</span><br>     |                            :         :        <span class="hljs-comment">#  : :  : : :  : :  ::</span><br>     |                        :::::         :        <span class="hljs-comment">#  : :  : : :  : :  : ::</span><br>     |                     @@@:   :         :        <span class="hljs-comment">#  : :  : : :  : :  : : @</span><br>     |                   ::@  :   :         :        <span class="hljs-comment">#  : :  : : :  : :  : : @</span><br>     |                :::: @  :   :         :        <span class="hljs-comment">#  : :  : : :  : :  : : @</span><br>     |              :::  : @  :   :         :        <span class="hljs-comment">#  : :  : : :  : :  : : @</span><br>     |            ::: :  : @  :   :         :        <span class="hljs-comment">#  : :  : : :  : :  : : @</span><br>     |         :::: : :  : @  :   :         :        <span class="hljs-comment">#  : :  : : :  : :  : : @</span><br>     |       :::  : : :  : @  :   :         :        <span class="hljs-comment">#  : :  : : :  : :  : : @</span><br>     |    :::: :  : : :  : @  :   :         :        <span class="hljs-comment">#  : :  : : :  : :  : : @</span><br>     |  :::  : :  : : :  : @  :   :         :        <span class="hljs-comment">#  : :  : : :  : :  : : @</span><br>   <span class="hljs-number">0</span> +-----------------------------------------------------------------------&gt;<span class="hljs-title class_">KB</span><br>     <span class="hljs-number">0</span>                                                                   <span class="hljs-number">29.63</span><br></code></pre></td></tr></table></figure></li><li>–time-unit&#x3D;ms, 按时间分析</li><li>–pages-as-heap&#x3D;yes, 在页级别分析而不是在malloc级别分析内存</li><li>–trace-children&#x3D;yes, 跟踪子进程</li></ul><h2 id="Running-to-analyze-QEMU"><a href="#Running-to-analyze-QEMU" class="headerlink" title="Running to analyze QEMU"></a>Running to analyze QEMU</h2><p>使用默认参数qemu崩溃，原因未知。<br>使用–pages-as-heap&#x3D;yes可以运行，但未分析出有用信息，而且反应很慢。</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">$ valgrind <span class="hljs-attribute">--tool</span>=massif <span class="hljs-attribute">--trace-children</span>=<span class="hljs-literal">yes</span> <span class="hljs-attribute">--log-file</span>=massif.log  <span class="hljs-attribute">--pages-as-heap</span>=<span class="hljs-literal">yes</span>  qemu <span class="hljs-built_in">..</span>.<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>工具使用</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Study</tag>
      
      <tag>Memory</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Install Android SDK and run emulator in linux</title>
    <link href="/2024/03/26/2024-03-26-linux-install-android-emulator/"/>
    <url>/2024/03/26/2024-03-26-linux-install-android-emulator/</url>
    
    <content type="html"><![CDATA[<h2 id="Install-related-dependencies"><a href="#Install-related-dependencies" class="headerlink" title="Install related dependencies"></a>Install related dependencies</h2><ul><li><p>centos<br>sudo yum install java-11-openjdk</p></li><li><p>ubuntu<br>sudo apt install openjdk-11-jdk</p></li></ul><h2 id="Download-Android-SDK"><a href="#Download-Android-SDK" class="headerlink" title="Download Android SDK"></a>Download Android SDK</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-meta">#!/bin/bash</span><br><span class="hljs-built_in">mkdir</span> -p ~/sdk/cmdline-tools<br><span class="hljs-built_in">cd</span> ~/sdk/cmdline-tools<br>wget https://dl.google.com/android/repository/commandlinetools-linux-8512546_latest.zip<br>unzip commandlinetools-linux-8512546_latest.zip<br><span class="hljs-built_in">mv</span> cmdline-tools/ latest<br><span class="hljs-built_in">cd</span> ..<br><span class="hljs-built_in">echo</span> y | ./cmdline-tools/latest/bin/sdkmanager emulator <br><span class="hljs-built_in">echo</span> y | ./cmdline-tools/latest/bin/sdkmanager <span class="hljs-string">&quot;platform-tools&quot;</span> <span class="hljs-string">&quot;platforms;android-28&quot;</span><br><span class="hljs-built_in">echo</span> y | ./cmdline-tools/latest/bin/sdkmanager <span class="hljs-string">&quot;system-images;android-28;default;x86_64&quot;</span><br></code></pre></td></tr></table></figure><h2 id="Source-env"><a href="#Source-env" class="headerlink" title="Source env"></a>Source env</h2><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-built_in">export</span> <span class="hljs-attribute">ANDROID_SDK_ROOT</span>=/home/test/sdk<br><span class="hljs-built_in">export</span> <span class="hljs-attribute">PATH</span>=<span class="hljs-variable">$ANDROID_SDK_ROOT</span>/cmdline-tools/latest/bin:$ANDROID_SDK_ROOT/platform-tools:$PATH<br></code></pre></td></tr></table></figure><h2 id="Create-and-run-emulator-avd"><a href="#Create-and-run-emulator-avd" class="headerlink" title="Create and run emulator avd"></a>Create and run emulator avd</h2><ul><li>Create avd<br><code>avdmanager create avd -n test -k &quot;system-images;android-28;default;x86_64&quot; -d &quot;Galaxy Nexus&quot;</code></li><li>Run avd<br><code>./emulator/emulator -avd test -shell-serial stdio -allow-host-audio -skip-adb-auth -no-snapshot -no-window -cores 4 -writable-system -partition-size 8192 -gpu host -qemu -cpu host  -enable-kvm -m 4096</code></li></ul><h2 id="Run-adb"><a href="#Run-adb" class="headerlink" title="Run adb"></a>Run adb</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">$ </span><span class="language-bash">adb devices</span><br>List of devices attached<br>emualtor-5554        device<br></code></pre></td></tr></table></figure><h2 id="Troubleshooting"><a href="#Troubleshooting" class="headerlink" title="Troubleshooting"></a>Troubleshooting</h2><ul><li>ERROR<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs shell">INFO    | Android emulator version 31.3.13.0 (build_id 9189900) (CL:N/A)<br>emulator: INFO: Found systemPath /home/test/sdk/./system-images/android-28/default/x86_64/<br>INFO    | Duplicate loglines will be removed, if you wish to see each indiviudal line launch with the -log-nofilter flag.<br>WARNING | System image is writable<br>ProbeKVM: This user doesn&#x27;t have permissions to use KVM (/dev/kvm).<br>The KVM line in /etc/group is: [LINE_NOT_FOUND]<br><br>If the current user has KVM permissions,<br>the KVM line in /etc/group should end with &quot;:&quot; followed by your username.<br><br>If we see LINE_NOT_FOUND, the kvm group may need to be created along with permissions:<br>    sudo groupadd -r kvm<br>    # Then ensure /lib/udev/rules.d/50-udev-default.rules contains something like:<br>    # KERNEL==&quot;kvm&quot;, GROUP=&quot;kvm&quot;, MODE=&quot;0660&quot;<br>    # and then run:<br>    sudo gpasswd -a $USER kvm<br><br>If we see kvm:... but no username at the end, running the following command may allow KVM access:<br>    sudo gpasswd -a $USER kvm<br><br>You may need to log out and back in for changes to take effect.<br><br>ERROR   | x86_64 emulation currently requires hardware acceleration!<br>CPU acceleration status: This user doesn&#x27;t have permissions to use KVM (/dev/kvm).<br>The KVM line in /etc/group is: [LINE_NOT_FOUND]<br><br>If the current user has KVM permissions,<br>the KVM line in /etc/group should end with &quot;:&quot; followed by your username.<br><br>If we see LINE_NOT_FOUND, the kv<br>More info on configuring VM acceleration on Linux:<br>https://developer.android.com/studio/run/emulator-acceleration#vm-linux<br>General information on acceleration: https://developer.android.com/studio/run/emulator-acceleration.<br></code></pre></td></tr></table></figure></li></ul><h3 id="Fixed"><a href="#Fixed" class="headerlink" title="Fixed"></a>Fixed</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs shell">Permissions on /dev/kvm is currently (incorrect group and permissions):<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash"><span class="hljs-built_in">ls</span> -l /dev/kvm</span><br>crw------- 1 root root 10, 232 Jul  5 13:27 /dev/kvm<br>This should ideally be:<br>crw-rw---- 1 root kvm 10, 232 Jul  5 13:27 /dev/kvm<br><br>Manually changing it helps boot up the emulator. However, the settings are reverted on restart.<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash"><span class="hljs-built_in">sudo</span> <span class="hljs-built_in">chgrp</span> kvm /dev/kvm</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash"><span class="hljs-built_in">sudo</span> <span class="hljs-built_in">chmod</span> g+rw /dev/kvm</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>虚拟化</category>
      
    </categories>
    
    
    <tags>
      
      <tag>教程</tag>
      
      <tag>虚拟化</tag>
      
      <tag>环境搭建</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Update AOSP repo url</title>
    <link href="/2024/03/25/2024-03-25-update-aosp-repo-url/"/>
    <url>/2024/03/25/2024-03-25-update-aosp-repo-url/</url>
    
    <content type="html"><![CDATA[<h2 id="一，复制-repo"><a href="#一，复制-repo" class="headerlink" title="一，复制.repo"></a>一，复制.repo</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">$ </span><span class="language-bash"><span class="hljs-built_in">mkdir</span> aic11</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash"><span class="hljs-built_in">cp</span> -ar redroid11/.repo aic11/</span><br></code></pre></td></tr></table></figure><p>如果迁移到其它服务器可以先压缩或者使用rsync复制</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">$ </span><span class="language-bash">tar -zcvf redroid11.tar.gz .repo</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">或者</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">rsync -alv <span class="hljs-variable">$&#123;USER&#125;</span>@ip:~/code/.repo .</span><br></code></pre></td></tr></table></figure><h2 id="二，替换url"><a href="#二，替换url" class="headerlink" title="二，替换url"></a>二，替换url</h2><ul><li><p>如果直接使用repo init会报错</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">$ </span><span class="language-bash"><span class="hljs-built_in">cd</span> aic11</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">repo init --depth 1 -u https://mirrors.bfsu.edu.cn/git/AOSP/platform/manifest -b android-11.0.0_r48</span><br>repo: reusing existing repo client checkout in /mnt/data/code/aic11<br>error: Your local changes to the following files would be overwritten by checkout:<br>        default.xml<br>Please commit your changes or stash them before you switch branches.<br>Aborting<br></code></pre></td></tr></table></figure></li><li><p>可以先删除.repo&#x2F;manifest*，再进行repo init</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">$ </span><span class="language-bash"><span class="hljs-built_in">rm</span> -rf .repo/manifest*</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">repo init --depth 1 -u https://mirrors.bfsu.edu.cn/git/AOSP/platform/manifest -b android-11.0.0_r48</span><br></code></pre></td></tr></table></figure></li><li><p>然后用 –force-sync 参数进行同步，这样已经下载的仓库就不会重复下载了。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">$ </span><span class="language-bash">repo <span class="hljs-built_in">sync</span> --force-sync</span> <br></code></pre></td></tr></table></figure></li></ul>]]></content>
    
    
    <categories>
      
      <category>代码管理</category>
      
    </categories>
    
    
    <tags>
      
      <tag>git</tag>
      
      <tag>教程</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Learning libevent for Android</title>
    <link href="/2024/03/23/2024-03-23-learning-libevent-for-android-create-socket-server-and-client/"/>
    <url>/2024/03/23/2024-03-23-learning-libevent-for-android-create-socket-server-and-client/</url>
    
    <content type="html"><![CDATA[<p>Android默认包含libevent库，代码路径在$AOSP&#x2F;external&#x2F;libevent下，生成库在&#x2F;system&#x2F;lib{64}&#x2F;libevent.so下， 以下是在Android Native下使用libevent的简单示例。</p><h2 id="一，使用libevent库创建socket服务端"><a href="#一，使用libevent库创建socket服务端" class="headerlink" title="一，使用libevent库创建socket服务端"></a>一，使用libevent库创建socket服务端</h2><p>$AOSP&#x2F;frameworks&#x2F;native&#x2F;cmds&#x2F;study&#x2F;libevent_socket_server.cpp</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;event2/event.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;event2/listener.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;event2/bufferevent.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;event2/buffer.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;cutils/sockets.h&gt;</span></span><br><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">echo_read_cb</span><span class="hljs-params">(<span class="hljs-keyword">struct</span> bufferevent *bev, <span class="hljs-type">void</span> *ctx)</span> </span>&#123;<br>    <span class="hljs-keyword">struct</span> <span class="hljs-title class_">evbuffer</span> *input = <span class="hljs-built_in">bufferevent_get_input</span>(bev);<br>    <span class="hljs-keyword">struct</span> <span class="hljs-title class_">evbuffer</span> *output = <span class="hljs-built_in">bufferevent_get_output</span>(bev);<br>    <span class="hljs-type">size_t</span> len = <span class="hljs-built_in">evbuffer_get_length</span>(input);<br>    <span class="hljs-type">void</span> *data = <span class="hljs-built_in">malloc</span>(len);<br>    <span class="hljs-built_in">evbuffer_remove</span>(input, data, len);<br>    <span class="hljs-built_in">evbuffer_add</span>(output, data, len);<br>    std::cout &lt;&lt; <span class="hljs-string">&quot;RECE &amp; SEND: &quot;</span> &lt;&lt; (<span class="hljs-type">char</span> *) data &lt;&lt; std::endl;<br>    <span class="hljs-built_in">free</span>(data);<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">echo_event_cb</span><span class="hljs-params">(<span class="hljs-keyword">struct</span> bufferevent *bev, <span class="hljs-type">short</span> events, <span class="hljs-type">void</span> *ctx)</span> </span>&#123;<br>    <span class="hljs-keyword">if</span> (events &amp; BEV_EVENT_ERROR) &#123;<br>        <span class="hljs-built_in">perror</span>(<span class="hljs-string">&quot;Error from bufferevent&quot;</span>);<br>    &#125;<br>    <span class="hljs-keyword">if</span> (events &amp; (BEV_EVENT_EOF | BEV_EVENT_ERROR)) &#123;<br>        <span class="hljs-built_in">bufferevent_free</span>(bev);<br>    &#125;<br>&#125;<br><br><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">accept_cb</span><span class="hljs-params">(evconnlistener *listener, <span class="hljs-type">evutil_socket_t</span> fd, sockaddr *address, <span class="hljs-type">int</span> socklen, <span class="hljs-type">void</span> *ctx)</span> </span>&#123;<br>    std::cout &lt;&lt; <span class="hljs-string">&quot;Accepted connection&quot;</span> &lt;&lt; std::endl;<br>    event_base *base = <span class="hljs-built_in">evconnlistener_get_base</span>(listener);<br>    bufferevent *bev = <span class="hljs-built_in">bufferevent_socket_new</span>(base, fd, BEV_OPT_CLOSE_ON_FREE);<br>    <span class="hljs-built_in">bufferevent_setcb</span>(bev, echo_read_cb, <span class="hljs-literal">NULL</span>, echo_event_cb, <span class="hljs-literal">NULL</span>);<br>    <span class="hljs-built_in">bufferevent_enable</span>(bev, EV_READ | EV_WRITE);<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    event_base *base = <span class="hljs-built_in">event_base_new</span>();<br>    <span class="hljs-keyword">if</span> (!base) &#123;<br>        std::cerr &lt;&lt; <span class="hljs-string">&quot;Error creating event base&quot;</span> &lt;&lt; std::endl;<br>        <span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>;<br>    &#125;<br><br>    sockaddr_in sin;<br>    <span class="hljs-built_in">memset</span>(&amp;sin, <span class="hljs-number">0</span>, <span class="hljs-built_in">sizeof</span>(sin));<br>    sin.sin_family = AF_INET;<br>    sin.sin_addr.s_addr = <span class="hljs-built_in">htonl</span>(INADDR_ANY);<br>    sin.sin_port = <span class="hljs-built_in">htons</span>(<span class="hljs-number">8080</span>);<br>    evconnlistener *listener = <span class="hljs-built_in">evconnlistener_new_bind</span>(base, accept_cb, <span class="hljs-literal">NULL</span>, LEV_OPT_CLOSE_ON_FREE | LEV_OPT_REUSEABLE,<br>                                                       <span class="hljs-number">-1</span>, (sockaddr *) &amp;sin, <span class="hljs-built_in">sizeof</span>(sin));<br>    <span class="hljs-keyword">if</span> (!listener) &#123;<br>        std::cerr &lt;&lt; <span class="hljs-string">&quot;Could not create listener&quot;</span> &lt;&lt; std::endl;<br>        <span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>;<br>    &#125;<br><br>    <span class="hljs-built_in">event_base_dispatch</span>(base);<br><br>    <span class="hljs-built_in">evconnlistener_free</span>(listener);<br>    <span class="hljs-built_in">event_base_free</span>(base);<br><br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="使用libevent库创建socket客户端"><a href="#使用libevent库创建socket客户端" class="headerlink" title="使用libevent库创建socket客户端"></a>使用libevent库创建socket客户端</h2><p>$AOSP&#x2F;frameworks&#x2F;native&#x2F;cmds&#x2F;study&#x2F;libevent_socket_client.cpp</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;event2/event.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;event2/bufferevent.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;cutils/sockets.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;arpa/inet.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;event2/buffer.h&gt;</span></span><br><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">read_cb</span><span class="hljs-params">(<span class="hljs-keyword">struct</span> bufferevent *bev, <span class="hljs-type">void</span> *ctx)</span> </span>&#123;<br>    <span class="hljs-keyword">struct</span> <span class="hljs-title class_">evbuffer</span> *input = <span class="hljs-built_in">bufferevent_get_input</span>(bev);<br>    <span class="hljs-type">size_t</span> len = <span class="hljs-built_in">evbuffer_get_length</span>(input);<br>    <span class="hljs-type">char</span> *data = (<span class="hljs-type">char</span> *) <span class="hljs-built_in">malloc</span>(len + <span class="hljs-number">1</span>);<br>    <span class="hljs-built_in">evbuffer_remove</span>(input, data, len);<br>    data[len] = <span class="hljs-string">&#x27;\0&#x27;</span>;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Received: %s\n&quot;</span>, data);<br>    <span class="hljs-built_in">free</span>(data);<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">event_cb</span><span class="hljs-params">(<span class="hljs-keyword">struct</span> bufferevent *bev, <span class="hljs-type">short</span> events, <span class="hljs-type">void</span> *ctx)</span> </span>&#123;<br>    <span class="hljs-keyword">if</span> (events &amp; BEV_EVENT_ERROR) &#123;<br>        <span class="hljs-built_in">perror</span>(<span class="hljs-string">&quot;Error from bufferevent&quot;</span>);<br>    &#125;<br>    <span class="hljs-keyword">if</span> (events &amp; (BEV_EVENT_EOF | BEV_EVENT_ERROR)) &#123;<br>        <span class="hljs-built_in">bufferevent_free</span>(bev);<br>    &#125;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">stdin_read_cb</span><span class="hljs-params">(<span class="hljs-type">evutil_socket_t</span> fd, <span class="hljs-type">short</span> events, <span class="hljs-type">void</span> *arg)</span> </span>&#123;<br>    <span class="hljs-keyword">struct</span> <span class="hljs-title class_">bufferevent</span> *bev = (<span class="hljs-keyword">struct</span> bufferevent *) arg;<br>    <span class="hljs-type">char</span> msg[<span class="hljs-number">1024</span>];<br>    <span class="hljs-keyword">if</span> (<span class="hljs-built_in">fgets</span>(msg, <span class="hljs-built_in">sizeof</span>(msg), stdin)) &#123;<br>        <span class="hljs-keyword">struct</span> <span class="hljs-title class_">evbuffer</span> *output = <span class="hljs-built_in">bufferevent_get_output</span>(bev);<br>        <span class="hljs-built_in">evbuffer_add</span>(output, msg, <span class="hljs-built_in">strlen</span>(msg));<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-comment">// EOF or error</span><br>        <span class="hljs-built_in">event_base_loopbreak</span>(<span class="hljs-built_in">bufferevent_get_base</span>(bev));<br>    &#125;<br>&#125;<br><br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    event_base *base = <span class="hljs-built_in">event_base_new</span>();<br>    <span class="hljs-keyword">if</span> (!base) &#123;<br>        std::cerr &lt;&lt; <span class="hljs-string">&quot;Error creating event base&quot;</span> &lt;&lt; std::endl;<br>        <span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>;<br>    &#125;<br><br>    sockaddr_in sin;<br>    <span class="hljs-built_in">memset</span>(&amp;sin, <span class="hljs-number">0</span>, <span class="hljs-built_in">sizeof</span>(sin));<br>    sin.sin_family = AF_INET;<br>    sin.sin_addr.s_addr = <span class="hljs-built_in">inet_addr</span>(<span class="hljs-string">&quot;127.0.0.1&quot;</span>);<br>    sin.sin_port = <span class="hljs-built_in">htons</span>(<span class="hljs-number">8080</span>);<br><br>    bufferevent *bev = <span class="hljs-built_in">bufferevent_socket_new</span>(base, <span class="hljs-number">-1</span>, BEV_OPT_CLOSE_ON_FREE);<br>    <span class="hljs-built_in">bufferevent_setcb</span>(bev, read_cb, <span class="hljs-literal">NULL</span>, event_cb, <span class="hljs-literal">NULL</span>);<br>    <span class="hljs-built_in">bufferevent_enable</span>(bev, EV_READ | EV_WRITE);<br>    <span class="hljs-keyword">if</span> (<span class="hljs-built_in">bufferevent_socket_connect</span>(bev, (sockaddr *) &amp;sin, <span class="hljs-built_in">sizeof</span>(sin)) &lt; <span class="hljs-number">0</span>) &#123;<br>        std::cerr &lt;&lt; <span class="hljs-string">&quot;Error connecting to server&quot;</span> &lt;&lt; std::endl;<br>        <span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>;<br>    &#125;<br>    <span class="hljs-keyword">struct</span> <span class="hljs-title class_">event</span> *ev_stdin = <span class="hljs-built_in">event_new</span>(base, <span class="hljs-built_in">fileno</span>(stdin), EV_READ | EV_PERSIST, stdin_read_cb, bev);<br>    <span class="hljs-built_in">event_add</span>(ev_stdin, <span class="hljs-literal">NULL</span>);<br><br>    <span class="hljs-built_in">event_base_dispatch</span>(base);<br><br>    <span class="hljs-built_in">bufferevent_free</span>(bev);<br>    <span class="hljs-built_in">event_base_free</span>(base);<br><br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="Android-bp"><a href="#Android-bp" class="headerlink" title="Android.bp"></a>Android.bp</h2><p>$AOSP&#x2F;frameworks&#x2F;native&#x2F;cmds&#x2F;study&#x2F;libevent_socket_client.cpp </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs java">cc_defaults &#123;<br>    name: <span class="hljs-string">&quot;study_defaults&quot;</span>,<br><br>    cflags: [<br>        <span class="hljs-string">&quot;-Wall&quot;</span>,<br>        <span class="hljs-string">&quot;-Wextra&quot;</span>,<br>        <span class="hljs-string">&quot;-Werror&quot;</span>,<br>        <span class="hljs-string">&quot;-Wno-unused-parameter&quot;</span>,<br>        <span class="hljs-string">&quot;-Wno-unused-function&quot;</span>,<br>    ],<br>    static_libs: [<br>        <span class="hljs-string">&quot;libbase&quot;</span>,<br>        <span class="hljs-string">&quot;libcutils&quot;</span>,<br>        <span class="hljs-string">&quot;libevent&quot;</span>,<br>        <span class="hljs-string">&quot;liblog&quot;</span>,<br>    ],<br>&#125;<br><br>cc_binary &#123;<br>    name: <span class="hljs-string">&quot;libevent_socket_server&quot;</span>,<br>    defaults: [<span class="hljs-string">&quot;study_defaults&quot;</span>],<br>    srcs: [<br>        <span class="hljs-string">&quot;libevent_socket_server.cpp&quot;</span>,<br>    ],<br>&#125;<br><br>cc_binary &#123;<br>    name: <span class="hljs-string">&quot;libevent_socket_client&quot;</span>,<br>    defaults: [<span class="hljs-string">&quot;study_defaults&quot;</span>],<br>    srcs: [<br>        <span class="hljs-string">&quot;libevent_socket_client.cpp&quot;</span>,<br>    ],<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="三，测试"><a href="#三，测试" class="headerlink" title="三，测试"></a>三，测试</h2><h3 id="3-1-编译"><a href="#3-1-编译" class="headerlink" title="3.1 编译"></a>3.1 编译</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">$ </span><span class="language-bash">make libevent_socket_server &amp;&amp; make libevent_socket_client</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">adb push <span class="hljs-variable">$OUT</span>/system/bin/libevent_socket* /data/local/tmp/</span><br></code></pre></td></tr></table></figure><h3 id="3-2-run"><a href="#3-2-run" class="headerlink" title="3.2 run"></a>3.2 run</h3><p><img src="/img/blog/libevent_test.png"></p><h2 id="四，libevent在android系统中的使用"><a href="#四，libevent在android系统中的使用" class="headerlink" title="四，libevent在android系统中的使用"></a>四，libevent在android系统中的使用</h2><p>在<a href="https://cs.android.com/android/platform/superproject/main/+/main:system/core/debuggerd/tombstoned/tombstoned.cpp">tombstoned</a>程序中，采用libevent来处理socket连接</p><blockquote><p>操作系统：Windows 11<br>编译机：WSL2 Ubuntu-18.04<br>手机：Google Pixel 3 Android 10<br>AOSP: android-10.0.0_r41</p></blockquote>]]></content>
    
    
    <categories>
      
      <category>Android系统</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Study</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ubuntu 22.04 虚拟机磁盘扩容</title>
    <link href="/2024/03/22/2024-03-22-upgrow-ubuntu-lvm-disk-size/"/>
    <url>/2024/03/22/2024-03-22-upgrow-ubuntu-lvm-disk-size/</url>
    
    <content type="html"><![CDATA[<h2 id="一，Host侧"><a href="#一，Host侧" class="headerlink" title="一，Host侧"></a>一，Host侧</h2><ul><li>增加虚拟磁盘容量<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">$ </span><span class="language-bash"><span class="hljs-built_in">sudo</span> qemu-img resize ubuntu22.qcow2 +32G</span><br></code></pre></td></tr></table></figure></li><li>备份磁盘</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-variable">$</span> sudo qemu<span class="hljs-literal">-img</span> create <span class="hljs-literal">-b</span> ubuntu22.qcow2 <span class="hljs-operator">-F</span> qcow2 <span class="hljs-operator">-f</span> qcow2 ubuntu22<span class="hljs-literal">-test2</span>.qcow2<br></code></pre></td></tr></table></figure><ul><li>修改虚机配置，为防止数据丢失，先从备份的磁盘中演练<figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">$ virsh <span class="hljs-built_in">edit</span> ubuntu22<br></code></pre></td></tr></table></figure></li></ul><h2 id="二，Guest侧"><a href="#二，Guest侧" class="headerlink" title="二，Guest侧"></a>二，Guest侧</h2><h3 id="2-1-查看当前状态，根目录已经快满了"><a href="#2-1-查看当前状态，根目录已经快满了" class="headerlink" title="2.1 查看当前状态，根目录已经快满了"></a>2.1 查看当前状态，根目录已经快满了</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs sh">~$ <span class="hljs-built_in">df</span> -TH<br>Filesystem                Type   Size  Used Avail Use% Mounted on<br>tmpfs                     tmpfs  1.1G  1.6M  1.1G   1% /run<br>/dev/mapper/vgubuntu-root ext4    63G   60G  489M 100% /<br>tmpfs                     tmpfs  5.3G     0  5.3G   0% /dev/shm<br>tmpfs                     tmpfs  5.3M     0  5.3M   0% /run/lock<br>tmpfs                     tmpfs  4.2M     0  4.2M   0% /sys/fs/cgroup<br>/dev/vda1                 vfat   536M  6.4M  530M   2% /boot/efi<br>tmpfs                     tmpfs  1.1G   70k  1.1G   1% /run/user/1000<br>tmpfs                     tmpfs  1.1G   66k  1.1G   1% /run/user/128<br></code></pre></td></tr></table></figure><h3 id="2-2-查看当前硬盘信息"><a href="#2-2-查看当前硬盘信息" class="headerlink" title="2.2 查看当前硬盘信息"></a>2.2 查看当前硬盘信息</h3><p>&#x2F;dev&#x2F;vda已经显示扩容成功，有96 GiB<br>但&#x2F;dev&#x2F;vda2和&#x2F;dev&#x2F;mapper&#x2F;vgubuntu-root只有不到60G</p><figure class="highlight tap"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs tap">$ sudo fdisk -l<br><br>GPT PMBR size mismatch (134217727 != 201326591) will be corrected by write.<br>The backup GPT table is not on the end of the device.<br><br><br>Disk /dev/vda:<span class="hljs-number"> 96 </span>GiB,<span class="hljs-number"> 103079215104 </span>bytes,<span class="hljs-number"> 201326592 </span>sectors<br>Units: sectors of<span class="hljs-number"> 1 </span>*<span class="hljs-number"> 512 </span>=<span class="hljs-number"> 512 </span>bytes<br>Sector size (logical/physical):<span class="hljs-number"> 512 </span>bytes /<span class="hljs-number"> 512 </span>bytes<br>I/O size (minimum/optimal):<span class="hljs-number"> 512 </span>bytes /<span class="hljs-number"> 512 </span>bytes<br>Disklabel type: gpt<br>Disk identifier: E80679B8-CF0C-4496-A391-C734EB923502<br><br>Device       Start       End   Sectors  Size Type<br>/dev/vda1    <span class="hljs-number"> 2048 </span> <span class="hljs-number"> 1050623 </span> <span class="hljs-number"> 1048576 </span> 512M EFI System<br>/dev/vda2 <span class="hljs-number"> 1050624 </span>134215679<span class="hljs-number"> 133165056 </span>63.5G Linux LVM<br><br><br>Disk /dev/mapper/vgubuntu-root: 59.84 GiB,<span class="hljs-number"> 64256737280 </span>bytes,<span class="hljs-number"> 125501440 </span>sectors<br>Units: sectors of<span class="hljs-number"> 1 </span>*<span class="hljs-number"> 512 </span>=<span class="hljs-number"> 512 </span>bytes<br>Sector size (logical/physical):<span class="hljs-number"> 512 </span>bytes /<span class="hljs-number"> 512 </span>bytes<br>I/O size (minimum/optimal):<span class="hljs-number"> 512 </span>bytes /<span class="hljs-number"> 512 </span>bytes<br><br></code></pre></td></tr></table></figure><p>上面还报<code>GPT PMBR size mismatch (134217727 != 201326591) will be corrected by write.</code>错误</p><h3 id="2-3-修复GPT错误"><a href="#2-3-修复GPT错误" class="headerlink" title="2.3 修复GPT错误"></a>2.3 修复GPT错误</h3><figure class="highlight fortran"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs fortran">$ sudo parted -l<br>Kernel not configured for semaphores (System V IPC). Not using udev synchronisation code.<br>Model: Linux device-mapper (linear) (dm)<br>Disk /dev/mapper/vgubuntu-swap_1: <span class="hljs-number">3922</span>MB<br>Sector <span class="hljs-built_in">size</span> (<span class="hljs-keyword">logical</span>/physical): <span class="hljs-number">512</span>B/<span class="hljs-number">512</span>B<br>Partition Table: loop<br>Disk Flags:<br><br><span class="hljs-keyword">Number</span>  Start  <span class="hljs-keyword">End</span>     <span class="hljs-built_in">Size</span>    <span class="hljs-keyword">File</span> system     Flags<br> <span class="hljs-number">1</span>      <span class="hljs-number">0.00</span>B  <span class="hljs-number">3922</span>MB  <span class="hljs-number">3922</span>MB  linux-swap(v1)<br><br><br>Model: Linux device-mapper (linear) (dm)<br>Disk /dev/mapper/vgubuntu-root: <span class="hljs-number">64.3</span>GB<br>Sector <span class="hljs-built_in">size</span> (<span class="hljs-keyword">logical</span>/physical): <span class="hljs-number">512</span>B/<span class="hljs-number">512</span>B<br>Partition Table: loop<br>Disk Flags:<br><br><span class="hljs-keyword">Number</span>  Start  <span class="hljs-keyword">End</span>     <span class="hljs-built_in">Size</span>    <span class="hljs-keyword">File</span> system  Flags<br> <span class="hljs-number">1</span>      <span class="hljs-number">0.00</span>B  <span class="hljs-number">64.3</span>GB  <span class="hljs-number">64.3</span>GB  ext4<br><br><br>Warning: Not <span class="hljs-built_in">all</span> of the space available to /dev/vda appears to be used, you can<br>fix the GPT to <span class="hljs-keyword">use</span> <span class="hljs-built_in">all</span> of the space (an extra <span class="hljs-number">67108864</span> blocks) or <span class="hljs-keyword">continue</span> with<br>the current setting?<br>Fix/Ignore?<br>Fix/Ignore? fix<br>Model: Virtio <span class="hljs-keyword">Block</span> Device (virtblk)<br>Disk /dev/vda: <span class="hljs-number">103</span>GB<br>Sector <span class="hljs-built_in">size</span> (<span class="hljs-keyword">logical</span>/physical): <span class="hljs-number">512</span>B/<span class="hljs-number">512</span>B<br>Partition Table: gpt<br>Disk Flags:<br><br><span class="hljs-keyword">Number</span>  Start   <span class="hljs-keyword">End</span>     <span class="hljs-built_in">Size</span>    <span class="hljs-keyword">File</span> system  <span class="hljs-keyword">Name</span>  Flags<br> <span class="hljs-number">1</span>      <span class="hljs-number">1049</span>kB  <span class="hljs-number">538</span>MB   <span class="hljs-number">537</span>MB   fat32              boot, esp<br> <span class="hljs-number">2</span>      <span class="hljs-number">538</span>MB   <span class="hljs-number">68.7</span>GB  <span class="hljs-number">68.2</span>GB                     lvm<br><br></code></pre></td></tr></table></figure><p>重新用fdisk -l查看错误消失</p><h3 id="2-4-dev-vda2扩容"><a href="#2-4-dev-vda2扩容" class="headerlink" title="2.4 &#x2F;dev&#x2F;vda2扩容"></a>2.4 &#x2F;dev&#x2F;vda2扩容</h3><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs routeros">$ sudo growpart /dev/vda 2<br>CHANGED: <span class="hljs-attribute">partition</span>=2 <span class="hljs-attribute">start</span>=1050624 old: <span class="hljs-attribute">size</span>=133165056 <span class="hljs-attribute">end</span>=134215680 new: <span class="hljs-attribute">size</span>=200275935 <span class="hljs-attribute">end</span>=201326559<br>$ sudo resize2fs /dev/vda2<br>resize2fs 1.46.5 (30-Dec-2021)<br>resize2fs: Device <span class="hljs-keyword">or</span><span class="hljs-built_in"> resource </span>busy <span class="hljs-keyword">while</span> trying <span class="hljs-keyword">to</span> open /dev/vda2<br>Couldn<span class="hljs-string">&#x27;t find valid filesystem superblock.</span><br></code></pre></td></tr></table></figure><p>扩容后发现&#x2F;dev&#x2F;vda2已增长，但&#x2F;dev&#x2F;mapper&#x2F;vgubuntu-root不变</p><figure class="highlight tap"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs tap">$ sudo fdisk -l<br>Disk /dev/vda:<span class="hljs-number"> 96 </span>GiB,<span class="hljs-number"> 103079215104 </span>bytes,<span class="hljs-number"> 201326592 </span>sectors<br>Units: sectors of<span class="hljs-number"> 1 </span>*<span class="hljs-number"> 512 </span>=<span class="hljs-number"> 512 </span>bytes<br>Sector size (logical/physical):<span class="hljs-number"> 512 </span>bytes /<span class="hljs-number"> 512 </span>bytes<br>I/O size (minimum/optimal):<span class="hljs-number"> 512 </span>bytes /<span class="hljs-number"> 512 </span>bytes<br>Disklabel type: gpt<br>Disk identifier: E80679B8-CF0C-4496-A391-C734EB923502<br><br>Device       Start       End   Sectors  Size Type<br>/dev/vda1    <span class="hljs-number"> 2048 </span> <span class="hljs-number"> 1050623 </span> <span class="hljs-number"> 1048576 </span> 512M EFI System<br>/dev/vda2 <span class="hljs-number"> 1050624 </span>201326558<span class="hljs-number"> 200275935 </span>95.5G Linux LVM<br><br><br>Disk /dev/mapper/vgubuntu-root: 59.84 GiB,<span class="hljs-number"> 64256737280 </span>bytes,<span class="hljs-number"> 125501440 </span>sectors<br>Units: sectors of<span class="hljs-number"> 1 </span>*<span class="hljs-number"> 512 </span>=<span class="hljs-number"> 512 </span>bytes<br>Sector size (logical/physical):<span class="hljs-number"> 512 </span>bytes /<span class="hljs-number"> 512 </span>bytes<br>I/O size (minimum/optimal):<span class="hljs-number"> 512 </span>bytes /<span class="hljs-number"> 512 </span>bytes<br><br></code></pre></td></tr></table></figure><h3 id="2-5-dev-mapper-vgubuntu-root-扩容"><a href="#2-5-dev-mapper-vgubuntu-root-扩容" class="headerlink" title="2.5 &#x2F;dev&#x2F;mapper&#x2F;vgubuntu-root 扩容"></a>2.5 &#x2F;dev&#x2F;mapper&#x2F;vgubuntu-root 扩容</h3><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">$ sudo lvextend -l +<span class="hljs-number">100</span>%FREE /dev/mapper/vgubuntu-root<br>  Size <span class="hljs-keyword">of</span> logical volume vgubuntu/root changed <span class="hljs-keyword">from</span> <span class="hljs-number">59.84</span> GiB (<span class="hljs-number">15320</span> extents) <span class="hljs-keyword">to</span> <span class="hljs-number">91.84</span> GiB (<span class="hljs-number">23512</span> extents).<br>  Kernel <span class="hljs-keyword">not</span> configured <span class="hljs-keyword">for</span> semaphores (<span class="hljs-keyword">System</span> V IPC). <span class="hljs-keyword">Not</span> <span class="hljs-keyword">using</span> udev synchronisation code.<br>  Logical volume vgubuntu/root successfully resized.<br>$ sudo resize2fs /dev/mapper/vgubuntu-root<br>resize2fs <span class="hljs-number">1.46</span><span class="hljs-number">.5</span> (<span class="hljs-number">30</span>-<span class="hljs-type">Dec</span><span class="hljs-number">-2021</span>)<br>Filesystem at /dev/mapper/vgubuntu-root <span class="hljs-keyword">is</span> mounted <span class="hljs-keyword">on</span> /; <span class="hljs-keyword">on</span>-<span class="hljs-type">line</span> resizing required<br>old_desc_blocks = <span class="hljs-number">8</span>, new_desc_blocks = <span class="hljs-number">12</span><br>The filesystem <span class="hljs-keyword">on</span> /dev/mapper/vgubuntu-root <span class="hljs-keyword">is</span> now <span class="hljs-number">24076288</span> (<span class="hljs-number">4</span>k) blocks long.<br><br></code></pre></td></tr></table></figure><h2 id="三，扩容成功"><a href="#三，扩容成功" class="headerlink" title="三，扩容成功"></a>三，扩容成功</h2><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs crystal"><span class="hljs-variable">$ </span>df -h<br>Filesystem                 Size  Used Avail Use% Mounted on<br>tmpfs                      <span class="hljs-number">994</span>M  <span class="hljs-number">1.5</span>M  <span class="hljs-number">992</span>M   <span class="hljs-number">1</span>% <span class="hljs-regexp">/run</span><br><span class="hljs-regexp">/dev</span><span class="hljs-regexp">/mapper/vgubuntu</span>-root   <span class="hljs-number">91</span>G   <span class="hljs-number">56</span>G   <span class="hljs-number">31</span>G  <span class="hljs-number">65</span>% <span class="hljs-regexp">/</span><br><span class="hljs-regexp">tmpfs                      4.9G     0  4.9G   0% /dev</span><span class="hljs-regexp">/shm</span><br><span class="hljs-regexp">tmpfs                      5.0M     0  5.0M   0% /run</span><span class="hljs-regexp">/lock</span><br><span class="hljs-regexp">tmpfs                      4.0M     0  4.0M   0% /sys</span><span class="hljs-regexp">/fs/cgroup</span><br><span class="hljs-regexp">/dev/vda</span>1                  <span class="hljs-number">511</span>M  <span class="hljs-number">6.1</span>M  <span class="hljs-number">505</span>M   <span class="hljs-number">2</span>% <span class="hljs-regexp">/boot/efi</span><br>tmpfs                      <span class="hljs-number">994</span>M   <span class="hljs-number">68</span>K  <span class="hljs-number">993</span>M   <span class="hljs-number">1</span>% <span class="hljs-regexp">/run/user</span><span class="hljs-regexp">/1000</span><br><span class="hljs-regexp">tmpfs                      994M   64K  993M   1% /run</span><span class="hljs-regexp">/user/</span><span class="hljs-number">128</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>工具使用</category>
      
    </categories>
    
    
    <tags>
      
      <tag>虚拟化</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>adb connect USB devices in WSL2</title>
    <link href="/2024/03/21/2024-3-21-wsl2-connect-usb-adb/"/>
    <url>/2024/03/21/2024-3-21-wsl2-connect-usb-adb/</url>
    
    <content type="html"><![CDATA[<h1 id="在WSL2下使用usb-adb连接真机"><a href="#在WSL2下使用usb-adb连接真机" class="headerlink" title="在WSL2下使用usb adb连接真机"></a>在WSL2下使用usb adb连接真机</h1><blockquote><p>注意：新版本中命令已改变<br><a href="https://learn.microsoft.com/zh-cn/windows/wsl/connect-usb#attach-a-usb-device">https://learn.microsoft.com/zh-cn/windows/wsl/connect-usb#attach-a-usb-device</a></p></blockquote><h2 id="一，Windows下安装"><a href="#一，Windows下安装" class="headerlink" title="一，Windows下安装"></a>一，Windows下安装</h2><h3 id="usbipd-win应用安装"><a href="#usbipd-win应用安装" class="headerlink" title="usbipd-win应用安装"></a>usbipd-win应用安装</h3><ul><li>进入 <a href="https://github.com/dorssel/usbipd-win/releases">https://github.com/dorssel/usbipd-win/releases</a></li><li>下载最新的.msi文件</li><li>运行下载的 usbipd-win_x.msi 文件</li></ul><h2 id="二，WSL2下安装"><a href="#二，WSL2下安装" class="headerlink" title="二，WSL2下安装"></a>二，WSL2下安装</h2><p>以wsl2安装的ubuntu为例，在ubuntu下运行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">wsl2:~$ <span class="hljs-built_in">sudo</span> apt install linux-tools-generic hwdata<br>wsl2:~$ <span class="hljs-built_in">sudo</span> update-alternatives --install /usr/local/bin/usbip usbip /usr/lib/linux-tools/*-generic/usbip 20<br></code></pre></td></tr></table></figure><h2 id="三，Windows下运行"><a href="#三，Windows下运行" class="headerlink" title="三，Windows下运行"></a>三，Windows下运行</h2><p>以管理员打开powershell</p><h3 id="3-1-列出所有usb"><a href="#3-1-列出所有usb" class="headerlink" title="3.1 列出所有usb"></a>3.1 列出所有usb</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash">PS C:\WINDOWS\system32&gt; usbipd list<br>Connected:<br>BUSID  VID:PID    DEVICE                                        STATE<br>1-5    1de1:f105  Display capture-UVC05                         Not shared<br>1-9    045e:02d1  Xbox One 控制器                                Not shared<br>1-10   18d1:4ee7  Android Composite ADB Interface               Not shared<br>4-4    1a81:2039  USB 输入设备                                   Not shared<br></code></pre></td></tr></table></figure><h3 id="3-2-将usb绑定到指定的wsl2中"><a href="#3-2-将usb绑定到指定的wsl2中" class="headerlink" title="3.2 将usb绑定到指定的wsl2中"></a>3.2 将usb绑定到指定的wsl2中</h3><p><del>如果存在多个wsl2虚机，需要使用-d指定</del><br>新版本中不需要指定虚机，将虚机保持开启即可。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">PS C:\WINDOWS\system32&gt; usbipd bind --busid 2-4 --force<br>PS C:\WINDOWS\system32&gt; sbipd attach --wsl --busid 2-4<br></code></pre></td></tr></table></figure><h2 id="四，WSL2下运行"><a href="#四，WSL2下运行" class="headerlink" title="四，WSL2下运行"></a>四，WSL2下运行</h2><p>然后就可以在wsl2下看到该设备</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">wsl2:~$ lsusb<br>Bus 002 Device 001: ID 1d6b:0003 Linux Foundation 3.0 root hub<br>Bus 001 Device 002: ID 18d1:4ee7 Google Inc. Nexus/Pixel Device (charging + debug)<br>Bus 001 Device 001: ID 1d6b:0002 Linux Foundation 2.0 root hub<br></code></pre></td></tr></table></figure><h3 id="4-1-adb测试"><a href="#4-1-adb测试" class="headerlink" title="4.1 adb测试"></a>4.1 adb测试</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell">wsl2:~$ adb devices<br>List of devices attached<br>96KAXXXXX      device<br><br>wsl2:~$ adb shell<br>bonito:/ $<br></code></pre></td></tr></table></figure><h2 id="五，问题："><a href="#五，问题：" class="headerlink" title="五，问题："></a>五，问题：</h2><h3 id="需要sudo启动adb-start-server"><a href="#需要sudo启动adb-start-server" class="headerlink" title="需要sudo启动adb start-server"></a>需要sudo启动adb start-server</h3><p>该问题是由于无udev服务导致，即使写rules文件也无效。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs shell">wsl2:~$ lsusb<br>Bus 001 Device 003: ID 18d1:4ee7 Google Inc.<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment"># 其中18d1为vendorid, 4ee7为productid</span></span><br>wsl2:~$ sudo vim /etc/udev/rules.d/70-android.rules<br>SUBSYSTEM==&quot;usb&quot;, ATTRS&#123;idVendor&#125;==&quot;18d1&quot;, ATTRS&#123;idProduct&#125;==&quot;4ee7&quot;,MODE=&quot;0666&quot;<br><br>wsl2:~$ sudo service udev reload<br>udev does not support containers, not started<br></code></pre></td></tr></table></figure><p>解决方案是wsl2打开systemd的支持 –&gt; <a href="https://learn.microsoft.com/zh-cn/windows/wsl/systemd">使用 systemd 通过 WSL 管理 Linux 服务</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">wsl2:~$ sudo vim /etc/wsl.conf<br>[boot]<br>systemd=true<br></code></pre></td></tr></table></figure><p>然后在powershell重启wsl</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">PS C:\WINDOWS\system32&gt; wsl --shutdown <br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>工具使用</category>
      
    </categories>
    
    
    <tags>
      
      <tag>WSL2</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【代码管理】将AOSP修改提交到自己的仓库</title>
    <link href="/2023/01/12/2023-1-12-push-aosp-to-custom-repository/"/>
    <url>/2023/01/12/2023-1-12-push-aosp-to-custom-repository/</url>
    
    <content type="html"><![CDATA[<p>对于Android源码的管理，看到过各种各样的团队不同的骚操作：有将几百个仓库合并到一个仓库管理的，也有将几个仓库全部上传到本地的。<br>我觉得正确的处理应该是像<a href="https://github.com/remote-android/redroid-doc">redroid</a>一样：没涉及的修改从官方下载，有修改的创建自己的仓库。  </p><h2 id="一，源码下载"><a href="#一，源码下载" class="headerlink" title="一，源码下载"></a>一，源码下载</h2><p>官方源码通过repo命令下载</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">$ repo init https:<span class="hljs-regexp">//</span>android.googlesource.com<span class="hljs-regexp">/platform/m</span>anifest -b android-<span class="hljs-number">7.1</span>.<span class="hljs-number">2</span>_r33<br></code></pre></td></tr></table></figure><p>通常会替换为国内的清华源<a href="https://aosp.tuna.tsinghua.edu.cn/platform/manifest">https://aosp.tuna.tsinghua.edu.cn/platform/manifest</a>, 并加上 <code>--depth 1</code> 控制git深度以节省硬盘空间。</p><h2 id="二，将manifest仓库提交到自己仓库"><a href="#二，将manifest仓库提交到自己仓库" class="headerlink" title="二，将manifest仓库提交到自己仓库"></a>二，将manifest仓库提交到自己仓库</h2><p>manifest仓库管理着所有子仓库的清单，现在第一步是将这个清单提单到自己仓库，但子项目源码还是从官方下载。</p><h3 id="2-1-将原origin地址修改为github地址"><a href="#2-1-将原origin地址修改为github地址" class="headerlink" title="2.1 将原origin地址修改为github地址"></a>2.1 将原origin地址修改为github地址</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ <span class="hljs-built_in">cd</span> .repo/manifests<br>.repo/manifests $ git remote remove origin<br>.repo/manifests $ git remote add origin git@github.com:hqw700/AospManifestTest.git<br></code></pre></td></tr></table></figure><p>如果是通过<code>--depth 1</code>浅克隆的，此时push会报shallow update not allowed</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash">.repo/manifests $ git checkout -b android-7.1.2_r33<br>.repo/manifests $ git push --set-upstream origin android-7.1.2_r33<br>Enumerating objects: 3, <span class="hljs-keyword">done</span>.<br>Counting objects: 100% (3/3), <span class="hljs-keyword">done</span>.<br>Delta compression using up to 16 threads<br>Compressing objects: 100% (2/2), <span class="hljs-keyword">done</span>.<br>Writing objects: 100% (3/3), 6.54 KiB | 6.54 MiB/s, <span class="hljs-keyword">done</span>.<br>Total 3 (delta 0), reused 0 (delta 0), pack-reused 0<br>To github.com:hqw700/AospManifestTest.git<br> ! [remote rejected] android-7.1.2_r33 -&gt; android-7.1.2_r33 (shallow update not allowed)<br>error: failed to push some refs to <span class="hljs-string">&#x27;github.com:hqw700/AospManifestTest.git&#x27;</span><br></code></pre></td></tr></table></figure><h3 id="2-2-浅克隆push"><a href="#2-2-浅克隆push" class="headerlink" title="2.2 浅克隆push"></a>2.2 浅克隆push</h3><p>浅克隆仓库的push问题，网上大多数说法是完整下载后push，但这样又带着大量不需要的提交。经过试验，可以加上<code>--orphan</code>参数抛弃所有修改重新commit。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash">.repo/manifests $ git checkout --orphan android-7.1.2_r33<br>Switched to a new branch <span class="hljs-string">&#x27;android-7.1.2_r33&#x27;</span><br>.repo/manifests $ git commit -m <span class="hljs-string">&quot;Init repo&quot;</span><br>[android-7.1.2_r33 (root-commit) 6f9b46c] Init repo<br> 1 file changed, 557 insertions(+)<br> create mode 100644 default.xml<br>.repo/manifests $ git push --set-upstream origin android-7.1.2_r33<br></code></pre></td></tr></table></figure><h2 id="三，修改default-xml"><a href="#三，修改default-xml" class="headerlink" title="三，修改default.xml"></a>三，修改default.xml</h2><p>通过上面的步骤，已经可以用<code>repo init git@github.com:hqw700/AospManifestTest.git -b android-7.1.2_r33</code>命令初始化清单了，但执行<code>repo sync</code>却发现无法下载代码，那是因为子仓库的下载地址默认是github的，但github中却无这个仓库，所以下载失败。因为需要将默认地址修改为官方的。<br>原default.xml的头部是这样的</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs abnf">&lt;remote fetch<span class="hljs-operator">=</span><span class="hljs-string">&quot;..&quot;</span> name<span class="hljs-operator">=</span><span class="hljs-string">&quot;aosp&quot;</span> review<span class="hljs-operator">=</span><span class="hljs-string">&quot;https://android-review.googlesource.com/&quot;</span> /&gt;<br></code></pre></td></tr></table></figure><p>fetch&#x3D;”..”的意思是manifest下载地址的上一级为源地址，需要修改为<code>https://aosp.tuna.tsinghua.edu.cn/platform/manifest</code>仓库的上一级，也就是<code>https://aosp.tuna.tsinghua.edu.cn</code><br><remote fetch="https://aosp.tuna.tsinghua.edu.cn" name="aosp" review="https://android-review.googlesource.com/" /></p><p>此时就可以通过repo sync愉快的下载了。</p><h2 id="四，修改某些仓库源码并提交到github"><a href="#四，修改某些仓库源码并提交到github" class="headerlink" title="四，修改某些仓库源码并提交到github"></a>四，修改某些仓库源码并提交到github</h2><p>通过上面的步骤下载的代码和官方的无区别，但是要修改某些仓库代码并提交到自己仓库呢。<br>可以在default.xml后面include一个自定义的xml如<br>default.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">include</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;custom.xml&quot;</span> /&gt;</span><br></code></pre></td></tr></table></figure><p>将需要删除，替换，增加的仓库放在custom.xml, 如<br>custom.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">manifest</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">remote</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;github&quot;</span> <span class="hljs-attr">fetch</span>=<span class="hljs-string">&quot;https://github.com/hqw700&quot;</span>/&gt;</span><br>    <span class="hljs-comment">&lt;!-- &lt;remote name=&quot;github&quot; fetch=&quot;git@github.com&quot;/&gt; --&gt;</span><br><br>    <span class="hljs-comment">&lt;!-- 删除原代码仓库 --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">remove-project</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;platform/prebuilts/qemu-kernel&quot;</span>/&gt;</span><br>    <span class="hljs-comment">&lt;!-- 替换为自己的仓库示例，未创建该仓库 --&gt;</span><br>    <span class="hljs-comment">&lt;!-- &lt;project path=&quot;prebuilts/qemu-kernel&quot; name=&quot;prebuilts/qemu-kernel&quot; remote=&quot;github&quot; revision=&quot;master&quot;/&gt; --&gt;</span><br><br>    <span class="hljs-comment">&lt;!-- 新增仓库示例 --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">project</span> <span class="hljs-attr">path</span>=<span class="hljs-string">&quot;frameworks/native/cmds/binderdemo&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;binderdemo&quot;</span> <span class="hljs-attr">remote</span>=<span class="hljs-string">&quot;github&quot;</span> <span class="hljs-attr">revision</span>=<span class="hljs-string">&quot;main&quot;</span>/&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">manifest</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="4-1-project参数"><a href="#4-1-project参数" class="headerlink" title="4.1 project参数"></a>4.1 project参数</h3><p>name 为下载仓库地址，结构为remote + name<br>path为本地目录地址<br>每个project仓库后面可以指定远程仓库地址remote&#x3D;”xxx”, 以及git commint id或者分支名revision&#x3D;”xxx”, 也可以指定git深度减少体积clone-depth&#x3D;”1”<br>另外，将多个manifest放在同一个仓库下不冲突，如果AOSP代码和emulator代码，在repo init时指定分支就行。</p><h2 id="五，测试"><a href="#五，测试" class="headerlink" title="五，测试"></a>五，测试</h2><p>完整步骤如上，如果有描述不清的地方可以看仓库的提交记录。可以注释掉大部分project来测试效果。</p><figure class="highlight erlang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs erlang"><span class="hljs-string">$ </span>repo init git@github.com:hqw700/AospManifestTest.git -b android-<span class="hljs-number">7.1</span>.<span class="hljs-number">2</span>_r33<br><span class="hljs-string">$ </span>repo sync<br><br>Fetching: <span class="hljs-number">100</span><span class="hljs-comment">% (2/2), done in 2.510s</span><br>repo sync has finished successfully.<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>代码管理</category>
      
    </categories>
    
    
    <tags>
      
      <tag>git</tag>
      
      <tag>教程</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【逆向】鲁大师Android跑分结果还原</title>
    <link href="/2023/01/11/ludashi-score-decrypt/"/>
    <url>/2023/01/11/ludashi-score-decrypt/</url>
    
    <content type="html"><![CDATA[<blockquote><p>前提：测试机需root，能导出&#x2F;data&#x2F;data&#x2F;com.ludashi.benchmark&#x2F;shared_prefs&#x2F;benchScore.xml<br>APP版本：com.ludashi.benchmark: 10.7.3<br>工具：jadx: 1.4.5</p></blockquote><h2 id="事因"><a href="#事因" class="headerlink" title="事因"></a>事因</h2><p>最近用鲁大师对机器性能进行批量跑分测试，每次都需要将结果截图后对比，十分不方便。通过搜索发现，鲁大师APP将跑分结果加密后保存在&#x2F;data&#x2F;data&#x2F;com.ludashi.benchmark&#x2F;shared_prefs&#x2F;benchScore.xml中，但进行了加密，不方便保存数据和批量分析。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=&#x27;1.0&#x27; encoding=&#x27;utf-8&#x27; standalone=&#x27;yes&#x27; ?&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">map</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">int</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;key_total_score_v4&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;710975&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">string</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;key_score_v4&quot;</span>&gt;</span>D0Io8ZEyB6fvNwRJ1vBjhdDpcrCOLCvfznn3cK2VgCBAVZzLMlnBCP7GCc0AQ2sLnQoKfPw7MbeI9rRw1TW4dwdTiQ0ie7diuONavKMQedwiKkk3TmW9l9sVPDlkXDJdtRbWTVdgIiob2E8l17f5nU5tvLzNPHs3uzCU7sccVwGPQ1VE8/CawM+D4zUoJuzx+KRX5R1t0KFifFOfosAcmrLt6XcC75sI128OcQVyJlL9pch+zhrSCFOfVacqbdpHIVHa32OUqLCF4ZoiIFTmlBWlxUYhGx6rMZYJdXAH+vyG6JPSsa1CNhJduef7Oql+K401LjsFvIsghPQyYJHwG4yktnl8c73t2+Wt3j8q2DXQBLXeqFAGCzaVas3iKS3+cCB8fw+ihadhAw==<span class="hljs-tag">&lt;/<span class="hljs-name">string</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">string</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;key_data_v4&quot;</span>&gt;</span>D0Iry4MVAJH2PUgcxfNtkMSpL+3+ORXYnDaZJunCwCAIBcKeVAuZQP6MZ55FGhYaiQhMEbhhfOGe4KUsqDumcT1Snkp2LLFwu/5M/fNELZN0eCxiBzzAkcgUMygzXDJftxraVEYhZTcr2FcY7bb80AY/q7fSLi9l4XPE58sHTAmAVU5YtOiRx8ON4iomafPA84Bk+R92gP52f1mAsJlf1q/L6lxSsM9ZujBccBV3aC6i+5k43gzBQwvBJvI8cc9ON0zemDzBvbqF/o51eQisgwiY/0YiWEDDdcpOcWI/zujX8JDQvq9aOEJdst7/K7JvK7wHKDkmqKdw2uM5bJfuCtfvolJmPuqAm7LygHhgh2mPWPbKvkNCXHLYJPPkIQLgdzBkcgqiiKB4XM0avlt7uMWfApVw61iGeaQ00JWZcmuSvGup8ijKsIz+Tq2MtpiAIqd/o9wyiMzk/UR8YKU=<span class="hljs-tag">&lt;/<span class="hljs-name">string</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">map</span>&gt;</span><br></code></pre></td></tr></table></figure><p>看数据结构像是Base64加密，但用Base64解密后是乱码，估计是进行了位移操作，之前分析某地图SDK的log也用了类似的加密，加密和解密函数通常是同一个。</p><h2 id="反编译"><a href="#反编译" class="headerlink" title="反编译"></a>反编译</h2><p>将APK拖进jadx中发现没加固，简单搜索关键字发现在com.ludashi.benchmark.c.f.c中读取了KEY</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">private</span> <span class="hljs-title function_">c</span><span class="hljs-params">()</span> &#123;<br>    <span class="hljs-type">int</span> <span class="hljs-variable">k2</span> <span class="hljs-operator">=</span> com.ludashi.framework.sp.a.k(f17904i <span class="hljs-comment">/*key_total_score_v4*/</span>, <span class="hljs-number">0</span>, f17901f);<br>    <span class="hljs-built_in">this</span>.f17906d = k2;<br>    h(b(<span class="hljs-built_in">this</span>.f17906d, com.ludashi.framework.sp.a.s(f17903h, <span class="hljs-string">&quot;&quot;</span>, f17901f)), b(k2, com.ludashi.framework.sp.a.s(f17902g, <span class="hljs-string">&quot;&quot;</span>, f17901f)));<br>&#125;<br></code></pre></td></tr></table></figure><p>其中b函数就是解密函数，一切来的太简单了, 准备好的frida都没用上。<br>解密函数将总分作为密钥，所以总分是明文，加密是先位移再Base64，解密是先Base64再位移，用的都是同一个函数。用ChatGPT搜这个函数是这样解释的：  </p><blockquote><p>这段代码看起来是一个类似 LFSR（线性反馈移位寄存器）的加密算法。它通过一个特定的位运算来生成一个伪随机序列，然后用这个序列与原数组进行异或运算来加密原数组。&#96;</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">// com.ludashi.benchmark.c.f.c</span><br><span class="hljs-keyword">private</span> String <span class="hljs-title function_">b</span><span class="hljs-params">(<span class="hljs-type">int</span> i2, String str)</span> &#123;<br>    <span class="hljs-keyword">return</span> f.f(str, i2, <span class="hljs-literal">false</span>);<br>&#125;<br><br><span class="hljs-comment">// com.ludashi.framework.utils.f</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> String <span class="hljs-title function_">f</span><span class="hljs-params">(String str, <span class="hljs-type">int</span> i2, <span class="hljs-type">boolean</span> z)</span> &#123;<br>    <span class="hljs-type">byte</span>[] decode;<br>    <span class="hljs-keyword">if</span> (str == <span class="hljs-literal">null</span> || TextUtils.isEmpty(str)) &#123;<br>        <span class="hljs-keyword">return</span> str;<br>    &#125;<br>    <span class="hljs-keyword">try</span> &#123;<br>        <span class="hljs-keyword">if</span> (z) &#123;<br>            <span class="hljs-type">byte</span>[] bytes = str.getBytes(<span class="hljs-string">&quot;UTF-8&quot;</span>);<br>            g(bytes, i2);<br>            decode = Base64.encode(bytes, <span class="hljs-number">2</span>);<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            decode = Base64.decode(str, <span class="hljs-number">2</span>);<br>            g(decode, i2);<br>        &#125;<br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">String</span>(decode);<br>    &#125; <span class="hljs-keyword">catch</span> (Throwable th) &#123;<br>        com.ludashi.framework.utils.log.d.V(a, <span class="hljs-string">&quot;&quot;</span>, th);<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">g</span><span class="hljs-params">(<span class="hljs-type">byte</span>[] bArr, <span class="hljs-type">int</span> i2)</span> &#123;<br>    <span class="hljs-keyword">if</span> (bArr == <span class="hljs-literal">null</span> || bArr.length == <span class="hljs-number">0</span>) &#123;<br>        <span class="hljs-keyword">return</span>;<br>    &#125;<br>    <span class="hljs-type">int</span> <span class="hljs-variable">length</span> <span class="hljs-operator">=</span> bArr.length;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> <span class="hljs-variable">i3</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>; i3 &lt; <span class="hljs-number">64</span>; i3++) &#123;<br>        i2 &lt;&lt;= <span class="hljs-number">1</span>;<br>        <span class="hljs-keyword">if</span> (<span class="hljs-number">1</span> == (((((i2 &gt;&gt; <span class="hljs-number">3</span>) &amp; <span class="hljs-number">1</span>) ^ ((i2 &gt;&gt; <span class="hljs-number">15</span>) &amp; <span class="hljs-number">1</span>)) ^ ((i2 &gt;&gt; <span class="hljs-number">23</span>) &amp; <span class="hljs-number">1</span>)) ^ ((i2 &gt;&gt; <span class="hljs-number">7</span>) &amp; <span class="hljs-number">1</span>))) &#123;<br>            i2 |= <span class="hljs-number">1</span>;<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> <span class="hljs-variable">i4</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>; i4 &lt; length; i4++) &#123;<br>        <span class="hljs-type">byte</span> <span class="hljs-variable">b2</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> <span class="hljs-variable">i5</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>; i5 &lt; <span class="hljs-number">8</span>; i5++) &#123;<br>            <span class="hljs-keyword">if</span> (<span class="hljs-number">1</span> == ((i2 &gt;&gt; <span class="hljs-number">31</span>) &amp; <span class="hljs-number">1</span>)) &#123;<br>                b2 = (<span class="hljs-type">byte</span>) (b2 | <span class="hljs-number">1</span>);<br>            &#125;<br>            b2 = (<span class="hljs-type">byte</span>) (b2 &lt;&lt; <span class="hljs-number">1</span>);<br>            i2 &lt;&lt;= <span class="hljs-number">1</span>;<br>            <span class="hljs-keyword">if</span> (<span class="hljs-number">1</span> == (((((i2 &gt;&gt; <span class="hljs-number">3</span>) &amp; <span class="hljs-number">1</span>) ^ ((i2 &gt;&gt; <span class="hljs-number">15</span>) &amp; <span class="hljs-number">1</span>)) ^ ((i2 &gt;&gt; <span class="hljs-number">23</span>) &amp; <span class="hljs-number">1</span>)) ^ ((i2 &gt;&gt; <span class="hljs-number">7</span>) &amp; <span class="hljs-number">1</span>))) &#123;<br>                i2 |= <span class="hljs-number">1</span>;<br>            &#125;<br>        &#125;<br>        bArr[i4] = (<span class="hljs-type">byte</span>) (bArr[i4] ^ b2);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="解密"><a href="#解密" class="headerlink" title="解密"></a>解密</h2><p>解密就比较简单了，将上面两段代码复制出来就行，解密结果：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs json">TotalScore = <span class="hljs-number">710975</span><br><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;p_cpu_mono&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-number">99638</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;p_cpu_dual&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-number">101479</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;p_cpu_cul&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-number">63934</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;p_gpu_scene1&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-number">142581</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;p_gpu_scene2&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-number">134853</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;p_ram_score&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-number">30977</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;p_ram_size&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-number">69733</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;p_db_score&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-number">9304</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;rom_read_speed&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-number">31022</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;rom_write_speed&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-number">13640</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;rom_read_speed_rd&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-number">9691</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;rom_write_speed_rd&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-number">4123</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;p_rom_score&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-number">58476</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;total_point&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-number">710975</span><span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;seqWrite&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-number">197</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;seqRead&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-number">1216</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;randRead&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-number">105</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;randWrite&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-number">3</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;insert&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-number">2709</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;select&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-number">29</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;update&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-number">3184</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;memoryPerf&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-number">751</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;memorySizePerf&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-number">11592</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;monoFloat&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-number">693</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;monoInt&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-number">552</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;dualFloat&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-number">1973</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;dualInt&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-number">1701</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;cipherPerf&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-number">77</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;avgFps&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-number">4634</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;offscreenAvgFps&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-number">5187</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;width&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-number">2340</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;height&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-number">1080</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;avgFps2&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-number">4040</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;offscreenAvgFps2&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-number">5545</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;width2&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-number">2340</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;height2&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-number">1080</span><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p>完整代码在：<a href="https://gist.github.com/hqw700/27fac24e7a0a335435a1d3080fb436d3">https://gist.github.com/hqw700/27fac24e7a0a335435a1d3080fb436d3</a></p><script src="https://gist.github.com/hqw700/27fac24e7a0a335435a1d3080fb436d3.js"></script>]]></content>
    
    
    <categories>
      
      <category>工具使用</category>
      
    </categories>
    
    
    <tags>
      
      <tag>教程</tag>
      
      <tag>逆向</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【一起来学binder】最简单的binder调用</title>
    <link href="/2022/10/24/binder_simplest_call/"/>
    <url>/2022/10/24/binder_simplest_call/</url>
    
    <content type="html"><![CDATA[<p>Android提供简单的binder服务测试命令service(<a href="https://cs.android.com/android/platform/superproject/+/master:frameworks/native/cmds/service/service.cpp">代码</a>), 比如说要打开画面更新闪烁，可以发送 </p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">adb shell service call SurfaceFlinger 1002 i32 1<br></code></pre></td></tr></table></figure><p>其中，SurfaceFlinger是服务名称，1002是需要调用的函数id, i32 1 表示写一个32-bit integer为1的参数。<br>如果要调用binderdemo里的ping方法:  </p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">adb shell service call test_server 1<br></code></pre></td></tr></table></figure><h2 id="CPP的最简单调用"><a href="#CPP的最简单调用" class="headerlink" title="CPP的最简单调用"></a>CPP的最简单调用</h2><p>下面是提取了service.cpp的代码写的最简短的ping调用：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">define</span> LOG_TAG <span class="hljs-string">&quot;simplest_call&quot;</span></span><br><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdlib.h&gt;</span></span><br><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;utils/RefBase.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;utils/Log.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;binder/TextOutput.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;binder/IInterface.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;binder/IBinder.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;binder/ProcessState.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;binder/IServiceManager.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;binder/IPCThreadState.h&gt;</span></span><br><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> android;<br><br><span class="hljs-comment">// get the name of the generic interface we hold a reference to</span><br><span class="hljs-function"><span class="hljs-type">static</span> String16 <span class="hljs-title">get_interface_name</span><span class="hljs-params">(sp&lt;IBinder&gt; service)</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">if</span> (service != <span class="hljs-literal">nullptr</span>) &#123;<br>        Parcel data, reply;<br>        <span class="hljs-type">status_t</span> err = service-&gt;<span class="hljs-built_in">transact</span>(IBinder::INTERFACE_TRANSACTION, data, &amp;reply);<br>        <span class="hljs-keyword">if</span> (err == NO_ERROR) &#123;<br>            <span class="hljs-keyword">return</span> reply.<span class="hljs-built_in">readString16</span>();<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">String16</span>();<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-type">int</span> argc, <span class="hljs-type">char</span>* <span class="hljs-type">const</span> argv[])</span> </span>&#123;<br>    sp&lt;IServiceManager&gt; sm = <span class="hljs-built_in">defaultServiceManager</span>();<br>    sp&lt;IBinder&gt; service = sm-&gt;<span class="hljs-built_in">checkService</span>(<span class="hljs-built_in">String16</span>(<span class="hljs-string">&quot;test_server&quot;</span>));<br>    <span class="hljs-comment">// Not necessary function, can be replaced with ifName = &quot;demo.ITest&quot;</span><br>    String16 ifName = <span class="hljs-built_in">get_interface_name</span>(service);<br><br>    <span class="hljs-keyword">if</span> (service != <span class="hljs-literal">nullptr</span> &amp;&amp; ifName.<span class="hljs-built_in">size</span>() &gt; <span class="hljs-number">0</span>) &#123;<br>        Parcel data, reply;<br>        <span class="hljs-comment">// the interface name is first</span><br>        data.<span class="hljs-built_in">writeInterfaceToken</span>(ifName);<br>        <span class="hljs-comment">// ping</span><br>        service-&gt;<span class="hljs-built_in">transact</span>(IBinder::FIRST_CALL_TRANSACTION + <span class="hljs-number">0</span>, data, &amp;reply);<br>        aout &lt;&lt; <span class="hljs-string">&quot;Result: &quot;</span> &lt;&lt; reply &lt;&lt; endl;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="JAVA的最简单调用"><a href="#JAVA的最简单调用" class="headerlink" title="JAVA的最简单调用"></a>JAVA的最简单调用</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> simplestcall;<br><br><span class="hljs-keyword">import</span> android.os.Bundle;<br><span class="hljs-keyword">import</span> android.os.IBinder;<br><span class="hljs-keyword">import</span> android.os.Parcel;<br><span class="hljs-keyword">import</span> android.os.RemoteException;<br><span class="hljs-keyword">import</span> android.os.ServiceManager;<br><span class="hljs-keyword">import</span> android.util.Log;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Main</span> &#123;<br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">String</span> <span class="hljs-variable">TAG</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;SimplestCall&quot;</span>;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>        <span class="hljs-type">IBinder</span> <span class="hljs-variable">service</span> <span class="hljs-operator">=</span> ServiceManager.getService(<span class="hljs-string">&quot;test_server&quot;</span>);<br>        <span class="hljs-keyword">final</span> <span class="hljs-type">Parcel</span> <span class="hljs-variable">data</span> <span class="hljs-operator">=</span> Parcel.obtain();<br>        <span class="hljs-keyword">final</span> <span class="hljs-type">Parcel</span> <span class="hljs-variable">reply</span> <span class="hljs-operator">=</span> Parcel.obtain();<br>        data.writeInterfaceToken(<span class="hljs-string">&quot;demo.ITest&quot;</span>);<br>        <span class="hljs-keyword">try</span> &#123;<br>            service.transact(IBinder.FIRST_CALL_TRANSACTION + <span class="hljs-number">0</span>, data, reply, <span class="hljs-number">0</span> <span class="hljs-comment">/* flags */</span>);<br>        &#125; <span class="hljs-keyword">catch</span> (RemoteException e) &#123;<br>            e.printStackTrace();<br>        &#125;<br>        System.out.println(reply.toString());<br>        reply.recycle();<br>        data.recycle();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h2><p>完整代码在tag 0.6下的simplestcall文件夹<br><a href="https://github.com/hqw700/binderdemo/releases/tag/v0.6">https://github.com/hqw700/binderdemo/releases/tag/v0.6</a></p>]]></content>
    
    
    <categories>
      
      <category>源码分析</category>
      
    </categories>
    
    
    <tags>
      
      <tag>教程</tag>
      
      <tag>Android系统</tag>
      
      <tag>binder</tag>
      
      <tag>github</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【工具使用】使用clion调试Android Native程序</title>
    <link href="/2022/09/28/clion-debug-android-native/"/>
    <url>/2022/09/28/clion-debug-android-native/</url>
    
    <content type="html"><![CDATA[<blockquote><p>运行环境: windows + WSL2<br>调试机器: pixel 3 + aosp10<br>使用工具: clion, adb</p></blockquote><p>CLion是IntelliJ开发的C&#x2F;C++跨平台IDE，和Android Studio有相同的UI和交互，弥补了Android Studio无法用来调试和索引native代码的不足。Android源码下有将源码生成为CLion project的文档(<code>$AOSP/build/soong/docs/clion.md</code>), 但使用clion调试不需要用到该部分功能，所以不做介绍。<br>我的环境是用WSL2下载和编译android源码，windows下可以在文件管理器中通过<code>\\wsl$</code>路径直接查看代码(类似于samba)，adb和CLion都运行在windows上。<br>下面以surfaceflinger程序为例的详细步骤：</p><h2 id="1，使用Clion打开源码"><a href="#1，使用Clion打开源码" class="headerlink" title="1，使用Clion打开源码"></a>1，使用Clion打开源码</h2><p>进入源码目录，右键Open Folder as CLion Project打开, 如<code>$AOSP/frameworks/native/services/surfaceflinger</code></p><p>打开后点击 Run –&gt; Edit configurations, 然后选择Remote Debug, 配置设置为:</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs awk">Debugger: Bundled GDB<br><span class="hljs-string">&#x27;target remote&#x27;</span> arg: :<span class="hljs-number">12345</span> (如果是远程环境需要加上ip, 如ip:<span class="hljs-number">12345</span>)<br>Sysroot: <span class="hljs-regexp">/home/</span>huangqw<span class="hljs-regexp">/code/</span>out<span class="hljs-regexp">/target/</span>product<span class="hljs-regexp">/blueline/</span>symbols (符号表的路径，路径为linux下的绝对路径，也可以是windows下路径)<br></code></pre></td></tr></table></figure><p><img src="/img/blog/clion_remote_debug_config.png"><br><img src="/img/blog/clion_remote_debug_config2.png"></p><h2 id="2，创建-gdbinit文件"><a href="#2，创建-gdbinit文件" class="headerlink" title="2，创建.gdbinit文件"></a>2，创建.gdbinit文件</h2><p>在windows的<code>C:\Users\%USERNAME%</code>目录下创建.gdbinit文件，设置以下内容。其中关键是 <code>set dir 源码目录</code></p><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs gams"><span class="hljs-keyword">set</span> dir /home/<span class="hljs-comment">huangqw</span>/code<br>set solib-absolute-prefix /<span class="hljs-comment">home</span>/huangqw/<span class="hljs-comment">code</span>/out/<span class="hljs-comment">target</span>/product/<span class="hljs-comment">blueline</span>/symbols<br>set solib-search-path /<span class="hljs-comment">home</span>/huangqw/<span class="hljs-comment">code</span>/out/<span class="hljs-comment">target</span>/product/<span class="hljs-comment">blueline</span>/symbols/<span class="hljs-comment">system</span>/lib64:/<span class="hljs-comment">home</span>/huangqw/<span class="hljs-comment">code</span>/out/<span class="hljs-comment">target</span>/product/<span class="hljs-comment">blueline</span>/symbols/<span class="hljs-comment">system</span>/lib64/<span class="hljs-comment">hw:</span>/home/<span class="hljs-comment">huangqw</span>/code/<span class="hljs-comment">out</span>/target/<span class="hljs-comment">product</span>/blueline/<span class="hljs-comment">symbols</span>/<span class="hljs-keyword">system</span>/<span class="hljs-comment">lib64</span>/ssl/<span class="hljs-comment">engines:</span>/home/<span class="hljs-comment">huangqw</span>/code/<span class="hljs-comment">out</span>/target/<span class="hljs-comment">product</span>/blueline/<span class="hljs-comment">symbols</span>/<span class="hljs-keyword">system</span>/<span class="hljs-comment">lib64</span>/drm:/<span class="hljs-comment">home</span>/huangqw/<span class="hljs-comment">code</span>/out/<span class="hljs-comment">target</span>/product/<span class="hljs-comment">blueline</span>/symbols/<span class="hljs-comment">system</span>/lib64/<span class="hljs-comment">egl:</span>/home/<span class="hljs-comment">huangqw</span>/code/<span class="hljs-comment">out</span>/target/<span class="hljs-comment">product</span>/blueline/<span class="hljs-comment">symbols</span>/<span class="hljs-keyword">system</span>/<span class="hljs-comment">lib64</span>/soundfx:/<span class="hljs-comment">home</span>/huangqw/<span class="hljs-comment">code</span>/out/<span class="hljs-comment">target</span>/product/<span class="hljs-comment">blueline</span>/symbols/<span class="hljs-comment">vendor</span>/lib64:/<span class="hljs-comment">home</span>/huangqw/<span class="hljs-comment">code</span>/out/<span class="hljs-comment">target</span>/product/<span class="hljs-comment">blueline</span>/symbols/<span class="hljs-comment">vendor</span>/lib64/<span class="hljs-comment">hw:</span>/home/<span class="hljs-comment">huangqw</span>/code/<span class="hljs-comment">out</span>/target/<span class="hljs-comment">product</span>/blueline/<span class="hljs-comment">symbols</span>/vendor/<span class="hljs-comment">lib64</span>/egl<br></code></pre></td></tr></table></figure><h2 id="3，Windows终端下操作"><a href="#3，Windows终端下操作" class="headerlink" title="3，Windows终端下操作"></a>3，Windows终端下操作</h2><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver">使用adb连接手机：<br>adb root<br>adb forward tcp:<span class="hljs-number">12345</span> tcp:<span class="hljs-number">12345</span><br>adb <span class="hljs-built_in">shell</span><br>blueline:/ <span class="hljs-comment"># gdbserver64 :12345 --attach `pidof surfaceflinger`</span><br>    Attached; pid = <span class="hljs-number">654</span><br>    gdbserver: Unable <span class="hljs-built_in">to</span> determine <span class="hljs-keyword">the</span> <span class="hljs-built_in">number</span> <span class="hljs-keyword">of</span> hardware watchpoints available.<br>    gdbserver: Unable <span class="hljs-built_in">to</span> determine <span class="hljs-keyword">the</span> <span class="hljs-built_in">number</span> <span class="hljs-keyword">of</span> hardware breakpoints available.<br>    Listening <span class="hljs-keyword">on</span> <span class="hljs-title">port</span> <span class="hljs-title">12345</span><br></code></pre></td></tr></table></figure><h2 id="4，调试"><a href="#4，调试" class="headerlink" title="4，调试"></a>4，调试</h2><p>回到CLion中，点击Run –&gt; Debug “Unnamed” 开始调试<br>在截屏代码下打个断点，如SurfaceFlinger::renderScreenImplLocked<br><img src="/img/blog/clion_debug_ok.png"></p><p>然后手动截图，成功断点如上图，接下来就可以单步运行，正常的话可以打开项目外的系统库文件。如图所示堆栈里的Looper函数。如显示的是汇编代码则不正常, 请检查.gdbinit文件，或者在gdb终端里set dir “xxx” 设置源码目录。<br><img src="/img/blog/clion_debug_ok2.png"></p><h2 id="5，变量显示optimized-out问题"><a href="#5，变量显示optimized-out问题" class="headerlink" title="5，变量显示optimized out问题"></a>5，变量显示optimized out问题</h2><p>调试时变量显示optimized out，无法正常查看。这是由于C++编译优化的原因，在Android.bp的cflags里加个”-O0”，重新编译surfaceflinger， push生成即可。<br><img src="/img/blog/clion_debug_ok3.png"></p>]]></content>
    
    
    <categories>
      
      <category>工具使用</category>
      
    </categories>
    
    
    <tags>
      
      <tag>教程</tag>
      
      <tag>Android系统</tag>
      
      <tag>工具使用</tag>
      
      <tag>调试</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【一起来学binder】in/out/inout以及oneway的简单示例</title>
    <link href="/2021/02/19/binder_in_out/"/>
    <url>/2021/02/19/binder_in_out/</url>
    
    <content type="html"><![CDATA[<h2 id="一，JAVA端使用"><a href="#一，JAVA端使用" class="headerlink" title="一，JAVA端使用"></a>一，JAVA端使用</h2><h3 id="1-1-aidl接口"><a href="#1-1-aidl接口" class="headerlink" title="1.1 aidl接口"></a>1.1 aidl接口</h3><p>一开始写java demo的时候用Bundle来传输数据，当用cpp写的时候才发现cpp上没有bundle，cpp上可以用的PersistableBundle在java上又缺少out传输的接口，所以本章java和cpp采用不同的aidl文件，大家也可以从中发现Bundle和PersistableBundle的区别。<br>增加了三个接口：sendIn&#x2F;sendOut&#x2F;sendInOut 分别对应binder参数in&#x2F;out&#x2F;inout三种模式, 没有声明的话系统默认为in模式</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> demo;<br><br><span class="hljs-keyword">import</span> demo.ICallback;<br><span class="hljs-keyword">import</span> android.os.Bundle;<br><span class="hljs-keyword">interface</span> <span class="hljs-title class_">ITest</span><br>&#123;<br>    <span class="hljs-keyword">void</span> <span class="hljs-title function_">ping</span><span class="hljs-params">()</span>;<br>    oneway <span class="hljs-keyword">void</span> <span class="hljs-title function_">pingOneway</span><span class="hljs-params">()</span>;<br>    <span class="hljs-keyword">void</span> <span class="hljs-title function_">sendIn</span><span class="hljs-params">(in Bundle data)</span>;<br>    <span class="hljs-keyword">void</span> <span class="hljs-title function_">sendOut</span><span class="hljs-params">(out Bundle data)</span>;<br>    <span class="hljs-keyword">void</span> <span class="hljs-title function_">sendInOut</span><span class="hljs-params">(inout Bundle data)</span>;<br>    <span class="hljs-type">int</span> <span class="hljs-title function_">sum</span><span class="hljs-params">(<span class="hljs-type">int</span> x, <span class="hljs-type">int</span> y)</span>;<br>    <span class="hljs-keyword">void</span> <span class="hljs-title function_">registerCallback</span><span class="hljs-params">(ICallback cb)</span>;<br>    <span class="hljs-keyword">void</span> <span class="hljs-title function_">unregisterCallback</span><span class="hljs-params">(ICallback cb)</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="1-2-生成代码"><a href="#1-2-生成代码" class="headerlink" title="1.2 生成代码"></a>1.2 生成代码</h3><p>需要指定android.os.Bundle类的路径frameworks&#x2F;base&#x2F;core&#x2F;java</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gradle">out<span class="hljs-regexp">/host/</span>linux-x86<span class="hljs-regexp">/bin/</span>aidl -Iframeworks<span class="hljs-regexp">/native/</span>cmds<span class="hljs-regexp">/binderdemo/</span>aidl -Iframeworks<span class="hljs-regexp">/base/</span>core<span class="hljs-regexp">/java -oframeworks/</span><span class="hljs-keyword">native</span><span class="hljs-regexp">/cmds/</span>binderdemo<span class="hljs-regexp">/java/</span>src<span class="hljs-regexp">/ frameworks/</span><span class="hljs-keyword">native</span><span class="hljs-regexp">/cmds/</span>binderdemo<span class="hljs-regexp">/aidl/</span>demo/ITest.aidl<br></code></pre></td></tr></table></figure><h3 id="1-3-客户端代码"><a href="#1-3-客户端代码" class="headerlink" title="1.3 客户端代码"></a>1.3 客户端代码</h3><p>客户在三种模式下统一发送一个Bundle对象，Bundle中包含一个”data”字段，内容为”client”。然后打印发送后该Bundle的内容。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">Bundle</span> <span class="hljs-variable">data_in</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Bundle</span>();<br>data_in.putString(<span class="hljs-string">&quot;data&quot;</span>, <span class="hljs-string">&quot;client&quot;</span>);<br>testClient.sendIn(data_in);<br>Log.d(TAG_C, <span class="hljs-string">&quot;after sendIn: &quot;</span> + data_in.getString(<span class="hljs-string">&quot;data&quot;</span>));<br><br><span class="hljs-type">Bundle</span> <span class="hljs-variable">data_out</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Bundle</span>();<br>data_out.putString(<span class="hljs-string">&quot;data&quot;</span>, <span class="hljs-string">&quot;client&quot;</span>);<br>testClient.sendOut(data_out);<br>Log.d(TAG_C, <span class="hljs-string">&quot;after sendOut: &quot;</span> + data_out.getString(<span class="hljs-string">&quot;data&quot;</span>));<br><br><span class="hljs-type">Bundle</span> <span class="hljs-variable">data_inout</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Bundle</span>();<br>data_inout.putString(<span class="hljs-string">&quot;data&quot;</span>, <span class="hljs-string">&quot;client&quot;</span>);<br>testClient.sendInOut(data_inout);<br>Log.d(TAG_C, <span class="hljs-string">&quot;after sendInOut: &quot;</span> + data_inout.getString(<span class="hljs-string">&quot;data&quot;</span>));<br></code></pre></td></tr></table></figure><h3 id="1-4-服务端代码"><a href="#1-4-服务端代码" class="headerlink" title="1.4 服务端代码"></a>1.4 服务端代码</h3><p>服务端统一将传入的Bundle中data字段的内容接上”server”</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Override</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">sendIn</span><span class="hljs-params">(Bundle data)</span> <span class="hljs-keyword">throws</span> RemoteException &#123;<br>    <span class="hljs-type">String</span> <span class="hljs-variable">rec</span> <span class="hljs-operator">=</span> data.getString(<span class="hljs-string">&quot;data&quot;</span>);<br>    Log.d(TAG, <span class="hljs-string">&quot;sendIn: receive: &quot;</span> + rec);<br>    data.putString(<span class="hljs-string">&quot;data&quot;</span>, rec + <span class="hljs-string">&quot;server&quot;</span>);<br>&#125;<br><br><span class="hljs-meta">@Override</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">sendOut</span><span class="hljs-params">(Bundle data)</span> <span class="hljs-keyword">throws</span> RemoteException &#123;<br>    <span class="hljs-type">String</span> <span class="hljs-variable">rec</span> <span class="hljs-operator">=</span> data.getString(<span class="hljs-string">&quot;data&quot;</span>);<br>    Log.d(TAG, <span class="hljs-string">&quot;sendOut: receive: &quot;</span> + rec);<br>    data.putString(<span class="hljs-string">&quot;data&quot;</span>, rec + <span class="hljs-string">&quot;server&quot;</span>);<br>&#125;<br><br><span class="hljs-meta">@Override</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">sendInOut</span><span class="hljs-params">(Bundle data)</span> <span class="hljs-keyword">throws</span> RemoteException &#123;<br>    <span class="hljs-type">String</span> <span class="hljs-variable">rec</span> <span class="hljs-operator">=</span> data.getString(<span class="hljs-string">&quot;data&quot;</span>);<br>    Log.d(TAG, <span class="hljs-string">&quot;sendInOut: receive: &quot;</span> + rec);<br>    data.putString(<span class="hljs-string">&quot;data&quot;</span>, rec + <span class="hljs-string">&quot;server&quot;</span>);<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="1-5-测试结果"><a href="#1-5-测试结果" class="headerlink" title="1.5 测试结果"></a>1.5 测试结果</h3><p>logcat</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs log">1973-03-06 03:09:36.760 2744-2744/? D/JAVA_BINDER.Server: This is TestServer<br>1973-03-06 03:09:42.601 2753-2753/? D/JAVA_BINDER.Client: This is TestClient<br>1973-03-06 03:09:42.605 2744-2751/? D/JAVA_BINDER.Server: sendIn: receive: client<br>1973-03-06 03:09:42.605 2753-2753/? D/JAVA_BINDER.Client: after sendIn: client<br>1973-03-06 03:09:42.605 2744-2752/? D/JAVA_BINDER.Server: sendOut: receive: null<br>1973-03-06 03:09:42.606 2753-2753/? D/JAVA_BINDER.Client: after sendOut: nullserver<br>1973-03-06 03:09:42.606 2744-2751/? D/JAVA_BINDER.Server: sendInOut: receive: client<br>1973-03-06 03:09:42.606 2753-2753/? D/JAVA_BINDER.Client: after sendInOut: clientserver<br><br></code></pre></td></tr></table></figure><p><img src="/img/blog/binder_in_out.jpg"> </p><h2 id="二，CPP端使用"><a href="#二，CPP端使用" class="headerlink" title="二，CPP端使用"></a>二，CPP端使用</h2><h3 id="2-1-aidl接口"><a href="#2-1-aidl接口" class="headerlink" title="2.1 aidl接口"></a>2.1 aidl接口</h3><p>由Bundle替换为PersistableBundle</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> demo;<br><br><span class="hljs-keyword">import</span> demo.ICallback;<br><span class="hljs-keyword">import</span> android.os.PersistableBundle;<br><span class="hljs-keyword">interface</span> <span class="hljs-title class_">ITest</span><br>&#123;<br>    <span class="hljs-keyword">void</span> <span class="hljs-title function_">ping</span><span class="hljs-params">()</span>;<br>    oneway <span class="hljs-keyword">void</span> <span class="hljs-title function_">pingOneway</span><span class="hljs-params">()</span>;<br>    <span class="hljs-keyword">void</span> <span class="hljs-title function_">sendIn</span><span class="hljs-params">(in PersistableBundle data)</span>;<br>    <span class="hljs-keyword">void</span> <span class="hljs-title function_">sendOut</span><span class="hljs-params">(out PersistableBundle data)</span>;<br>    <span class="hljs-keyword">void</span> <span class="hljs-title function_">sendInOut</span><span class="hljs-params">(inout PersistableBundle data)</span>;<br>    <span class="hljs-type">int</span> <span class="hljs-title function_">sum</span><span class="hljs-params">(<span class="hljs-type">int</span> x, <span class="hljs-type">int</span> y)</span>;<br>    <span class="hljs-keyword">void</span> <span class="hljs-title function_">registerCallback</span><span class="hljs-params">(ICallback cb)</span>;<br>    <span class="hljs-keyword">void</span> <span class="hljs-title function_">unregisterCallback</span><span class="hljs-params">(ICallback cb)</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="2-2-生成代码"><a href="#2-2-生成代码" class="headerlink" title="2.2 生成代码"></a>2.2 生成代码</h3><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gradle">out<span class="hljs-regexp">/host/</span>linux-x86<span class="hljs-regexp">/bin/</span>aidl-cpp -Iframeworks<span class="hljs-regexp">/native/</span>cmds<span class="hljs-regexp">/binderdemo/</span>aidl -Iframeworks<span class="hljs-regexp">/native/</span>aidl<span class="hljs-regexp">/binder frameworks/</span><span class="hljs-keyword">native</span><span class="hljs-regexp">/cmds/</span>binderdemo<span class="hljs-regexp">/aidl/</span>demo<span class="hljs-regexp">/ITest.aidl frameworks/</span><span class="hljs-keyword">native</span><span class="hljs-regexp">/cmds/</span>binderdemo<span class="hljs-regexp">/cpp/i</span>nclude<span class="hljs-regexp">/ frameworks/</span><span class="hljs-keyword">native</span><span class="hljs-regexp">/cmds/</span>binderdemo<span class="hljs-regexp">/cpp/I</span>Test.cpp<br></code></pre></td></tr></table></figure><h3 id="2-3-客户端代码"><a href="#2-3-客户端代码" class="headerlink" title="2.3 客户端代码"></a>2.3 客户端代码</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-type">int</span> argc, <span class="hljs-type">char</span> **argv)</span> </span>&#123;<br>    ...<br>    os::PersistableBundle data_in;<br>    data_in.<span class="hljs-built_in">putString</span>(<span class="hljs-built_in">String16</span>(<span class="hljs-string">&quot;data&quot;</span>),<span class="hljs-built_in">String16</span>( <span class="hljs-string">&quot;client&quot;</span>));<br>    test-&gt;<span class="hljs-built_in">sendIn</span>(data_in);<br>    String16 ret_in;<br>    data_in.<span class="hljs-built_in">getString</span>(<span class="hljs-built_in">String16</span>(<span class="hljs-string">&quot;data&quot;</span>), &amp;ret_in);<br>    <span class="hljs-built_in">INFO</span>(<span class="hljs-string">&quot;client: after sendIn: %s&quot;</span>, <span class="hljs-built_in">String8</span>(ret_in).<span class="hljs-built_in">string</span>());<br><br>    os::PersistableBundle data_out;<br>    data_out.<span class="hljs-built_in">putString</span>(<span class="hljs-built_in">String16</span>(<span class="hljs-string">&quot;data&quot;</span>),<span class="hljs-built_in">String16</span>( <span class="hljs-string">&quot;client&quot;</span>));<br>    test-&gt;<span class="hljs-built_in">sendOut</span>(&amp;data_out);<br>    String16 ret_out;<br>    data_out.<span class="hljs-built_in">getString</span>(<span class="hljs-built_in">String16</span>(<span class="hljs-string">&quot;data&quot;</span>), &amp;ret_out);<br>    <span class="hljs-built_in">INFO</span>(<span class="hljs-string">&quot;client: after sendOut: %s&quot;</span>, <span class="hljs-built_in">String8</span>(ret_out).<span class="hljs-built_in">string</span>());<br><br>    os::PersistableBundle data_inout;<br>    data_inout.<span class="hljs-built_in">putString</span>(<span class="hljs-built_in">String16</span>(<span class="hljs-string">&quot;data&quot;</span>),<span class="hljs-built_in">String16</span>( <span class="hljs-string">&quot;client&quot;</span>));<br>    test-&gt;<span class="hljs-built_in">sendInOut</span>(&amp;data_inout);<br>    String16 ret_inout;<br>    data_inout.<span class="hljs-built_in">getString</span>(<span class="hljs-built_in">String16</span>(<span class="hljs-string">&quot;data&quot;</span>), &amp;ret_inout);<br>    <span class="hljs-built_in">INFO</span>(<span class="hljs-string">&quot;client: after sendInOut: %s&quot;</span>, <span class="hljs-built_in">String8</span>(ret_inout).<span class="hljs-built_in">string</span>());<br>    ...<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="2-4-服务端代码"><a href="#2-4-服务端代码" class="headerlink" title="2.4 服务端代码"></a>2.4 服务端代码</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Test</span> : <span class="hljs-keyword">public</span> demo::BnTest &#123;<br>    std::vector&lt;sp&lt;demo::ICallback&gt;&gt; mCallbackList;<br><span class="hljs-keyword">public</span>:<br>    <span class="hljs-function">binder::Status <span class="hljs-title">sendIn</span><span class="hljs-params">(<span class="hljs-type">const</span> os::PersistableBundle &amp;data)</span> <span class="hljs-keyword">override</span> </span>&#123;<br>        String16 rec;<br>        data.<span class="hljs-built_in">getString</span>(<span class="hljs-built_in">String16</span>(<span class="hljs-string">&quot;data&quot;</span>), &amp;rec);<br>        <span class="hljs-built_in">INFO</span>(<span class="hljs-string">&quot;server: sendIn: receive: %s&quot;</span>, <span class="hljs-built_in">String8</span>(rec).<span class="hljs-built_in">string</span>());<br><span class="hljs-comment">//        rec.append(String16(&quot;server&quot;));</span><br><span class="hljs-comment">//        data-&gt;putString(String16(&quot;data&quot;), rec);</span><br>        <span class="hljs-keyword">return</span> binder::<span class="hljs-built_in">Status</span>();<br>    &#125;<br><br>    <span class="hljs-function">binder::Status <span class="hljs-title">sendOut</span><span class="hljs-params">(os::PersistableBundle *data)</span> <span class="hljs-keyword">override</span> </span>&#123;<br>        String16 rec;<br>        data-&gt;<span class="hljs-built_in">getString</span>(<span class="hljs-built_in">String16</span>(<span class="hljs-string">&quot;data&quot;</span>), &amp;rec);<br>        <span class="hljs-built_in">INFO</span>(<span class="hljs-string">&quot;server: sendIn: receive: %s&quot;</span>, <span class="hljs-built_in">String8</span>(rec).<span class="hljs-built_in">string</span>());<br>        rec.<span class="hljs-built_in">append</span>(<span class="hljs-built_in">String16</span>(<span class="hljs-string">&quot;server&quot;</span>));<br>        data-&gt;<span class="hljs-built_in">putString</span>(<span class="hljs-built_in">String16</span>(<span class="hljs-string">&quot;data&quot;</span>), rec);<br>        <span class="hljs-keyword">return</span> binder::<span class="hljs-built_in">Status</span>();<br>    &#125;<br><br>    <span class="hljs-function">binder::Status <span class="hljs-title">sendInOut</span><span class="hljs-params">(os::PersistableBundle *data)</span> <span class="hljs-keyword">override</span> </span>&#123;<br>        String16 rec;<br>        data-&gt;<span class="hljs-built_in">getString</span>(<span class="hljs-built_in">String16</span>(<span class="hljs-string">&quot;data&quot;</span>), &amp;rec);<br>        <span class="hljs-built_in">INFO</span>(<span class="hljs-string">&quot;server: sendIn: receive: %s&quot;</span>, <span class="hljs-built_in">String8</span>(rec).<span class="hljs-built_in">string</span>());<br>        rec.<span class="hljs-built_in">append</span>(<span class="hljs-built_in">String16</span>(<span class="hljs-string">&quot;server&quot;</span>));<br>        data-&gt;<span class="hljs-built_in">putString</span>(<span class="hljs-built_in">String16</span>(<span class="hljs-string">&quot;data&quot;</span>), rec);<br>        <span class="hljs-keyword">return</span> binder::<span class="hljs-built_in">Status</span>();<br>    &#125;<br>&#125;;<br></code></pre></td></tr></table></figure><h3 id="2-5-测试结果"><a href="#2-5-测试结果" class="headerlink" title="2.5 测试结果"></a>2.5 测试结果</h3><p>测试结果和java端基本一致</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs log">1973-03-06 03:42:09.009 2818-2818/? D/cpp_binder: server: This is TestServer<br>1973-03-06 03:42:15.334 2821-2821/? D/cpp_binder: server: This is TestServer<br>1973-03-06 03:42:19.767 2823-2823/? D/cpp_binder: client: We&#x27;re the client, inout test<br>1973-03-06 03:42:19.770 2821-2821/? D/cpp_binder: server: sendIn: receive: client<br>1973-03-06 03:42:19.772 2823-2823/? D/cpp_binder: client: after sendIn: client<br>1973-03-06 03:42:19.774 2821-2822/? D/cpp_binder: server: sendIn: receive: <br>1973-03-06 03:42:19.775 2823-2823/? D/cpp_binder: client: after sendOut: server<br>1973-03-06 03:42:19.775 2821-2821/? D/cpp_binder: server: sendIn: receive: client<br>1973-03-06 03:42:19.776 2823-2823/? D/cpp_binder: client: after sendInOut: clientserver<br></code></pre></td></tr></table></figure><h2 id="三，总结"><a href="#三，总结" class="headerlink" title="三，总结"></a>三，总结</h2><p>由测试结果可以看出：<br>1， 在in(默认)模式下，会将内容传递到服务端，但服务端修改的内容不会传回来<br>2， 在out模式下，不会将内容传递到服务端，但服务端修改的内容会传回来<br>3， 在inout模式下，会将内容传递到服务端，服务端修改的内容也会传回来</p><h2 id="四，oneway"><a href="#四，oneway" class="headerlink" title="四，oneway"></a>四，oneway</h2><p>oneway的用法比较简单，区别就是加了oneway不等待服务端执行完就返回，详细用法可以看代码中的ping()和pingOneway()的区别</p><h2 id="五，源码与环境"><a href="#五，源码与环境" class="headerlink" title="五，源码与环境"></a>五，源码与环境</h2><p>由于java和cpp采用不同的接口，源码分成两部分。<br>java部分代码在:<br><a href="https://github.com/hqw700/binderdemo/releases/tag/v0.5.1">https://github.com/hqw700/binderdemo/releases/tag/v0.5.1</a><br>cpp部分代码在:<br><a href="https://github.com/hqw700/binderdemo/releases/tag/v0.5.2">https://github.com/hqw700/binderdemo/releases/tag/v0.5.2</a></p><blockquote><p>操作系统：Windows 10 专业版 19042.685<br>编译机：WSL2 Ubuntu-18.04<br>手机：Google Pixel 1<br>源码版本：AOSP android-7.1.1_r35</p></blockquote>]]></content>
    
    
    <categories>
      
      <category>源码分析</category>
      
    </categories>
    
    
    <tags>
      
      <tag>教程</tag>
      
      <tag>Android系统</tag>
      
      <tag>binder</tag>
      
      <tag>github</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【一起来学binder】java/cpp端回调的简单示例</title>
    <link href="/2021/01/26/binder_callback/"/>
    <url>/2021/01/26/binder_callback/</url>
    
    <content type="html"><![CDATA[<p>新建aidl回调接口，用工具生成代码，并实现java&#x2F;cpp服务端和测试代码。<br>基本流程和<a href="https://hqw700.github.io/2021/01/05/java-binder-gen/">java端代码生成</a>，<a href="https://hqw700.github.io/2021/01/09/cpp-binder-gen/">cpp端代码生成</a> 这两章差不多，都分为接口代码生成， 服务端代码，测试代码三部分。</p><h2 id="一，-增加aidl回调接口"><a href="#一，-增加aidl回调接口" class="headerlink" title="一， 增加aidl回调接口"></a>一， 增加aidl回调接口</h2><p>ICallback.aidl</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> demo;<br><br><span class="hljs-keyword">interface</span> <span class="hljs-title class_">ICallback</span><br>&#123;<br>    <span class="hljs-keyword">void</span> <span class="hljs-title function_">onCallback</span><span class="hljs-params">(String str)</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>在ITest.aidl中增加注册回调接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> demo;<br><br><span class="hljs-keyword">import</span> demo.ICallback;<br><span class="hljs-keyword">interface</span> <span class="hljs-title class_">ITest</span><br>&#123;<br>    <span class="hljs-keyword">void</span> <span class="hljs-title function_">ping</span><span class="hljs-params">()</span>;<br>    <span class="hljs-type">int</span> <span class="hljs-title function_">sum</span><span class="hljs-params">(<span class="hljs-type">int</span> x, <span class="hljs-type">int</span> y)</span>;<br>    <span class="hljs-keyword">void</span> <span class="hljs-title function_">registerCallback</span><span class="hljs-params">(ICallback cb)</span>;<br>    <span class="hljs-keyword">void</span> <span class="hljs-title function_">unregisterCallback</span><span class="hljs-params">(ICallback cb)</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="二，-JAVA端使用"><a href="#二，-JAVA端使用" class="headerlink" title="二， JAVA端使用"></a>二， JAVA端使用</h2><h3 id="2-1-java端回调代码生成"><a href="#2-1-java端回调代码生成" class="headerlink" title="2.1 java端回调代码生成"></a>2.1 java端回调代码生成</h3><p>执行下面两条命令即可</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs awk">$ out<span class="hljs-regexp">/host/</span>linux-x86<span class="hljs-regexp">/bin/</span>aidl -Iframeworks<span class="hljs-regexp">/native/</span>cmds<span class="hljs-regexp">/binderdemo/</span>aidl -oframeworks<span class="hljs-regexp">/native/</span>cmds<span class="hljs-regexp">/binderdemo/</span>java<span class="hljs-regexp">/src/</span> frameworks<span class="hljs-regexp">/native/</span>cmds<span class="hljs-regexp">/binderdemo/</span>ICallback.aidl<br>$ out<span class="hljs-regexp">/host/</span>linux-x86<span class="hljs-regexp">/bin/</span>aidl -Iframeworks<span class="hljs-regexp">/native/</span>cmds<span class="hljs-regexp">/binderdemo/</span>aidl -oframeworks<span class="hljs-regexp">/native/</span>cmds<span class="hljs-regexp">/binderdemo/</span>java<span class="hljs-regexp">/src/</span> frameworks<span class="hljs-regexp">/native/</span>cmds<span class="hljs-regexp">/binderdemo/</span>aidl<span class="hljs-regexp">/demo/</span>ITest.aidl<br>$ tree <br>├── aidl<br>│   └── demo<br>│       ├── ICallback.aidl<br>│       └── ITest.aidl<br>java/<br>├── Android.mk<br>├── java_binder_test<br>└── src<br>    └── demo<br>        ├── ICallback.java<br>        ├── ITest.java<br>        ├── Main.java<br>        └── TestServer.java<br><br></code></pre></td></tr></table></figure><p>这里解释下aidl工具的用法：<br><strong>-I</strong> 指定aidl引用的目录，因为当时有引用demo.ICallback包<br><strong>-o</strong> 指定生成目录<br>其它一些没有用到，没去研究就不作解释了。</p><h3 id="2-2-java服务端代码"><a href="#2-2-java服务端代码" class="headerlink" title="2.2 java服务端代码"></a>2.2 java服务端代码</h3><p>首先需要一个远程回调的数组队列和遍历执行回调的方法 </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">private</span> <span class="hljs-keyword">final</span> RemoteCallbackList&lt;ICallback&gt; mCallbacks = <span class="hljs-keyword">new</span> <span class="hljs-title class_">RemoteCallbackList</span>&lt;ICallback&gt;();<br><br><span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">doCallback</span><span class="hljs-params">(String info)</span> &#123;<br>    <span class="hljs-keyword">if</span> (mCallbacks == <span class="hljs-literal">null</span> || mCallbacks.getRegisteredCallbackCount() &lt;= <span class="hljs-number">0</span>) &#123;<br>        Log.d(TAG, <span class="hljs-string">&quot;doCallback error&quot;</span>);<br>        <span class="hljs-keyword">return</span>;<br>    &#125;<br>    <span class="hljs-keyword">synchronized</span> (mCallbacks) &#123;<br>        mCallbacks.beginBroadcast();<br>        <span class="hljs-type">int</span> <span class="hljs-variable">N</span> <span class="hljs-operator">=</span> mCallbacks.getRegisteredCallbackCount();<br>        Log.d(TAG, <span class="hljs-string">&quot;doCallback Count = &quot;</span> + N);<br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>; i &lt; N; i++) &#123;<br>            <span class="hljs-keyword">try</span> &#123;<br>                <span class="hljs-keyword">if</span> (mCallbacks.getBroadcastItem(i) == <span class="hljs-literal">null</span>) &#123;<br>                    <span class="hljs-keyword">continue</span>;<br>                &#125;<br>                mCallbacks.getBroadcastItem(i).onCallback(info);<br>            &#125; <span class="hljs-keyword">catch</span> (DeadObjectException e) &#123;<br>                <span class="hljs-keyword">if</span> (mCallbacks.getBroadcastItem(i) != <span class="hljs-literal">null</span>)<br>                    mCallbacks.unregister(mCallbacks.getBroadcastItem(i));<br>            &#125; <span class="hljs-keyword">catch</span> (RemoteException e) &#123;<br>                e.printStackTrace();<br>            &#125;<br>        &#125;<br>        mCallbacks.finishBroadcast();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>然后重写注册和反注册接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Override</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">registerCallback</span><span class="hljs-params">(ICallback cb)</span> <span class="hljs-keyword">throws</span> RemoteException &#123;<br>    Log.d(TAG, <span class="hljs-string">&quot;register &quot;</span> + cb);<br>    <span class="hljs-keyword">if</span> (cb != <span class="hljs-literal">null</span>) mCallbacks.register(cb);<br>&#125;<br><br><span class="hljs-meta">@Override</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">unregisterCallback</span><span class="hljs-params">(ICallback cb)</span> <span class="hljs-keyword">throws</span> RemoteException &#123;<br>    <span class="hljs-keyword">if</span> (cb != <span class="hljs-literal">null</span>) mCallbacks.unregister(cb);<br>&#125;<br></code></pre></td></tr></table></figure><p>最后就是回调方法的调用，我让执行ping函数后延时5秒回调</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Override</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">ping</span><span class="hljs-params">()</span> <span class="hljs-keyword">throws</span> RemoteException &#123;<br>    Log.d(TAG, <span class="hljs-string">&quot;ping receive ok, after 5s callback&quot;</span>);<br>    <span class="hljs-keyword">try</span> &#123;<br>        Thread.sleep(<span class="hljs-number">5000</span>);<br>    &#125; <span class="hljs-keyword">catch</span> (InterruptedException e) &#123;&#125;<br><br>    Log.d(TAG, <span class="hljs-string">&quot;ping doCallback&quot;</span>);<br>    doCallback(<span class="hljs-string">&quot;ping&quot;</span>);<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="2-3-测试类Main-java"><a href="#2-3-测试类Main-java" class="headerlink" title="2.3 测试类Main.java"></a>2.3 测试类Main.java</h3><p>和注册死亡回调差不多, 注册之后执行ping函数，5s后会收到回调。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>    ...<br>    testClient.registerCallback(<span class="hljs-keyword">new</span> <span class="hljs-title class_">ICallback</span>.Stub() &#123;<br>        <span class="hljs-meta">@Override</span><br>        <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">onCallback</span><span class="hljs-params">(String str)</span> <span class="hljs-keyword">throws</span> RemoteException &#123;<br>            Log.d(TAG_C, <span class="hljs-string">&quot;This is onCallback&quot;</span>);<br>        &#125;<br>    &#125;);<br><br>    Log.d(TAG_C, <span class="hljs-string">&quot;ping, 5s callback&quot;</span>);<br>    testClient.ping();<br>    ...<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="三，CPP端使用"><a href="#三，CPP端使用" class="headerlink" title="三，CPP端使用"></a>三，CPP端使用</h2><h3 id="3-1-cpp端回调代码生成"><a href="#3-1-cpp端回调代码生成" class="headerlink" title="3.1 cpp端回调代码生成"></a>3.1 cpp端回调代码生成</h3><p>执行下面两条指令即可</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs gradle">$ out<span class="hljs-regexp">/host/</span>linux-x86<span class="hljs-regexp">/bin/</span>aidl-cpp frameworks<span class="hljs-regexp">/native/</span>cmds<span class="hljs-regexp">/binderdemo/</span>aidl<span class="hljs-regexp">/demo/I</span>Callback.aidl frameworks<span class="hljs-regexp">/native/</span>cmds<span class="hljs-regexp">/binderdemo/</span>cpp<span class="hljs-regexp">/include/</span> frameworks<span class="hljs-regexp">/native/</span>cmds<span class="hljs-regexp">/binderdemo/</span>cpp/ICallback.cpp<br>$ out<span class="hljs-regexp">/host/</span>linux-x86<span class="hljs-regexp">/bin/</span>aidl-cpp -Iframeworks<span class="hljs-regexp">/native/</span>cmds<span class="hljs-regexp">/binderdemo/</span>aidl frameworks<span class="hljs-regexp">/native/</span>cmds<span class="hljs-regexp">/binderdemo/</span>aidl<span class="hljs-regexp">/demo/I</span>Test.aidl frameworks<span class="hljs-regexp">/native/</span>cmds<span class="hljs-regexp">/binderdemo/</span>cpp<span class="hljs-regexp">/include/</span> frameworks<span class="hljs-regexp">/native/</span>cmds<span class="hljs-regexp">/binderdemo/</span>cpp/ITest.cpp<br>$ tree<br>├── aidl<br>│   └── demo<br>│       ├── ICallback.aidl<br>│       └── ITest.aidl<br>├── cpp<br>│   ├── Android.mk<br>│   ├── CMakeLists.txt<br>│   ├── ICallback.cpp<br>│   ├── ITest.cpp<br>│   ├── <span class="hljs-keyword">include</span><br>│   │   └── demo<br>│   │       ├── BnCallback.h<br>│   │       ├── BnTest.h<br>│   │       ├── BpCallback.h<br>│   │       ├── BpTest.h<br>│   │       ├── ICallback.h<br>│   │       └── ITest.h<br>│   └── main.cpp<br></code></pre></td></tr></table></figure><h3 id="3-2-cpp服务端代码"><a href="#3-2-cpp服务端代码" class="headerlink" title="3.2 cpp服务端代码"></a>3.2 cpp服务端代码</h3><p>远程回调的数组</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cpp">std::vector&lt;sp&lt;demo::ICallback&gt;&gt; mCallbackList;<br></code></pre></td></tr></table></figure><p>注册与反注册</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-function">binder::Status <span class="hljs-title">registerCallback</span><span class="hljs-params">(<span class="hljs-type">const</span> sp&lt;::demo::ICallback&gt; &amp;cb)</span> <span class="hljs-keyword">override</span> </span>&#123;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">auto</span>&amp; it : mCallbackList) &#123;<br>        <span class="hljs-keyword">if</span> (IInterface::<span class="hljs-built_in">asBinder</span>(it) == IInterface::<span class="hljs-built_in">asBinder</span>(cb)) &#123;<br>            <span class="hljs-built_in">INFO</span>(<span class="hljs-string">&quot;%s: Tried to add callback %p which was already subscribed&quot;</span>,<br>                    __FUNCTION__, cb.<span class="hljs-built_in">get</span>());<br>            <span class="hljs-keyword">return</span> binder::<span class="hljs-built_in">Status</span>();<br>        &#125;<br>    &#125;<br><br>    mCallbackList.<span class="hljs-built_in">push_back</span>(cb);<br>    <span class="hljs-keyword">return</span> binder::<span class="hljs-built_in">Status</span>();<br>&#125;<br><br><span class="hljs-function">binder::Status <span class="hljs-title">unregisterCallback</span><span class="hljs-params">(<span class="hljs-type">const</span> sp&lt;::demo::ICallback&gt; &amp;cb)</span> <span class="hljs-keyword">override</span> </span>&#123;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">auto</span> it = mCallbackList.<span class="hljs-built_in">begin</span>(); it != mCallbackList.<span class="hljs-built_in">end</span>(); it++) &#123;<br>        <span class="hljs-keyword">if</span> (IInterface::<span class="hljs-built_in">asBinder</span>(*it) == IInterface::<span class="hljs-built_in">asBinder</span>(cb)) &#123;<br>            mCallbackList.<span class="hljs-built_in">erase</span>(it);<br>            <span class="hljs-built_in">INFO</span>(<span class="hljs-string">&quot;server: unregisterCallback ok&quot;</span>);<br>            <span class="hljs-keyword">return</span> binder::<span class="hljs-built_in">Status</span>().<span class="hljs-built_in">ok</span>();<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">return</span> binder::<span class="hljs-built_in">Status</span>();<br>&#125;<br></code></pre></td></tr></table></figure><p>回调方法的调用，还是执行ping函数后延时5秒回调</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-keyword">for</span> (<span class="hljs-keyword">auto</span>&amp; i : mCallbackList) &#123;<br>    i-&gt;<span class="hljs-built_in">onCallback</span>(<span class="hljs-built_in">String16</span>(<span class="hljs-string">&quot;test&quot;</span>));<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="3-3-测试类main-cpp"><a href="#3-3-测试类main-cpp" class="headerlink" title="3.3 测试类main.cpp"></a>3.3 测试类main.cpp</h3><p>先注册回调，然后再解除注册</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-keyword">class</span> <span class="hljs-title class_">CallbackTest</span> : <span class="hljs-keyword">public</span> demo::BnCallback &#123;<br><span class="hljs-keyword">public</span>:<br>    <span class="hljs-function">binder::Status <span class="hljs-title">onCallback</span><span class="hljs-params">(<span class="hljs-type">const</span> String16 &amp;str)</span> <span class="hljs-keyword">override</span> </span>&#123;<br>        <span class="hljs-built_in">INFO</span>(<span class="hljs-string">&quot;client: onCallback, receive str: %s&quot;</span>, <span class="hljs-built_in">String8</span>(str).<span class="hljs-built_in">string</span>());<br>        <span class="hljs-keyword">return</span> binder::<span class="hljs-built_in">Status</span>();<br>    &#125;<br>&#125;;<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-type">int</span> argc, <span class="hljs-type">char</span> **argv)</span> </span>&#123;<br>    <span class="hljs-function">sp&lt;ProcessState&gt; <span class="hljs-title">proc</span><span class="hljs-params">(ProcessState::self())</span></span>;<br>    ProcessState::<span class="hljs-built_in">self</span>()-&gt;<span class="hljs-built_in">startThreadPool</span>();<br>    sp&lt;IServiceManager&gt; sm = <span class="hljs-built_in">defaultServiceManager</span>();<br>    sp&lt;IBinder&gt; binder = sm-&gt;<span class="hljs-built_in">getService</span>(<span class="hljs-built_in">String16</span>(BINDER_NAME));<br>    sp&lt;demo::ITest&gt; test = <span class="hljs-built_in">interface_cast</span>&lt;demo::ITest&gt;(binder);<br>    sp&lt;CallbackTest&gt; callback = <span class="hljs-keyword">new</span> <span class="hljs-built_in">CallbackTest</span>();<br>    test-&gt;<span class="hljs-built_in">registerCallback</span>(callback);<br>    <span class="hljs-built_in">INFO</span>(<span class="hljs-string">&quot;client: ping, 5s callback&quot;</span>);<br>    test-&gt;<span class="hljs-built_in">ping</span>();<br><br>    test-&gt;<span class="hljs-built_in">unregisterCallback</span>(callback);<br>    <span class="hljs-built_in">INFO</span>(<span class="hljs-string">&quot;client: ping again, 5s callback&quot;</span>);<br>    test-&gt;<span class="hljs-built_in">ping</span>();<br>    IPCThreadState::<span class="hljs-built_in">self</span>()-&gt;<span class="hljs-built_in">joinThreadPool</span>();<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="四，-源码"><a href="#四，-源码" class="headerlink" title="四， 源码"></a>四， 源码</h2><p>本章节源码在 <a href="https://github.com/hqw700/binderdemo/releases/tag/v0.4">https://github.com/hqw700/binderdemo/releases/tag/v0.4</a> 下</p><blockquote><p>操作系统：Windows 10 专业版 19042.685<br>编译机：WSL2 Ubuntu-18.04<br>手机：Google Pixel 1<br>源码版本：AOSP android-7.1.1_r35</p></blockquote>]]></content>
    
    
    <categories>
      
      <category>源码分析</category>
      
    </categories>
    
    
    <tags>
      
      <tag>教程</tag>
      
      <tag>Android系统</tag>
      
      <tag>binder</tag>
      
      <tag>github</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【奇技淫巧】使用fixup与autosquash命令改变错误提交</title>
    <link href="/2021/01/23/git_fix_bug/"/>
    <url>/2021/01/23/git_fix_bug/</url>
    
    <content type="html"><![CDATA[<h2 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h2><p>事情是这样的，为了方便读者能找到文章对应的代码，我每个章节提交后都会打一个tag，然后在文章给上这个tag的地址。有次我在提交前将log换成了断言，结果断言写反了，没有验证就提交发布了。后面经过了一些提交才发现这个问题。如果此时我切到这个tag修复并提交，就会导致和文章的链接对应不了， 所以有什么解决办法呢。<br><img src="/img/blog/wrong_commit.png"> </p><p>目前的提交情况：我需要修改tag v0.3中的一个小错误</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs console"><span class="hljs-meta prompt_">$ </span><span class="language-bash">git <span class="hljs-built_in">log</span> --oneline</span><br>aa278c1 (HEAD -&gt; main, origin/main, origin/HEAD) java binder callback<br>9731e60 (tag: v0.3) cpp binder die<br>19bda12 cpp/java dumpsys server<br>77dbf97 cpp/java binder linkToDeath test<br>0ed8e1c update README and makefile<br>8cbed3f (tag: v0.2) cpp binder code optimization<br>de89247 Merge branch &#x27;main&#x27; of https://github.com/hqw700/binderdemo into main<br>8ae91b8 Gen cpp binder file and test<br>86ee113 cpp binder gen<br>acd95a8 Create README.md<br>7e44f1c (tag: v0.1) Gen java binder file and test<br>b4f22b9 Init aidl file<br></code></pre></td></tr></table></figure><h2 id="使用fixup与autosquash命令改变错误提交"><a href="#使用fixup与autosquash命令改变错误提交" class="headerlink" title="使用fixup与autosquash命令改变错误提交"></a>使用fixup与autosquash命令改变错误提交</h2><p>修改这个错误后, 需要 git commit –fixup&#x3D;<code>对应commit_id</code><br>然后 git rebase -i –autosquash <code>对应commit_id的上一个id</code><br>这样就会自动将fixup的commit合并到对应的<br><strong>注意：</strong><br>认真观察会发现，这之后的所有id都变了，tag也不见了，但commit的信息没变，所以这是一条很危险的命令，会改变历史。squash命令本来就是优化commit信息的。</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs console"><span class="hljs-meta prompt_">$ </span><span class="language-bash">git add cpp/main.cpp</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">git commit --fixup=9731e60</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">git <span class="hljs-built_in">log</span> --oneline</span><br>ab4ca46 (HEAD -&gt; main) fixup! cpp binder die<br>aa278c1 (origin/main, origin/HEAD) java binder callback<br>9731e60 (tag: v0.3) cpp binder die<br>19bda12 cpp/java dumpsys server<br>77dbf97 cpp/java binder linkToDeath test<br>0ed8e1c update README and makefile<br>8cbed3f (tag: v0.2) cpp binder code optimization<br>de89247 Merge branch &#x27;main&#x27; of https://github.com/hqw700/binderdemo into main<br>8ae91b8 Gen cpp binder file and test<br>86ee113 cpp binder gen<br>acd95a8 Create README.md<br>7e44f1c (tag: v0.1) Gen java binder file and test<br>b4f22b9 Init aidl file<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">git rebase -i --autosquash 9731e60^</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">git <span class="hljs-built_in">log</span> --oneline</span><br>efe605c (HEAD -&gt; main) java binder callback<br>cd0d752 cpp binder die<br>19bda12 cpp/java dumpsys server<br>77dbf97 cpp/java binder linkToDeath test<br>0ed8e1c update README and makefile<br>8cbed3f (tag: v0.2) cpp binder code optimization<br>de89247 Merge branch &#x27;main&#x27; of https://github.com/hqw700/binderdemo into main<br>8ae91b8 Gen cpp binder file and test<br>86ee113 cpp binder gen<br>acd95a8 Create README.md<br>7e44f1c (tag: v0.1) Gen java binder file and test<br>b4f22b9 Init aidl file<br></code></pre></td></tr></table></figure><h2 id="push到远程"><a href="#push到远程" class="headerlink" title="push到远程"></a>push到远程</h2><p>因为commit id都变了，push到远程也会提示先pull。pull之后会发现有冲突。</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs console"><span class="hljs-meta prompt_">$ </span><span class="language-bash">git push origin main</span><br>To https://github.com/hqw700/binderdemo<br> ! [rejected]        main -&gt; main (non-fast-forward)<br>error: failed to push some refs to &#x27;https://github.com/hqw700/binderdemo&#x27;<br>hint: Updates were rejected because the tip of your current branch is behind<br>hint: its remote counterpart. Integrate the remote changes (e.g.<br>hint: &#x27;git pull ...&#x27;) before pushing again.<br>hint: See the &#x27;Note about fast-forwards&#x27; in &#x27;git push --help&#x27; for details.<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">git pull</span><br>Auto-merging cpp/main.cpp<br>CONFLICT (content): Merge conflict in cpp/main.cpp<br>Automatic merge failed; fix conflicts and then commit the result.<br></code></pre></td></tr></table></figure><p>所以需要加上-f选项才可以push成功。<code>git push -f origin main</code></p><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><p><a href="http://lazybios.com/2017/01/git-tip-keep-your-branch-clean-with-fixup-and-autosquash/">如何借助fixup与autosquash让Git分支保持整洁</a></p>]]></content>
    
    
    <categories>
      
      <category>工具使用</category>
      
    </categories>
    
    
    <tags>
      
      <tag>教程</tag>
      
      <tag>github</tag>
      
      <tag>奇技淫巧</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【一起来学binder】cpp/java端的死亡讣告与dump的简单示例</title>
    <link href="/2021/01/21/binder_die/"/>
    <url>/2021/01/21/binder_die/</url>
    
    <content type="html"><![CDATA[<blockquote><p>操作系统：Windows 10 专业版 19042.685<br>编译机：WSL2 Ubuntu-18.04<br>手机：Google Pixel 1<br>源码版本：AOSP android-7.1.1_r35</p></blockquote><p>死亡回调是当服务端进程(Bn端)死亡时，通过回调通知到客户端进程(Bp端)。重写IBinder.DeathRecipient的binderDied函数获取回调。<br>Dump是binder服务端默认功能，当终端调用<code>dumpsys BINDER_NAME</code>时，输出信息，只需要重写dump接口即可。<br>所以，死亡回调是在客户端操作，dump是在服务端操作。</p><h2 id="java端注册死亡回调"><a href="#java端注册死亡回调" class="headerlink" title="java端注册死亡回调"></a>java端注册死亡回调</h2><p>binderdemo&#x2F;java&#x2F;src&#x2F;demo&#x2F;Main.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs java">testClient.asBinder().linkToDeath(<span class="hljs-keyword">new</span> <span class="hljs-title class_">IBinder</span>.DeathRecipient() &#123;<br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">binderDied</span><span class="hljs-params">()</span> &#123;<br>        Log.d(<span class="hljs-string">&quot;binder&quot;</span>, <span class="hljs-string">&quot;binderDied calling~!&quot;</span>);<br>        System.out.println(<span class="hljs-string">&quot;binderDied calling&quot;</span>);<br>        System.exit(<span class="hljs-number">0</span>);<br>    &#125;<br>&#125;, <span class="hljs-number">0</span>);<br><span class="hljs-keyword">for</span> (;;);<br></code></pre></td></tr></table></figure><p>因为示例客户端跑完就退出了，所以最后需要加个死循环等待回调。</p><h2 id="cpp端的死亡回调"><a href="#cpp端的死亡回调" class="headerlink" title="cpp端的死亡回调"></a>cpp端的死亡回调</h2><p>cpp端的回调像java那样的写法是不能工作的，因为死亡回调需要工作在binder线程池内，具体原因后面分析代码时再讲。  </p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-keyword">class</span> <span class="hljs-title class_">TestDeathRecipient</span> : <span class="hljs-keyword">public</span> IBinder::DeathRecipient<br>&#123;<br>    <span class="hljs-keyword">private</span>:<br>        <span class="hljs-function"><span class="hljs-keyword">virtual</span> <span class="hljs-type">void</span> <span class="hljs-title">binderDied</span><span class="hljs-params">(<span class="hljs-type">const</span> wp&lt;IBinder&gt;&amp; who)</span> </span>&#123;<br>            <span class="hljs-built_in">INFO</span>(<span class="hljs-string">&quot;client: binderDied&quot;</span>);<br>            <span class="hljs-built_in">exit</span>(EXIT_FAILURE);<br>        &#125;;<br>&#125;;<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-type">int</span> argc, <span class="hljs-type">char</span> **argv)</span> </span>&#123;<br>    <span class="hljs-function">sp&lt;ProcessState&gt; <span class="hljs-title">proc</span><span class="hljs-params">(ProcessState::self())</span></span>;<br>    ProcessState::<span class="hljs-built_in">self</span>()-&gt;<span class="hljs-built_in">startThreadPool</span>();<br>    sp&lt;IServiceManager&gt; sm = <span class="hljs-built_in">defaultServiceManager</span>();<br>    sp&lt;IBinder&gt; binder = sm-&gt;<span class="hljs-built_in">getService</span>(<span class="hljs-built_in">String16</span>(BINDER_NAME));<br>    sp&lt;TestDeathRecipient&gt; death = <span class="hljs-keyword">new</span> <span class="hljs-built_in">TestDeathRecipient</span>();<br>    <span class="hljs-type">int</span> link = binder-&gt;<span class="hljs-built_in">linkToDeath</span>(death);<br>    IPCThreadState::<span class="hljs-built_in">self</span>()-&gt;<span class="hljs-built_in">joinThreadPool</span>();<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="java端dump"><a href="#java端dump" class="headerlink" title="java端dump"></a>java端dump</h2><p>binderdemo\java\src\demo\TestServer.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Override</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">dump</span><span class="hljs-params">(FileDescriptor fd, PrintWriter writer, String[] args)</span> &#123;<br>    <span class="hljs-keyword">final</span> <span class="hljs-type">IndentingPrintWriter</span> <span class="hljs-variable">pw</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">IndentingPrintWriter</span>(writer, <span class="hljs-string">&quot;  &quot;</span>);<br>    pw.println(<span class="hljs-string">&quot;test_server dump:&quot;</span>);<br>    pw.increaseIndent();<br>    pw.println(<span class="hljs-string">&quot;this is Java implementation&quot;</span>);<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="cpp端dump"><a href="#cpp端dump" class="headerlink" title="cpp端dump"></a>cpp端dump</h2><p>binderdemo&#x2F;cpp&#x2F;main.cpp#Test::dump</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-function"><span class="hljs-type">status_t</span> <span class="hljs-title">dump</span><span class="hljs-params">(<span class="hljs-type">int</span> fd, <span class="hljs-type">const</span> Vector&lt;String16&gt; &amp;args)</span> <span class="hljs-keyword">override</span> </span>&#123;<br>    String8 result;<br>    result.<span class="hljs-built_in">append</span>(<span class="hljs-string">&quot;test_server dump:\n&quot;</span>);<br>    result.<span class="hljs-built_in">append</span>(<span class="hljs-string">&quot;this is cpp implementation\n&quot;</span>);<br>    <span class="hljs-built_in">write</span>(fd, result.<span class="hljs-built_in">string</span>(), result.<span class="hljs-built_in">size</span>());<br>    <span class="hljs-keyword">return</span> NO_ERROR;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="测试与源码"><a href="#测试与源码" class="headerlink" title="测试与源码"></a>测试与源码</h2><p>这个两项测试比较简单，kill掉binder服务端，客户端的binderDied就会获得回调。<br><code>dumpsys test_server</code>就会在终端输出dump的打印。<br>这章主要讲用法，后续再详解死亡讣告原理<br>本章节的代码在tag v0.3下：<br><a href="https://github.com/hqw700/binderdemo/releases/tag/v0.3">https://github.com/hqw700/binderdemo/releases/tag/v0.3</a></p>]]></content>
    
    
    <categories>
      
      <category>源码分析</category>
      
    </categories>
    
    
    <tags>
      
      <tag>教程</tag>
      
      <tag>Android系统</tag>
      
      <tag>binder</tag>
      
      <tag>github</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【一起来学binder】cpp端代码生成</title>
    <link href="/2021/01/09/cpp-binder-gen/"/>
    <url>/2021/01/09/cpp-binder-gen/</url>
    
    <content type="html"><![CDATA[<blockquote><p>操作系统：Windows 10 专业版 19042.685<br>编译机：WSL2 Ubuntu-18.04<br>手机：Google Pixel 1<br>源码版本：AOSP android-7.1.1_r35</p></blockquote><h2 id="1，创建aidl文件"><a href="#1，创建aidl文件" class="headerlink" title="1，创建aidl文件"></a>1，创建aidl文件</h2><p>ITest.aidl</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> demo;<br><br><span class="hljs-keyword">interface</span> <span class="hljs-title class_">ITest</span><br>&#123;<br>    <span class="hljs-keyword">void</span> <span class="hljs-title function_">ping</span><span class="hljs-params">()</span>;<br>    <span class="hljs-type">int</span> <span class="hljs-title function_">sum</span><span class="hljs-params">(<span class="hljs-type">int</span> x, <span class="hljs-type">int</span> y)</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="2，用aidl-cpp工具生成cpp端接口实现"><a href="#2，用aidl-cpp工具生成cpp端接口实现" class="headerlink" title="2，用aidl-cpp工具生成cpp端接口实现"></a>2，用aidl-cpp工具生成cpp端接口实现</h2><p>在aosp源码下载操作，详细生成结果见Github: <a href="https://github.com/hqw700/binderdemo/releases/tag/v0.2">https://github.com/hqw700/binderdemo/releases/tag/v0.2</a> </p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs console"><span class="hljs-meta prompt_">$ </span><span class="language-bash"><span class="hljs-built_in">mkdir</span> -p frameworks/native/cmds/binderdemo/cpp/include</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">out/host/linux-x86/bin/aidl-cpp frameworks/native/cmds/binderdemo/ITest.aidl frameworks/native/cmds/binderdemo/cpp/include/ frameworks/native/cmds/binderdemo/cpp/ITest.cpp</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">tree frameworks/native/cmds/binderdemo/cpp</span><br>frameworks/native/cmds/binderdemo/cpp<br>├── ITest.cpp<br>└── include<br>    └── demo<br>        ├── BnTest.h<br>        ├── BpTest.h<br>        └── ITest.h<br></code></pre></td></tr></table></figure><h2 id="3，binder服务端代码"><a href="#3，binder服务端代码" class="headerlink" title="3，binder服务端代码"></a>3，binder服务端代码</h2><p>和测试代码main.cpp在同一文件下</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Test</span> : <span class="hljs-keyword">public</span> demo::BnTest &#123;<br><span class="hljs-keyword">public</span>:<br>    <span class="hljs-function">binder::Status <span class="hljs-title">ping</span><span class="hljs-params">()</span> <span class="hljs-keyword">override</span> </span>&#123;<br>        <span class="hljs-built_in">INFO</span>(<span class="hljs-string">&quot;ping receive ok&quot;</span>);<br>        <span class="hljs-keyword">return</span> binder::<span class="hljs-built_in">Status</span>();<br>    &#125;<br><br>    <span class="hljs-function">binder::Status <span class="hljs-title">sum</span><span class="hljs-params">(<span class="hljs-type">int32_t</span> v1, <span class="hljs-type">int32_t</span> v2, <span class="hljs-type">int32_t</span> *_aidl_return)</span> <span class="hljs-keyword">override</span> </span>&#123;<br>        <span class="hljs-built_in">INFO</span>(<span class="hljs-string">&quot;sum: %d + %d&quot;</span>, v1, v2);<br>        *_aidl_return = v1 + v2;<br>        <span class="hljs-keyword">return</span> binder::<span class="hljs-built_in">Status</span>();<br>    &#125;<br>&#125;;<br></code></pre></td></tr></table></figure><h2 id="4，测试类main-cpp"><a href="#4，测试类main-cpp" class="headerlink" title="4，测试类main.cpp"></a>4，测试类main.cpp</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">define</span> LOG_TAG <span class="hljs-string">&quot;cpp_binder&quot;</span></span><br><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdlib.h&gt;</span></span><br><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;utils/RefBase.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;utils/Log.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;binder/TextOutput.h&gt;</span></span><br><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;binder/IInterface.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;binder/IBinder.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;binder/ProcessState.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;binder/IServiceManager.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;binder/IPCThreadState.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;demo/ITest.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;demo/BnTest.h&gt;</span></span><br><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> BINDER_NAME <span class="hljs-string">&quot;test_server&quot;</span></span><br><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> android;<br><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> INFO(...) \</span><br><span class="hljs-meta">    do &#123; \</span><br><span class="hljs-meta">        printf(__VA_ARGS__); \</span><br><span class="hljs-meta">        printf(<span class="hljs-string">&quot;\n&quot;</span>); \</span><br><span class="hljs-meta">        ALOGD(__VA_ARGS__); \</span><br><span class="hljs-meta">    &#125; while(0)</span><br><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">assert_fail</span><span class="hljs-params">(<span class="hljs-type">const</span> <span class="hljs-type">char</span> *file, <span class="hljs-type">int</span> line, <span class="hljs-type">const</span> <span class="hljs-type">char</span> *func, <span class="hljs-type">const</span> <span class="hljs-type">char</span> *expr)</span> </span>&#123;<br>    <span class="hljs-built_in">INFO</span>(<span class="hljs-string">&quot;assertion failed at file %s, line %d, function %s:&quot;</span>,<br>         file, line, func);<br>    <span class="hljs-built_in">INFO</span>(<span class="hljs-string">&quot;%s&quot;</span>, expr);<br>    <span class="hljs-built_in">abort</span>();<br>&#125;<br><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> ASSERT(e) \</span><br><span class="hljs-meta">    do &#123; \</span><br><span class="hljs-meta">        <span class="hljs-keyword">if</span> (!(e)) \</span><br><span class="hljs-meta">            assert_fail(__FILE__, __LINE__, __func__, #e); \</span><br><span class="hljs-meta">    &#125; while(0)</span><br><br><span class="hljs-comment">// ################# For binder server start #####################</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Test</span> : <span class="hljs-keyword">public</span> demo::BnTest &#123;<br><span class="hljs-keyword">public</span>:<br>    <span class="hljs-function">binder::Status <span class="hljs-title">ping</span><span class="hljs-params">()</span> <span class="hljs-keyword">override</span> </span>&#123;<br>        <span class="hljs-built_in">INFO</span>(<span class="hljs-string">&quot;server: ping receive ok&quot;</span>);<br>        <span class="hljs-keyword">return</span> binder::<span class="hljs-built_in">Status</span>();<br>    &#125;<br><br>    <span class="hljs-function">binder::Status <span class="hljs-title">sum</span><span class="hljs-params">(<span class="hljs-type">int32_t</span> v1, <span class="hljs-type">int32_t</span> v2, <span class="hljs-type">int32_t</span> *_aidl_return)</span> <span class="hljs-keyword">override</span> </span>&#123;<br>        <span class="hljs-built_in">INFO</span>(<span class="hljs-string">&quot;server: sum: %d + %d&quot;</span>, v1, v2);<br>        *_aidl_return = v1 + v2;<br>        <span class="hljs-keyword">return</span> binder::<span class="hljs-built_in">Status</span>();<br>    &#125;<br>&#125;;<br><span class="hljs-comment">// ################# For binder server end #####################</span><br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-type">int</span> argc, <span class="hljs-type">char</span> **argv)</span> </span>&#123;<br>    <span class="hljs-keyword">if</span> (argc == <span class="hljs-number">1</span>) &#123;<br>        <span class="hljs-built_in">defaultServiceManager</span>()-&gt;<span class="hljs-built_in">addService</span>(<span class="hljs-built_in">String16</span>(BINDER_NAME), <span class="hljs-keyword">new</span> <span class="hljs-built_in">Test</span>());<br>        ProcessState::<span class="hljs-built_in">self</span>()-&gt;<span class="hljs-built_in">startThreadPool</span>();<br>        <span class="hljs-built_in">INFO</span>(<span class="hljs-string">&quot;server: This is TestServer&quot;</span>);<br>        IPCThreadState::<span class="hljs-built_in">self</span>()-&gt;<span class="hljs-built_in">joinThreadPool</span>();<br>    &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (argc == <span class="hljs-number">3</span>) &#123;<br>        <span class="hljs-built_in">INFO</span>(<span class="hljs-string">&quot;client: We&#x27;re the client&quot;</span>);<br>        sp&lt;IServiceManager&gt; sm = <span class="hljs-built_in">defaultServiceManager</span>();<br>        <span class="hljs-built_in">ASSERT</span>(sm != <span class="hljs-number">0</span>);<br>        sp&lt;IBinder&gt; binder = sm-&gt;<span class="hljs-built_in">getService</span>(<span class="hljs-built_in">String16</span>(BINDER_NAME));<br>        <span class="hljs-built_in">ASSERT</span>(binder != <span class="hljs-number">0</span>);<br>        sp&lt;demo::ITest&gt; test = <span class="hljs-built_in">interface_cast</span>&lt;demo::ITest&gt;(binder);<br>        <span class="hljs-built_in">ASSERT</span>(test != <span class="hljs-number">0</span>);<br>        <span class="hljs-built_in">INFO</span>(<span class="hljs-string">&quot;client: ping&quot;</span>);<br>        test-&gt;<span class="hljs-built_in">ping</span>();<br>        <span class="hljs-type">int</span> ret = <span class="hljs-number">0</span>;<br>        test-&gt;<span class="hljs-built_in">sum</span>(<span class="hljs-built_in">atoi</span>(argv[<span class="hljs-number">1</span>]), <span class="hljs-built_in">atoi</span>(argv[<span class="hljs-number">2</span>]), &amp;ret);<br>        <span class="hljs-built_in">INFO</span>(<span class="hljs-string">&quot;client: We&#x27;re the client: test-&gt;sum return: %d&quot;</span>, ret);<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="5，Android-mk-与-CMakeLists-txt-文件"><a href="#5，Android-mk-与-CMakeLists-txt-文件" class="headerlink" title="5，Android.mk 与 CMakeLists.txt 文件"></a>5，Android.mk 与 CMakeLists.txt 文件</h2><p>Android.mk 用于系统编译，CMakeLists.txt 文件用于clion索引，顺便用clion将每个文件重新format了。</p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs makefile">LOCAL_PATH:= <span class="hljs-variable">$(<span class="hljs-built_in">call</span> my-<span class="hljs-built_in">dir</span>)</span><br><span class="hljs-keyword">include</span> <span class="hljs-variable">$(CLEAR_VARS)</span><br><br>LOCAL_SRC_FILES:= \<br>    main.cpp \<br>    ITest.cpp<br><br>LOCAL_C_INCLUDES := <span class="hljs-variable">$(LOCAL_PATH)</span>/<span class="hljs-keyword">include</span><br><br>LOCAL_CFLAGS += -Wall<br><br>LOCAL_SHARED_LIBRARIES := \<br>    libcutils \<br>    liblog \<br>    libandroidfw \<br>    libutils \<br>    libbinder<br><br>LOCAL_MODULE:= cpp_binder_test<br><br><span class="hljs-keyword">include</span> <span class="hljs-variable">$(BUILD_EXECUTABLE)</span><br></code></pre></td></tr></table></figure><h2 id="6，编译并push进系统"><a href="#6，编译并push进系统" class="headerlink" title="6，编译并push进系统"></a>6，编译并push进系统</h2><p>编译</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs console"><span class="hljs-meta prompt_">$ </span><span class="language-bash">mmm frameworks/native/cmds/binderdemo/cpp/</span><br><span class="hljs-meta prompt_">[100% </span><span class="language-bash">7/7] Install: out/target/product/sailfish/system/bin/cpp_binder_test</span><br>make: Leaving directory &#x27;/home/huangqw/code/aosp&#x27;<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">### make completed successfully (1 seconds) ####</span></span><br></code></pre></td></tr></table></figure><p>push</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs console"><span class="hljs-meta prompt_">$ </span><span class="language-bash">adb root &amp;&amp; adb remount</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">adb push cpp_binder_test  /system/bin/</span><br></code></pre></td></tr></table></figure><h2 id="7，测试"><a href="#7，测试" class="headerlink" title="7，测试"></a>7，测试</h2><p>启动服务端</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs console"><span class="hljs-meta prompt_">$ </span><span class="language-bash">adb shell</span><br>sailfish:/ # cpp_binder_test<br>server: This is TestServer<br><br></code></pre></td></tr></table></figure><p>查看Binder服务：<br>第一个就是了</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs console"><span class="hljs-meta prompt_">$ </span><span class="language-bash">adb shell service list | grep test_</span><br>0       test_server: [demo.ITest]<br></code></pre></td></tr></table></figure><p>客户端测试：</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs console"><span class="hljs-meta prompt_">$ </span><span class="language-bash">adb shell</span><br>sailfish:/ # cpp_binder_test 1 2<br>client: We&#x27;re the client<br>client: ping<br>client: We&#x27;re the client: test-&gt;sum return: 3<br></code></pre></td></tr></table></figure><p>和上一章java端的应用和可以通信</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs console">sailfish:/ # java_binder_test 2 3<br>5<br></code></pre></td></tr></table></figure><p>log</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs log">1973-02-06 15:13:29.710 2648-2648/? D/cpp_binder: server: This is TestServer<br>1973-02-06 15:13:33.266 2651-2651/? D/cpp_binder: client: We&#x27;re the client<br>1973-02-06 15:13:33.270 2651-2651/? D/cpp_binder: client: ping<br>1973-02-06 15:13:33.270 2648-2649/? D/cpp_binder: server: ping receive ok<br>1973-02-06 15:13:33.271 2648-2648/? D/cpp_binder: server: sum: 1 + 2<br>1973-02-06 15:13:33.272 2651-2651/? D/cpp_binder: client: We&#x27;re the client: test-&gt;sum return: 3<br><br>1973-02-06 15:38:07.240 2783-2783/? D/JAVA_BINDER.Client: This is TestClient<br>1973-02-06 15:38:07.242 2783-2783/? D/JAVA_BINDER.Client: ping<br>1973-02-06 15:38:07.243 2648-2650/? D/cpp_binder: server: ping receive ok<br>1973-02-06 15:38:07.243 2783-2783/? D/JAVA_BINDER.Client: sum (2,3)<br>1973-02-06 15:38:07.243 2648-2649/? D/cpp_binder: server: sum: 2 + 3<br>1973-02-06 15:38:07.244 2783-2783/? D/JAVA_BINDER.Client: sum (2,3) return 5<br></code></pre></td></tr></table></figure><h2 id="8，源码"><a href="#8，源码" class="headerlink" title="8，源码"></a>8，源码</h2><p>这个binder系列会持续更新，逐渐完善更多的用法，本章节的代码在tag v0.2下：<br><a href="https://github.com/hqw700/binderdemo/releases/tag/v0.2">https://github.com/hqw700/binderdemo/releases/tag/v0.2</a></p>]]></content>
    
    
    <categories>
      
      <category>源码分析</category>
      
    </categories>
    
    
    <tags>
      
      <tag>教程</tag>
      
      <tag>Android系统</tag>
      
      <tag>binder</tag>
      
      <tag>github</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【一起来学binder】java端代码生成</title>
    <link href="/2021/01/05/java-binder-gen/"/>
    <url>/2021/01/05/java-binder-gen/</url>
    
    <content type="html"><![CDATA[<blockquote><p>操作系统：Windows 10 专业版 19042.685<br>编译机：WSL2 Ubuntu-18.04<br>手机：Google Pixel 1<br>源码版本：AOSP android-7.1.1_r35</p></blockquote><h2 id="1，创建aidl文件"><a href="#1，创建aidl文件" class="headerlink" title="1，创建aidl文件"></a>1，创建aidl文件</h2><p>ITest.aidl</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> demo;<br><br><span class="hljs-keyword">interface</span> <span class="hljs-title class_">ITest</span><br>&#123;<br>    <span class="hljs-keyword">void</span> <span class="hljs-title function_">ping</span><span class="hljs-params">()</span>;<br>    <span class="hljs-type">int</span> <span class="hljs-title function_">sum</span><span class="hljs-params">(<span class="hljs-type">int</span> x, <span class="hljs-type">int</span> y)</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="2，用aidl工具生成java端接口实现"><a href="#2，用aidl工具生成java端接口实现" class="headerlink" title="2，用aidl工具生成java端接口实现"></a>2，用aidl工具生成java端接口实现</h2><p>在aosp源码下载操作，然后第一步就生成错误了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs log">~/code/aosp$ out/host/linux-x86/bin/aidl -oframeworks/native/cmds/bindergen/java/src/ frameworks/native/cmds/bindergen/ITest.aidl<br>frameworks/native/cmds/bindergen/ITest.aidl:3 interface ITest should be declared in a file called demo/ITest.aidl.<br>aidl E  1991  1991 aidl.cpp:545] Invalid package declaration &#x27;demo&#x27;<br></code></pre></td></tr></table></figure><p>原来是要在包含包名”demo”的文件夹下生成，只能将原定的文件夹名bindergen改为binderdemo。aidl工具应该是要在完整包路径下执行的，但为了目录结构好看，我放在了根目录。继续执行：</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs console">out/host/linux-x86/bin/aidl -oframeworks/native/cmds/binderdemo/java/src/ frameworks/native/cmds/binderdemo/ITest.aidl<br></code></pre></td></tr></table></figure><p>无输出，不过可以看到src目录下多了demo&#x2F;ITest.java文件</p><h2 id="3，编写binder服务端代码"><a href="#3，编写binder服务端代码" class="headerlink" title="3，编写binder服务端代码"></a>3，编写binder服务端代码</h2><p>java&#x2F;src&#x2F;demo&#x2F;TestServer.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> demo;<br><br><span class="hljs-keyword">import</span> android.os.RemoteException;<br><span class="hljs-keyword">import</span> android.util.Log;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">TestServer</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">ITest</span>.Stub &#123;<br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">String</span> <span class="hljs-variable">TAG</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;JAVA_BINDER.Server&quot;</span>;<br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">ping</span><span class="hljs-params">()</span> <span class="hljs-keyword">throws</span> RemoteException &#123;<br>        Log.d(TAG, <span class="hljs-string">&quot;ping receive ok&quot;</span>);<br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-type">int</span> <span class="hljs-title function_">sum</span><span class="hljs-params">(<span class="hljs-type">int</span> x, <span class="hljs-type">int</span> y)</span> <span class="hljs-keyword">throws</span> RemoteException &#123;<br>        Log.d(TAG, <span class="hljs-string">&quot;sum &quot;</span> + x + <span class="hljs-string">&quot; + &quot;</span> + y);<br>        <span class="hljs-keyword">return</span> x + y;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="4，编写测试类Main-java"><a href="#4，编写测试类Main-java" class="headerlink" title="4，编写测试类Main.java"></a>4，编写测试类Main.java</h2><p>将binder客户端和服务端合在一起，带参数执行为客户端，不带参数执行为服务端。<br>java&#x2F;src&#x2F;demo&#x2F;Main.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> demo;<br><br><span class="hljs-keyword">import</span> android.os.RemoteException;<br><span class="hljs-keyword">import</span> android.os.ServiceManager;<br><span class="hljs-keyword">import</span> android.util.Log;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Main</span> &#123;<br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">String</span> <span class="hljs-variable">TAG_S</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;JAVA_BINDER.Server&quot;</span>;<br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">String</span> <span class="hljs-variable">TAG_C</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;JAVA_BINDER.Client&quot;</span>;<br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">String</span> <span class="hljs-variable">BINDER_NAME</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;test_server&quot;</span>;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>        <span class="hljs-type">int</span> <span class="hljs-variable">len</span> <span class="hljs-operator">=</span> args.length;<br>        <span class="hljs-keyword">if</span> (len == <span class="hljs-number">0</span>) &#123;<br>            Log.d(TAG_S, <span class="hljs-string">&quot;This is TestServer&quot;</span>);<br>            <span class="hljs-type">TestServer</span> <span class="hljs-variable">testServer</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">TestServer</span>();<br>            ServiceManager.addService(BINDER_NAME, testServer);<br>            <span class="hljs-keyword">for</span> (;;);<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            Log.d(TAG_C, <span class="hljs-string">&quot;This is TestClient&quot;</span>);<br>            <span class="hljs-type">ITest</span> <span class="hljs-variable">testClient</span> <span class="hljs-operator">=</span> ITest.Stub.asInterface(ServiceManager.getService(BINDER_NAME));<br>            <span class="hljs-keyword">if</span> (testClient == <span class="hljs-literal">null</span>) &#123;<br>                System.err.println(<span class="hljs-string">&quot;TestServer is null&quot;</span>);<br>                System.exit(-<span class="hljs-number">1</span>);<br>            &#125;<br>            <span class="hljs-keyword">try</span> &#123;<br>                Log.d(TAG_C, <span class="hljs-string">&quot;ping&quot;</span>);<br>                testClient.ping();<br><br>                <span class="hljs-type">int</span> <span class="hljs-variable">v1</span> <span class="hljs-operator">=</span> Integer.parseInt(args[<span class="hljs-number">0</span>]);<br>                <span class="hljs-type">int</span> <span class="hljs-variable">v2</span> <span class="hljs-operator">=</span> Integer.parseInt(args[<span class="hljs-number">1</span>]);<br>                Log.d(TAG_C, String.format(<span class="hljs-string">&quot;sum (%d,%d)&quot;</span>, v1, v2));<br>                <span class="hljs-type">int</span> <span class="hljs-variable">ret</span> <span class="hljs-operator">=</span> testClient.sum(v1, v2);<br>                Log.d(TAG_C, String.format(<span class="hljs-string">&quot;sum (%d,%d) return %d&quot;</span>, v1, v2, ret));<br>                System.out.println(ret);<br>            &#125; <span class="hljs-keyword">catch</span> (RemoteException e) &#123;<br>                e.printStackTrace();<br>            &#125;<br>            System.exit(<span class="hljs-number">0</span>);<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="5，编写可以执行文件java-binder-test和Android-mk"><a href="#5，编写可以执行文件java-binder-test和Android-mk" class="headerlink" title="5，编写可以执行文件java_binder_test和Android.mk"></a>5，编写可以执行文件java_binder_test和Android.mk</h2><p>java&#x2F;java_binder_test</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">shell.</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">-agentlib:jdwp=transport=dt_socket,<span class="hljs-built_in">suspend</span>=y,server=y,address=5005</span><br>base=/system<br>export CLASSPATH=$base/framework/java_binder_test.jar<br>exec app_process $base/bin demo.Main &quot;$@&quot;<br></code></pre></td></tr></table></figure><p>java&#x2F;Android.mk</p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs Makefile">LOCAL_PATH:= <span class="hljs-variable">$(<span class="hljs-built_in">call</span> my-<span class="hljs-built_in">dir</span>)</span><br><br><span class="hljs-keyword">include</span> <span class="hljs-variable">$(CLEAR_VARS)</span><br>LOCAL_SRC_FILES := <span class="hljs-variable">$(<span class="hljs-built_in">call</span> all-subdir-java-files)</span><br>LOCAL_MODULE := java_binder_test<br><span class="hljs-keyword">include</span> <span class="hljs-variable">$(BUILD_JAVA_LIBRARY)</span><br><br><span class="hljs-keyword">include</span> <span class="hljs-variable">$(CLEAR_VARS)</span><br>LOCAL_MODULE := java_binder_test<br>LOCAL_SRC_FILES := java_binder_test<br>LOCAL_MODULE_CLASS := EXECUTABLES<br>LOCAL_MODULE_TAGS := optional<br><span class="hljs-keyword">include</span> <span class="hljs-variable">$(BUILD_PREBUILT)</span><br></code></pre></td></tr></table></figure><h2 id="6，编译"><a href="#6，编译" class="headerlink" title="6，编译"></a>6，编译</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs log">$ cd binderdemo/java<br>$ mm | tee<br>[ 12% 1/8] target Prebuilt: java_binder_test (out/target/product/sailfish/obj/EXECUTABLES/java_binder_test_intermediates/java_binder_test)<br>[ 25% 2/8] Install: out/target/product/sailfish/system/bin/java_binder_test<br>[ 37% 3/8] Ensure Jack server is installed and started<br>Jack server already installed in &quot;/home/huangqw/.jack-server&quot;<br>Launching Jack server java -XX:MaxJavaStackTraceDepth=-1 -Djava.io.tmpdir=/tmp -Dfile.encoding=UTF-8 -XX:+TieredCompilation -cp /home/huangqw/.jack-server/launcher.jar com.android.jack.launcher.ServerLauncher<br>[ 50% 4/8] Building with Jack: out/target/common/obj/JAVA_LIBRARIES/java_binder_test_intermediates/with-local/classes.dex<br>[ 62% 5/8] Copying: out/target/common/obj/JAVA_LIBRARIES/java_binder_test_intermediates/classes.dex<br>[ 75% 6/8] target Jar: java_binder_test (out/target/common/obj/JAVA_LIBRARIES/java_binder_test_intermediates/javalib.jar)<br>[ 87% 7/8] build out/target/product/sailfish/obj/JAVA_LIBRARIES/java_binder_test_intermediates/javalib.jar<br>[100% 8/8] Install: out/target/product/sailfish/system/framework/java_binder_test.jar<br></code></pre></td></tr></table></figure><p>生成 &#x2F;system&#x2F;bin&#x2F;java_binder_test 和 &#x2F;system&#x2F;framework&#x2F;java_binder_test.jar</p><h2 id="7，push进系统"><a href="#7，push进系统" class="headerlink" title="7，push进系统"></a>7，push进系统</h2><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs console"><span class="hljs-meta prompt_">$ </span><span class="language-bash">adb root &amp;&amp; adb remount</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">adb push /system/framework/java_binder_test.jar /system/framework/java_binder_test.jar</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">adb push /system/bin/java_binder_test /system/bin/java_binder_test</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">adb reboot</span><br></code></pre></td></tr></table></figure><h2 id="8，测试"><a href="#8，测试" class="headerlink" title="8，测试"></a>8，测试</h2><p>启动服务端</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs console"><span class="hljs-meta prompt_">$ </span><span class="language-bash">adb root</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">adb shell java_binder_test</span><br><br></code></pre></td></tr></table></figure><p>查看Binder服务：</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs console"><span class="hljs-meta prompt_">$ </span><span class="language-bash">adb shell service list | grep test_</span><br>0       test_server: [demo.ITest]<br></code></pre></td></tr></table></figure><p>客户端测试：</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs console"><span class="hljs-meta prompt_">$ </span><span class="language-bash">adb shell java_binder_test 1 2</span><br>3<br></code></pre></td></tr></table></figure><p>log</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs log">1973-02-02 03:03:23.423 2639-2639/? D/JAVA_BINDER.Server: This is TestServer<br>1973-02-02 03:04:37.269 2652-2652/? D/JAVA_BINDER.Client: This is TestClient<br>1973-02-02 03:04:37.270 2652-2652/? D/JAVA_BINDER.Client: ping<br>1973-02-02 03:04:37.270 2639-2647/? D/JAVA_BINDER.Server: ping receive ok<br>1973-02-02 03:04:37.271 2652-2652/? D/JAVA_BINDER.Client: sum (1,2)<br>1973-02-02 03:04:37.271 2639-2648/? D/JAVA_BINDER.Server: sum 1 + 2<br>1973-02-02 03:04:37.271 2652-2652/? D/JAVA_BINDER.Client: sum (1,2) return 3<br></code></pre></td></tr></table></figure><h2 id="9，源码"><a href="#9，源码" class="headerlink" title="9，源码"></a>9，源码</h2><p>这个binder系列会持续更新，逐渐完善更多的用法，本章节的代码在tag v0.1下：<br><a href="https://github.com/hqw700/binderdemo/releases/tag/v0.1">https://github.com/hqw700/binderdemo/releases/tag/v0.1</a></p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm"><span class="hljs-keyword">binderdemo</span><br><span class="hljs-keyword"></span>├── ITest.aidl<br>└── <span class="hljs-keyword">java</span><br><span class="hljs-keyword"></span>    ├── <span class="hljs-keyword">Android.mk</span><br><span class="hljs-keyword"></span>    ├── <span class="hljs-keyword">java_binder_test</span><br><span class="hljs-keyword"></span>    └── src<br>        └── demo<br>            ├── ITest.<span class="hljs-keyword">java</span><br><span class="hljs-keyword"></span>            ├── Main.<span class="hljs-keyword">java</span><br><span class="hljs-keyword"></span>            └── TestServer.<span class="hljs-keyword">java</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>源码分析</category>
      
    </categories>
    
    
    <tags>
      
      <tag>教程</tag>
      
      <tag>Android系统</tag>
      
      <tag>binder</tag>
      
      <tag>github</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Pixel 3上Linux内核源码的下载，编译与烧录</title>
    <link href="/2021/01/02/aosp-kernel-build/"/>
    <url>/2021/01/02/aosp-kernel-build/</url>
    
    <content type="html"><![CDATA[<p>官方教程地址<a href="https://source.android.com/setup/build/building-kernels">https://source.android.com/setup/build/building-kernels</a>, 已经写的很详细了, 由于翻译不及时，不同语言页面下显示的分支不一致，都可以使用。</p><h2 id="一，源码下载"><a href="#一，源码下载" class="headerlink" title="一，源码下载"></a>一，源码下载</h2><h3 id="1-1-AOSP源码下载"><a href="#1-1-AOSP源码下载" class="headerlink" title="1.1 AOSP源码下载"></a>1.1 AOSP源码下载</h3><p>依旧是将Google的地址<code>android.googlesource.com</code>替换清华的地址<code>aosp.tuna.tsinghua.edu.cn</code><br>加 <code>--depth 1</code> 控制git深度可以极大节省硬盘空间。最终.repo目录21G左右<br>注：kernel分支不需要和aosp分支对应。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">export</span> REPO_URL=<span class="hljs-string">&#x27;https://mirrors.tuna.tsinghua.edu.cn/git/git-repo&#x27;</span><br>repo init --depth 1 -u https://aosp.tuna.tsinghua.edu.cn/kernel/manifest -b android-msm-crosshatch-4.9-android11<br>repo <span class="hljs-built_in">sync</span> -j20<br></code></pre></td></tr></table></figure><h2 id="二，编译"><a href="#二，编译" class="headerlink" title="二，编译"></a>二，编译</h2><h3 id="2-1-编译kernel"><a href="#2-1-编译kernel" class="headerlink" title="2.1 编译kernel"></a>2.1 编译kernel</h3><p>执行build&#x2F;build.sh即可</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs bash">~/code/kernel$ ./build/build.sh<br>========================================================<br> Copying modules files<br>  lib/modules/4.9.210-gdee0d123_audio-gee051ba/extra/wlan.ko<br>  lib/modules/4.9.210-gdee0d123_audio-gee051ba/kernel/drivers/input/touchscreen/stm/ftm5.ko<br>  lib/modules/4.9.210-gdee0d123_audio-gee051ba/kernel/drivers/input/touchscreen/sec_ts/sec_touch.ko<br>  lib/modules/4.9.210-gdee0d123_audio-gee051ba/kernel/drivers/input/touchscreen/heatmap.ko<br>  lib/modules/4.9.210-gdee0d123_audio-gee051ba/kernel/drivers/media/v4l2-core/videobuf2-vmalloc.ko<br>  lib/modules/4.9.210-gdee0d123_audio-gee051ba/kernel/drivers/media/v4l2-core/videobuf2-memops.ko<br>  lib/modules/4.9.210-gdee0d123_audio-gee051ba/kernel/techpack/audio/soc/pinctrl-wcd.ko<br>  lib/modules/4.9.210-gdee0d123_audio-gee051ba/kernel/techpack/audio/ipc/wcd-dsp-glink.ko<br>  lib/modules/4.9.210-gdee0d123_audio-gee051ba/kernel/techpack/audio/asoc/snd-soc-sdm845-max98927.ko<br>  lib/modules/4.9.210-gdee0d123_audio-gee051ba/kernel/techpack/audio/asoc/codecs/snd-soc-wcd9xxx.ko<br>  lib/modules/4.9.210-gdee0d123_audio-gee051ba/kernel/techpack/audio/asoc/codecs/snd-soc-cs35l36.ko<br>  lib/modules/4.9.210-gdee0d123_audio-gee051ba/kernel/techpack/audio/asoc/codecs/wcd-core.ko<br>  lib/modules/4.9.210-gdee0d123_audio-gee051ba/kernel/techpack/audio/asoc/codecs/snd-soc-wcd-spi.ko<br>  lib/modules/4.9.210-gdee0d123_audio-gee051ba/kernel/techpack/audio/asoc/codecs/wcd934x/snd-soc-wcd934x.ko<br>  lib/modules/4.9.210-gdee0d123_audio-gee051ba/kernel/techpack/audio/asoc/snd-soc-sdm845.ko<br>========================================================<br> Files copied to /home/huangqw/code/kernel/out/android-msm-pixel-4.9/dist<br></code></pre></td></tr></table></figure><h3 id="2-2-编译kernel报错"><a href="#2-2-编译kernel报错" class="headerlink" title="2.2 编译kernel报错"></a>2.2 编译kernel报错</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash">/home/huangqw/code/kernel/private/msm-google/scripts/extract-cert.c:21:10: fatal error: <span class="hljs-string">&#x27;openssl/bio.h&#x27;</span> file not found<br><span class="hljs-comment">#include &lt;openssl/bio.h&gt;</span><br>         ^~~~~~~~~~~~~~~<br>1 error generated.<br>scripts/Makefile.host:101: recipe <span class="hljs-keyword">for</span> target <span class="hljs-string">&#x27;scripts/extract-cert&#x27;</span> failed<br>make[3]: *** [scripts/extract-cert] Error 1<br>make[3]: *** Waiting <span class="hljs-keyword">for</span> unfinished <span class="hljs-built_in">jobs</span>....<br></code></pre></td></tr></table></figure><p>解决：sudo apt-get install libssl-dev</p><h3 id="2-3-打包boot-img"><a href="#2-3-打包boot-img" class="headerlink" title="2.3 打包boot.img"></a>2.3 打包boot.img</h3><p>切换到android11源码目录，将TARGET_PREBUILT_KERNEL设置为kernel生成的Image.lz4文件的路径，官方文档提到的是Image.lz4-dtb，不用理会，android11生成的是Image.lz4。而且不单单是设置这个文件，整个out文件夹都会关联过去。<br>可以用<code>get_build_var BOARD_VENDOR_KERNEL_MODULES</code>命令查看对应的编译环境变量</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs log">~/code/android11$ source build/envsetup.sh<br>~/code/android11$ lunch aosp_blueline-userdebug<br>~/code/android11$ export TARGET_PREBUILT_KERNEL=/home/huangqw/code/kernel/out/android-msm-pixel-4.9/dist/Image.lz4<br>~/code/android11$ make -j16 bootimage<br>  PRODUCT_SOONG_NAMESPACES=device/google/crosshatch hardware/google/av hardware/google/camera hardware/google/interfaces hardware/google/pixel hardware/qcom/sdm845 vendor/google/camera vendor/qcom/sdm845 vendor/google/interfaces vendor/qcom/blueline/proprietary<br>  ============================================<br>  Environment variable TARGET_PREBUILT_KERNEL was modified ( =&gt; /home/huangqw/code/kernel/out/android-msm-pixel-4.9/dist/Image.lz4), regenerating...<br>  Environment variable TARGET_PREBUILT_KERNEL was modified ( =&gt; /home/huangqw/code/kernel/out/android-msm-pixel-4.9/dist/Image.lz4), regenerating...<br>  [100% 222/222] Target boot image from recovery: out/target/product/blueline/boot.img<br><br>#### build completed successfully (01:02 (mm:ss)) ####<br></code></pre></td></tr></table></figure><p>生成out&#x2F;target&#x2F;product&#x2F;blueline&#x2F;boot.img文件，如要重新编译原来的内核，将<code>export TARGET_PREBUILT_KERNEL=</code>置空重新编译就行</p><h2 id="三，烧录"><a href="#三，烧录" class="headerlink" title="三，烧录"></a>三，烧录</h2><h3 id="3-1-【重要】-先push生成的ko文件到-vendor-lib-modules下"><a href="#3-1-【重要】-先push生成的ko文件到-vendor-lib-modules下" class="headerlink" title="3.1 【重要】 先push生成的ko文件到&#x2F;vendor&#x2F;lib&#x2F;modules下"></a>3.1 <strong>【重要】</strong> 先push生成的ko文件到&#x2F;vendor&#x2F;lib&#x2F;modules下</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs awk">adb root<br>adb remount -R<br>adb push ..<span class="hljs-regexp">/kernel/</span>out<span class="hljs-regexp">/android-msm-pixel-4.9/</span>dist<span class="hljs-regexp">/*.ko /</span>vendor<span class="hljs-regexp">/lib/m</span>odules<br></code></pre></td></tr></table></figure><h3 id="3-2-fastboot-更新bootimg"><a href="#3-2-fastboot-更新bootimg" class="headerlink" title="3.2 fastboot 更新bootimg"></a>3.2 fastboot 更新bootimg</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">adb reboot bootloader           <span class="hljs-comment">## 进入bootloader模式</span><br>fastboot boot boot.img          <span class="hljs-comment">## 从新内核启动，但不烧录，重启会失效</span><br>fastboot flash boot boot.img    <span class="hljs-comment">## 烧录新内核</span><br></code></pre></td></tr></table></figure><h3 id="3-3-烧录dtbo-img"><a href="#3-3-烧录dtbo-img" class="headerlink" title="3.3 烧录dtbo.img"></a>3.3 烧录dtbo.img</h3><p>如果修改了设备树，还需要烧录dtbo.img，生成在kernel\out\android-msm-pixel-4.9\dist\dtbo.img</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">fastboot flash dtbo dtbo.img<br></code></pre></td></tr></table></figure><h2 id="四，验证"><a href="#四，验证" class="headerlink" title="四，验证"></a>四，验证</h2><h3 id="4-1-查看内核版本"><a href="#4-1-查看内核版本" class="headerlink" title="4.1 查看内核版本"></a>4.1 查看内核版本</h3><p>手机内：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">adb</span> shell cat /proc/version<br><span class="hljs-attribute">Linux</span> version <span class="hljs-number">4</span>.<span class="hljs-number">9</span>.<span class="hljs-number">223</span>-g5bded8e40b62-ab6647920 (android-build@abfarm-us-west1-c-<span class="hljs-number">0040</span>) (Android (<span class="hljs-number">6443078</span> based <span class="hljs-literal">on</span> r383902) clang version <span class="hljs-number">11</span>.<span class="hljs-number">0</span>.<span class="hljs-number">1</span> (https://android.googlesource.com/toolchain/llvm-project b397f81060ce6d701042b782172ed13bee898b79)) #<span class="hljs-number">0</span> SMP PREEMPT Thu Jul <span class="hljs-number">2</span> <span class="hljs-number">03</span>:<span class="hljs-number">22</span>:<span class="hljs-number">48</span> UTC <span class="hljs-number">2020</span><br><span class="hljs-attribute">android</span>-msm-crosshatch-<span class="hljs-number">4</span>.<span class="hljs-number">9</span>-r-beta-<span class="hljs-number">3</span><br></code></pre></td></tr></table></figure><p>编译生成的：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">grep</span> -a &#x27;Linux version&#x27; Image.lz4<br><span class="hljs-attribute">Linux</span> version <span class="hljs-number">4</span>.<span class="hljs-number">9</span>.<span class="hljs-number">232</span> ...<br></code></pre></td></tr></table></figure><h2 id="五，总结"><a href="#五，总结" class="headerlink" title="五，总结"></a>五，总结</h2><p>本文成文于21年初，当时并没有研究linux内核的计划，花了一个下午时间简单尝试下，失败了就没继续，没想到本文对一些朋友造成困扰，Kyr1os同学还特地发邮件来提供正确的方法。现在重新操作了一遍，确认了方法可行。kernel分支直接使用官方页面上最新的就行，我重新编译使用的是android-msm-crosshatch-4.9-android12分支，可以正常运行。<br>由于ko文件是打包进vendor.img的，每个分支官方都会提供。尝试了下，自己编译的vendor.img无法开机，解包后再打包也未成功，就不再折腾。如果需要提前预置好ko文件，可以打包进system.img或者在内核里将这些ko模块预置。</p><h2 id="附-Android-7-1上编译kernel"><a href="#附-Android-7-1上编译kernel" class="headerlink" title="附: Android 7.1上编译kernel"></a>附: Android 7.1上编译kernel</h2><p>之前在pixel 3 Android 11 折腾无果后，想起之前有在pixel 1 Android7.1上有编译过kernel, 电脑里也有环境，简单再尝试一下。</p><h3 id="编译和下载"><a href="#编译和下载" class="headerlink" title="编译和下载"></a>编译和下载</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> kernel<br>git <span class="hljs-built_in">clone</span> --depth 1 https://aosp.tuna.tsinghua.edu.cn/kernel/msm.git -b android-msm-marlin-3.18-nougat-mr2<br><span class="hljs-built_in">cd</span> msm<br><span class="hljs-built_in">export</span> PATH=<span class="hljs-variable">$PATH</span>:/home/huangqw/code/aosp/prebuilts/gcc/linux-x86/arm/arm-linux-androideabi-4.9/bin<br><span class="hljs-built_in">export</span> ARCH=arm64<br><span class="hljs-built_in">export</span> CROSS_COMPILE=aarch64-linux-android-<br><span class="hljs-built_in">export</span> SUBARCH=arm64<br>make marlin_defconfig<br>make -j16<br>croot<br><span class="hljs-built_in">source</span> build/envsetup.sh<br>lunch aosp_sailfish-userdebug<br><span class="hljs-built_in">export</span> TARGET_PREBUILT_KERNEL=/home/huangqw/code/aosp/kernel/msm/arch/arm64/boot/Image.gz-dtb<br>make bootimage<br></code></pre></td></tr></table></figure><h3 id="烧录"><a href="#烧录" class="headerlink" title="烧录"></a>烧录</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">adb reboot bootloader <br>fastboot flash boot boot.img <br></code></pre></td></tr></table></figure><h3 id="重启后查看内核信息"><a href="#重启后查看内核信息" class="headerlink" title="重启后查看内核信息"></a>重启后查看内核信息</h3><p>烧录前  </p><figure class="highlight tcl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs tcl">$ adb shell cat /<span class="hljs-keyword">proc</span>/version<span class="hljs-title"></span><br><span class="hljs-title">Linux</span> version 3.18.31-g086ab5b (android-build@vpbs30.mtv.corp.google.com) (gcc<span class="hljs-title"> version</span> 4.9.x 20150123 (prerelease) (GCC) ) #1<span class="hljs-title"> SMP</span> PREEMPT<span class="hljs-title"> Thu</span> Feb 16 00:50:36<span class="hljs-title"> UTC</span> 2017  <br></code></pre></td></tr></table></figure><p>烧录后  </p><figure class="highlight tcl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs tcl">$ adb shell cat /<span class="hljs-keyword">proc</span>/version<span class="hljs-title"></span><br><span class="hljs-title">Linux</span> version 3.18.31-g6309b4bd (huangqw@DESKTOP-14RLEFF) (gcc<span class="hljs-title"> version</span> 4.9 20150123 (prerelease) (GCC) ) #1<span class="hljs-title"> SMP</span> PREEMPT<span class="hljs-title"> Fri</span> Jan 1 17:20:52<span class="hljs-title"> CST</span> 2021<br></code></pre></td></tr></table></figure><blockquote><p>操作系统：Windows 10 专业版 19042.685<br>编译机：WSL2 Ubuntu-18.04<br>手机：Google Pixel 3 Android 11<br>源码版本：kernel android-msm-crosshatch-4.9-android11</p></blockquote><blockquote><p>参考1: <a href="https://source.android.com/setup/build/building-kernels">构建内核  |  Android 开源项目  |  Android Open Source Project</a><br>参考2: <a href="https://groups.google.com/g/android-building/c/ou630PviyDc">Touchscreen not working after building and flashing clean msm kernel for the Google Pixel blueline</a></p></blockquote>]]></content>
    
    
    <categories>
      
      <category>工具使用</category>
      
    </categories>
    
    
    <tags>
      
      <tag>教程</tag>
      
      <tag>Android系统</tag>
      
      <tag>Linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Pixel 3上Android 11源码下载，编译与烧录</title>
    <link href="/2021/01/01/aosp-build/"/>
    <url>/2021/01/01/aosp-build/</url>
    
    <content type="html"><![CDATA[<blockquote><p>操作系统：Windows 10 专业版 19042.685<br>编译机：WSL2 Ubuntu-18.04<br>手机：Google Pixel 3<br>源码版本：AOSP android-11.0.0_r1 </p></blockquote><p>研究Android系统最好有一套AOSP源码和一台可以编译运行的机器，下面是我Google Pixel 3上编译官方源码的过程记录。</p><h2 id="一，源码下载"><a href="#一，源码下载" class="headerlink" title="一，源码下载"></a>一，源码下载</h2><h3 id="1-1-AOSP源码下载"><a href="#1-1-AOSP源码下载" class="headerlink" title="1.1 AOSP源码下载"></a>1.1 AOSP源码下载</h3><p>将Google的地址<code>https://android.googlesource.com/kernel/manifest</code>替换清华的地址<code>https://aosp.tuna.tsinghua.edu.cn/platform/manifest</code>下载速度更快<br>加 <code>--depth 1</code> 控制git深度可以极大节省硬盘空间。最终.repo目录21G左右  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">export</span> REPO_URL=<span class="hljs-string">&#x27;https://mirrors.tuna.tsinghua.edu.cn/git/git-repo&#x27;</span><br>repo init --depth 1 -u https://aosp.tuna.tsinghua.edu.cn/platform/manifest -b android-11.0.0_r1 <br>repo <span class="hljs-built_in">sync</span> -j20<br></code></pre></td></tr></table></figure><h3 id="1-2-pixel-3专有硬件库下载"><a href="#1-2-pixel-3专有硬件库下载" class="headerlink" title="1.2 pixel 3专有硬件库下载"></a>1.2 pixel 3专有硬件库下载</h3><p>Android 11上不加硬件库会导致刷机后无限重启，但之前pixel 1时没有硬件库也能启动，这里踩了一个坑。<br>记得匹配好对应的BUILD_ID和代码, 查看build&#x2F;core&#x2F;build_id.mk文件，我的BUILD_ID&#x3D;RP1A.200720.009，pixel 3的代号是blueline，所以对应的下载地址是：<br><a href="https://developers.google.cn/android/drivers?hl=zh-cn#bluelinerp1a.200720.009">https://developers.google.cn/android/drivers?hl=zh-cn#bluelinerp1a.200720.009</a><br>将两个文件下载到源码根目录，然后执行，会自动生成vendor文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">~/code/android11$ tar zxvf google_devices-blueline-rp1a.200720.009-6cd41940.tgz<br>~/code/android11$ tar zxvf qcom-blueline-rp1a.200720.009-f772c38c.tgz<br>~/code/android11$ ./extract-google_devices-blueline.sh<br>~/code/android11$ ./extract-qcom-blueline.sh<br></code></pre></td></tr></table></figure><h2 id="二，编译"><a href="#二，编译" class="headerlink" title="二，编译"></a>二，编译</h2><h3 id="2-1-编译环境"><a href="#2-1-编译环境" class="headerlink" title="2.1 编译环境"></a>2.1 编译环境</h3><p>编译环境搭建参考官方文档：<a href="https://source.android.com/setup/build/initializing">https://source.android.com/setup/build/initializing</a><br>我用的win10应用市场下载的wsl2 ubuntu-18.04的虚拟机，挺好用的，不过比较耗内存，建议将内存加到32G</p><h3 id="2-2-编译"><a href="#2-2-编译" class="headerlink" title="2.2 编译"></a>2.2 编译</h3><p>i5-9600k的机器耗时3个小时，有点久。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs bash">~/code/android11$ <span class="hljs-built_in">source</span> build/envsetup.sh<br>~/code/android11$ lunch aosp_blueline-userdebug<br>~/code/android11$ make -j16<br>...<br>[ 99% 90776/91631] //frameworks/base/packages/SystemUI:SystemUI r8 [common]<br>Invalid descriptor (deserialized from Kotlin @Metadata): (LLandroid/animation/Animator;;)L;<br>Invalid descriptor (deserialized from Kotlin @Metadata): (LLandroid/animation/Animator;;)L;<br>[ 99% 91145/91631] //art/build/apex:art-check-debug-apex-gen generate art-check-debug-apex-gen.dummy<br>--bitness=auto, trying to autodetect. This may be incorrect!<br>  Detected multilib<br>[100% 91631/91631] build out/target/product/blueline/obj/PACKAGING/check-all-partition-sizes_intermediates/check_all_partition_sizes_log<br><br><span class="hljs-comment">#### build completed successfully (02:55:07 (hh:mm:ss)) ####</span><br><br></code></pre></td></tr></table></figure><h2 id="三，烧录"><a href="#三，烧录" class="headerlink" title="三，烧录"></a>三，烧录</h2><h3 id="3-1-解锁OEM"><a href="#3-1-解锁OEM" class="headerlink" title="3.1 解锁OEM"></a>3.1 解锁OEM</h3><p>在开发者选项里打开<code>OEM unlocking</code>选项，如果置灰连上外网看看。如果是有锁的机器尝试找第三方解锁。</p><h3 id="3-2-bootloader解锁"><a href="#3-2-bootloader解锁" class="headerlink" title="3.2 bootloader解锁"></a>3.2 bootloader解锁</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">~/code/android11$ adb reboot bootloader<br>~/code/android11$ fashboot devices<br>xxxxxx<br>~/code/android11$ fastboot flashing unlock<br>~/code/android11$ fastboot reboot<br></code></pre></td></tr></table></figure><h3 id="3-3-烧录"><a href="#3-3-烧录" class="headerlink" title="3.3 烧录"></a>3.3 烧录</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash">~/code/android11$ <span class="hljs-built_in">export</span> ANDROID_PRODUCT_OUT=./out/target/product/blueline<br>~/code/android11$ fastboot flashall -w<br>...<br>File system <span class="hljs-built_in">type</span> raw not supported.<br>Erasing <span class="hljs-string">&#x27;metadata&#x27;</span>                                 OKAY [  0.007s]<br>Erase successful, but not automatically formatting.<br>File system <span class="hljs-built_in">type</span> raw not supported.<br>Rebooting                                          OKAY [  0.000s]<br>Finished. Total <span class="hljs-keyword">time</span>: 101.511s<br><br></code></pre></td></tr></table></figure><p><img src="/img/blog/pixel3_aosp.png" alt="pixel 3"> </p>]]></content>
    
    
    <categories>
      
      <category>工具使用</category>
      
    </categories>
    
    
    <tags>
      
      <tag>教程</tag>
      
      <tag>Android系统</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
